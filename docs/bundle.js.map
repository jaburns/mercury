{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/main.ts","webpack:///./src/vector-caves.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","postInitters","vector-caves","initPost","window","Rand","seed","this","M","Math","random","next","A","C","WriteGrid","width","height","vals","Array","write","x","y","val","at","copyFrom","grid","findGrid","test","iterateGrid","fn","mapGrid","result","getNeighborhood","map","nx","ny","floodFill","replace","count","tile","events","listener","ctx","document","getElementById","getContext","seedSlider","popSlider","genSlider","ctx2","ctx3","update","population","birth","survival","iterations","buffer","rand","fill","neighbors","generate","parseInt","parseFloat","fillStyle","fillRect","coloredGrid","bigColor","color","largestColor","largestRegion","pos","size","colorGridRegions","gridColorForNumber","filledMap","forEach","e"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import { initPost as initPost_vectorCaves } from './vector-caves';\r\n\r\nconst postInitters: {[key: string]: () => void} = {\r\n    'vector-caves': initPost_vectorCaves\r\n};\r\n\r\n(window as any).initPost = (name: string): void =>\r\n    postInitters[name]();","class Rand {\r\n    private static readonly M = 4294967296;\r\n    private static readonly A = 1664525;\r\n    private static readonly C = 1013904223;\r\n\r\n    private seed: number;\r\n\r\n    constructor(seed?: number) {\r\n        this.seed = typeof seed === 'undefined'\r\n            ? Rand.M * Math.random()\r\n            : seed;\r\n    }\r\n\r\n    next(): void {\r\n        this.seed = (Rand.A * this.seed + Rand.C) % Rand.M;\r\n    }\r\n\r\n    value(): number {\r\n        return this.seed / Rand.M;\r\n    }\r\n}\r\n\r\ninterface Grid<T> {\r\n    readonly width: number;\r\n    readonly height: number;\r\n    at(x: number, y: number): T;\r\n}\r\n\r\ntype GridCallback<T> = (x: number, y: number, val: T) => void;\r\ntype GridMapper<T,U> = (x: number, y: number, val: T) => U;\r\n\r\nclass WriteGrid<T> implements Grid<T> {\r\n    public readonly width: number;\r\n    public readonly height: number;\r\n\r\n    private vals: T[];\r\n\r\n    constructor(width: number, height: number) {\r\n        this.width = width;\r\n        this.height = height;\r\n        this.vals = new Array(width * height);\r\n    }\r\n\r\n    write(x: number, y: number, val: T): void {\r\n        this.vals[x + y*this.width] = val;\r\n    }\r\n\r\n    at(x: number, y: number): T {\r\n        return this.vals[x + y*this.width];\r\n    }\r\n\r\n    copyFrom(grid: Grid<T>): void {\r\n        for (let x = 0; x < this.width && x < grid.width; ++x) {\r\n            for (let y = 0; y < this.height && y < grid.height; ++y) {\r\n                this.write(x, y, grid.at(x, y));\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nconst findGrid = <T>(grid: Grid<T>, test: GridMapper<T, boolean>): { x: number, y: number } | null => {\r\n    for (let x = 0; x < grid.width; ++x) {\r\n        for (let y = 0; y < grid.height; ++y) {\r\n            if (test(x, y, grid.at(x, y))) {\r\n                return { x, y };\r\n            }\r\n        }\r\n    }\r\n    return null;\r\n};\r\n\r\nconst iterateGrid = <T>(grid: Grid<T>, fn: GridCallback<T>): void => {\r\n    for (let x = 0; x < grid.width; ++x) {\r\n        for (let y = 0; y < grid.height; ++y) {\r\n            fn(x, y, grid.at(x, y));\r\n        }\r\n    }\r\n};\r\n\r\nconst mapGrid = <T, U>(grid: Grid<T>, fn: GridMapper<T, U>): WriteGrid<U> => {\r\n    const result = new WriteGrid<U>(grid.width, grid.height);\r\n\r\n    for (let x = 0; x < grid.width; ++x) {\r\n        for (let y = 0; y < grid.height; ++y) {\r\n            result.write(x, y, fn(x, y, grid.at(x, y)));\r\n        }\r\n    }\r\n\r\n    return result;\r\n};\r\n\r\nconst getNeighborhood = (map: Grid<boolean>, x: number, y: number): number => {\r\n    let result: number = 0;\r\n\r\n    for (let nx = x-1; nx <= x+1; ++nx) {\r\n        for (let ny = y-1; ny <= y+1; ++ny) {\r\n            if (nx == x && ny == y) continue;\r\n            if (nx < 1 || ny < 1 || nx >= map.width-1 || ny >= map.height-1) result++;\r\n            else result += map.at(nx,ny) ? 1 : 0;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nconst generate = (width: number, height: number, seed: number, population: number, birth: number, survival: number, iterations: number): Grid<boolean> => {\r\n    const result = new WriteGrid<boolean>(width, height);\r\n    const buffer = new WriteGrid<boolean>(width, height);\r\n    const rand = new Rand(seed);\r\n\r\n    for (let x = 0; x < width; ++x) {\r\n        for (let y = 0; y < height; ++y) {\r\n            const fill = x === 0 || y === 0 || x === width-1 || y === height-1 || rand.value() < population;\r\n            result.write(x, y, fill);\r\n            buffer.write(x, y, fill);\r\n            rand.next();\r\n        }\r\n    }\r\n\r\n    for (let i = 0; i < iterations; ++i) {\r\n        for (let x = 1; x < width-1; ++x) {\r\n            for (let y = 1; y < height-1; ++y) {\r\n                const neighbors = getNeighborhood(result, x, y);\r\n                buffer.write(x, y, neighbors >= (result.at(x, y) ? survival : birth));\r\n            }\r\n        }\r\n        result.copyFrom(buffer);\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nconst floodFill = (grid: WriteGrid<number>, x: number, y: number, replace: number, value: number, count: number): number => {\r\n    if (x < 0 || y < 0) return count;\r\n    if (x >= grid.width || y >= grid.height) return count;\r\n\r\n    const tile = grid.at(x, y);\r\n\r\n    if (tile === value) return count;\r\n    if (tile !== replace) return count;\r\n\r\n    grid.write(x, y, value);\r\n    count++;\r\n\r\n    count = floodFill(grid, x - 1, y, replace, value, count);\r\n    count = floodFill(grid, x + 1, y, replace, value, count);\r\n    count = floodFill(grid, x, y - 1, replace, value, count);\r\n    count = floodFill(grid, x, y + 1, replace, value, count);\r\n\r\n    return count;\r\n};\r\n\r\nconst colorGridRegions = (grid: WriteGrid<number>): number => {\r\n    let color = 1;\r\n    let largestColor = -1;\r\n    let largestRegion = 0;\r\n\r\n    while (true) {\r\n        const pos = findGrid(grid, (x, y, val) => val === 0);\r\n        if (pos === null) return largestColor;\r\n\r\n        const size = floodFill(grid, pos.x, pos.y, 0, color, 0);\r\n\r\n        if (size > largestRegion) {\r\n            largestRegion = size;\r\n            largestColor = color;\r\n        }\r\n\r\n        color++;\r\n    }\r\n};\r\n\r\n\r\nconst gridColorForNumber = (n: number): string => {\r\n    if (n < 0) return '#000';\r\n    switch (n % 6) {\r\n        case  0: return '#F00';\r\n        case  1: return '#0F0';\r\n        case  2: return '#00F';\r\n        case  3: return '#0FF';\r\n        case  4: return '#F0F';\r\n        case  5: return '#FF0';\r\n    }\r\n    return '';\r\n};\r\n\r\nconst multibind = (objs: any[], events: string[], listener: Function): void => {\r\n    objs.forEach(o => {\r\n        events.forEach(e => {\r\n            o[e] = listener;\r\n        });\r\n    });\r\n};\r\n\r\nexport const initPost = () :void => {\r\n    const firstCanvas = document.getElementById('first-canvas') as HTMLCanvasElement;\r\n    const ctx = firstCanvas.getContext('2d') as CanvasRenderingContext2D;\r\n\r\n    const seedSlider = document.getElementById('seed-slider') as HTMLInputElement;\r\n    const popSlider = document.getElementById('pop-slider') as HTMLInputElement;\r\n    const genSlider = document.getElementById('gen-slider') as HTMLInputElement;\r\n\r\n    const secondCanvas = document.getElementById('second-canvas') as HTMLCanvasElement;\r\n    const ctx2 = secondCanvas.getContext('2d') as CanvasRenderingContext2D;\r\n\r\n    const thirdCanvas = document.getElementById('third-canvas') as HTMLCanvasElement;\r\n    const ctx3 = thirdCanvas.getContext('2d') as CanvasRenderingContext2D;\r\n\r\n    const update = () :void => {\r\n        const grid = generate(\r\n            75, 75,\r\n            parseInt(seedSlider.value),\r\n            parseFloat(popSlider.value),\r\n            5, 4,\r\n            parseInt(genSlider.value)\r\n        );\r\n\r\n        iterateGrid(grid, (x, y, val) => {\r\n            ctx.fillStyle = val ? '#000' : '#FFF';\r\n            ctx.fillRect(4*x, 4*y, 4, 4);\r\n        });\r\n\r\n        const coloredGrid = mapGrid(grid, (x, y, val) => val ? -1 : 0);\r\n        const bigColor = colorGridRegions(coloredGrid);\r\n\r\n        iterateGrid(coloredGrid, (x, y, val) => {\r\n            ctx2.fillStyle = gridColorForNumber(val);\r\n            ctx2.fillRect(4*x, 4*y, 4, 4);\r\n        });\r\n\r\n        const filledMap = mapGrid(coloredGrid, (x, y, val) => val !== bigColor);\r\n\r\n        iterateGrid(filledMap, (x, y, val) => {\r\n            ctx3.fillStyle = val ? '#000' : '#FFF';\r\n            ctx3.fillRect(4*x, 4*y, 4, 4);\r\n        });\r\n    };\r\n\r\n    multibind(\r\n        [popSlider, genSlider, seedSlider],\r\n        ['oninput', 'onchange'],\r\n        update\r\n    );\r\n    update();\r\n};"],"sourceRoot":""}