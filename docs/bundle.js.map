{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/utils/grid.ts","webpack:///./src/utils/math.ts","webpack:///./src/index.ts","webpack:///./src/pages/vector-caves.ts","webpack:///./src/caveGenerator/automaton.ts","webpack:///./src/utils/prng.ts","webpack:///./src/caveGenerator/findContours.ts","webpack:///./src/caveGenerator/smoothCurve.ts","webpack:///./src/caveGenerator/triangulate.ts","webpack:///./src/pages/page2-webgl.ts","webpack:///./src/webgl/shaderLoader.ts","webpack:///./src/caveGenerator/index.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","WriteGrid","width","height","this","vals","Array","write","x","y","val","at","copyFrom","grid","safeOutOfBounds","oobValue","GridTool","find","test","forEach","fn","map","result","V2","add","a","b","plus","minus","length","Math","sqrt","scaled","RectTool","area","xmax","xmin","ymax","ymin","smallestDifferenceRadians","PI","abs","findBounds","pts","Infinity","vector_caves_1","page2_webgl_1","postInitters","vector-caves","initPost","page2-webgl","window","__export","prng_1","grid_1","getNeighborhood","nx","ny","runCellularAutomaton","seed","population","birth","survival","iterations","buffer","rand","nextRandom01","fill","neighbors","M","prevRandom01","floor","WalkedStatus","math_1","markEdges","kind","normal","u","findContours","spaceInsurance","walkMap","_","Unwalked","contours","iter","newContour","findOneContour","push","bestCandidate","prev","candidates","minVal","minI","freshStart","findFreshContour","points","lastCan","dx","dy","lastStatus","Walked","newStatus","WalkedImportant","smoothCurve","input","resolution","curviness","curr","next","lenA","lenB","midA","midB","midDiff","diffA","diffB","pt","controlA","controlB","inc","newVal","triangulate","indices","V","v","nv","count","w","snip","A","q","inside_triangle","B","C","P","ax","ay","bx","by","cx","cy","apx","apy","bpx","bpy","cpx","cpy","shaderLoader_1","canvas","document","getElementById","gl","getContext","viewport","cullFace","BACK","Promise","all","loadShader","then","_a","prog0","prog1","fbo","createFramebuffer","bindFramebuffer","FRAMEBUFFER","texture","createTexture","bindTexture","TEXTURE_2D","texImage2D","RGB","UNSIGNED_BYTE","texParameteri","TEXTURE_MIN_FILTER","LINEAR","TEXTURE_MAG_FILTER","framebufferTexture2D","COLOR_ATTACHMENT0","clearColor","clear","COLOR_BUFFER_BIT","vertexBuf","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","Float32Array","STATIC_DRAW","useProgram","coord","getAttribLocation","vertexAttribPointer","FLOAT","enableVertexAttribArray","drawArrays","TRIANGLES","console","log","url","fetch","response","ok","Error","status","text","shader","body","vertShader","createShader","VERTEX_SHADER","shaderSource","compileShader","vertLog","getShaderInfoLog","fragShader","FRAGMENT_SHADER","fragLog","prog","createProgram","attachShader","linkProgram","buildProgram","automaton_1","findContours_1","smoothCurve_1","triangulate_1","floodFill","replace","tile","randomColorHex","randPair","ret","random","toString","colors","events","listener","ctx","seedSlider","popSlider","genSlider","insuranceSlider","curvinessSlider","qualitySlider","ctx2","ctx3","ctx4","ctx5","ctx6","ctx7","ctx8","ctx9","update","parseInt","parseFloat","fillStyle","fillRect","coloredGrid","bigColor","color","largestColor","largestRegion","pos","size","colorGridRegions","filledMap","fixSingleTileBridges","edgeMarkedMap","degs","cos","sin","hx","round","hy","gridColorForNormal","outerIndex","sort","strokeStyle","i_1","j","beginPath","moveTo","lineTo","stroke","smoothContours","i_2","topLeftPtI","len","topLeftPt","topLeftPrevPt","arc","bumpDownAmount","splice","tris","ts","e"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","export interface Grid<T> {\r\n    readonly width: number;\r\n    readonly height: number;\r\n    at(x: number, y: number): T;\r\n}\r\n\r\nexport type GridCallback<T> = (x: number, y: number, val: T) => void;\r\nexport type GridMapper<T,U> = (x: number, y: number, val: T) => U;\r\n\r\nexport class WriteGrid<T> implements Grid<T> {\r\n    public readonly width: number;\r\n    public readonly height: number;\r\n\r\n    private vals: T[];\r\n\r\n    constructor(width: number, height: number) {\r\n        this.width = width;\r\n        this.height = height;\r\n        this.vals = new Array(width * height);\r\n    }\r\n\r\n    write(x: number, y: number, val: T): void {\r\n        this.vals[x + y*this.width] = val;\r\n    }\r\n\r\n    at(x: number, y: number): T {\r\n        return this.vals[x + y*this.width];\r\n    }\r\n\r\n    copyFrom(grid: Grid<T>): void {\r\n        for (let x = 0; x < this.width && x < grid.width; ++x) {\r\n            for (let y = 0; y < this.height && y < grid.height; ++y) {\r\n                this.write(x, y, grid.at(x, y));\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport const safeOutOfBounds = <T>(grid: Grid<T>, oobValue: T): Grid<T> => ({\r\n    width: grid.width,\r\n    height: grid.height,\r\n    at: (x, y) => x < 0 || y < 0 || x >= grid.width || y >= grid.width ? oobValue : grid.at(x, y)\r\n});\r\n\r\nexport const GridTool = {\r\n    find: <T>(grid: Grid<T>, test: GridMapper<T, boolean>): { x: number, y: number } | null => {\r\n        for (let x = 0; x < grid.width; ++x) {\r\n            for (let y = 0; y < grid.height; ++y) {\r\n                if (test(x, y, grid.at(x, y))) {\r\n                    return { x, y };\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    },\r\n\r\n    forEach: <T>(grid: Grid<T>, fn: GridCallback<T>): void => {\r\n        for (let x = 0; x < grid.width; ++x) {\r\n            for (let y = 0; y < grid.height; ++y) {\r\n                fn(x, y, grid.at(x, y));\r\n            }\r\n        }\r\n    },\r\n\r\n    map: <T, U>(grid: Grid<T>, fn: GridMapper<T, U>): WriteGrid<U> => {\r\n        const result = new WriteGrid<U>(grid.width, grid.height);\r\n\r\n        for (let x = 0; x < grid.width; ++x) {\r\n            for (let y = 0; y < grid.height; ++y) {\r\n                result.write(x, y, fn(x, y, grid.at(x, y)));\r\n            }\r\n        }\r\n\r\n        return result;\r\n    },\r\n};","export interface Vec2 {\r\n    x: number,\r\n    y: number,\r\n}\r\n\r\nexport interface Rect {\r\n    xmin: number,\r\n    ymin: number,\r\n    xmax: number,\r\n    ymax: number,\r\n}\r\n\r\nexport const V2 = {\r\n    add: (a: Vec2, b: Vec2): void => {\r\n        a.x += b.x;\r\n        a.y += b.y;\r\n    },\r\n\r\n    plus: (a: Vec2, b: Vec2): Vec2 => ({\r\n        x: a.x + b.x,\r\n        y: a.y + b.y,\r\n    }),\r\n\r\n    minus: (a: Vec2, b: Vec2): Vec2 => ({\r\n        x: a.x - b.x,\r\n        y: a.y - b.y,\r\n    }),\r\n\r\n    length: (a: Vec2): number =>\r\n        Math.sqrt(a.x*a.x + a.y*a.y),\r\n    \r\n    scaled: (a: Vec2, s: number): Vec2 => ({\r\n        x: s * a.x,\r\n        y: s * a.y,\r\n    }),\r\n};\r\n\r\nexport const RectTool = {\r\n    area: (r: Rect): number =>\r\n        (r.xmax - r.xmin) * (r.ymax - r.ymin),\r\n};\r\n\r\nexport const smallestDifferenceRadians = (a: number, b: number): number => {\r\n    a %= 2 * Math.PI;\r\n    b %= 2 * Math.PI;\r\n\r\n    if (Math.abs(a - b) > Math.PI) {\r\n        if (a > 0) a -= 2 * Math.PI;\r\n        else a += 2 * Math.PI;\r\n    }\r\n\r\n    return a - b;\r\n};\r\n\r\nexport const findBounds = (pts: Vec2[]): Rect => {\r\n    const result: Rect = { xmin: Infinity, ymin: Infinity, xmax: -Infinity, ymax: -Infinity };\r\n\r\n    pts.forEach(p => {\r\n        if (p.x < result.xmin) result.xmin = p.x;\r\n        if (p.y < result.ymin) result.ymin = p.y;\r\n        if (p.x > result.xmax) result.xmax = p.x;\r\n        if (p.y > result.ymax) result.ymax = p.y;\r\n    });\r\n\r\n    return result;\r\n};","import { initPost as initPost_vectorCaves } from 'pages/vector-caves';\r\nimport { initPost as initPost_webgl } from 'pages/page2-webgl';\r\n\r\nconst postInitters: {[key: string]: () => void} = {\r\n    'vector-caves': initPost_vectorCaves,\r\n    'page2-webgl': initPost_webgl\r\n};\r\n\r\n(window as any).initPost = (name: string): void =>\r\n    postInitters[name]();","export * from 'caveGenerator';","import { nextRandom01 } from 'utils/prng';\r\nimport { WriteGrid, Grid } from 'utils/grid';\r\n\r\nconst getNeighborhood = (map: Grid<boolean>, x: number, y: number): number => {\r\n    let result: number = 0;\r\n\r\n    for (let nx = x-1; nx <= x+1; ++nx) {\r\n        for (let ny = y-1; ny <= y+1; ++ny) {\r\n            if (nx == x && ny == y) continue;\r\n            if (nx < 1 || ny < 1 || nx >= map.width-1 || ny >= map.height-1) result++;\r\n            else result += map.at(nx,ny) ? 1 : 0;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport const runCellularAutomaton = (width: number, height: number, seed: number, population: number, birth: number, survival: number, iterations: number): Grid<boolean> => {\r\n    const result = new WriteGrid<boolean>(width, height);\r\n    const buffer = new WriteGrid<boolean>(width, height);\r\n    let rand = nextRandom01(seed / 101);\r\n\r\n    for (let x = 0; x < width; ++x) {\r\n        for (let y = 0; y < height; ++y) {\r\n            const fill = x === 0 || y === 0 || x === width-1 || y === height-1 || rand < population;\r\n            result.write(x, y, fill);\r\n            buffer.write(x, y, fill);\r\n\r\n            rand = nextRandom01(rand);\r\n        }\r\n    }\r\n\r\n    for (let i = 0; i < iterations; ++i) {\r\n        for (let x = 1; x < width-1; ++x) {\r\n            for (let y = 1; y < height-1; ++y) {\r\n                const neighbors = getNeighborhood(result, x, y);\r\n                buffer.write(x, y, neighbors >= (result.at(x, y) ? survival : birth));\r\n            }\r\n        }\r\n        result.copyFrom(buffer);\r\n    }\r\n\r\n    return result;\r\n}","// https://en.wikipedia.org/wiki/Linear_congruential_generator\r\n\r\nconst M = 4294967296;\r\nconst A = 1664525;\r\nconst C = 1013904223;\r\n\r\nexport const nextRandom01 = (prevRandom01: number): number => \r\n    ((A * Math.floor(prevRandom01 * M) + C) % M) / M;","import { Grid, WriteGrid, GridTool, safeOutOfBounds } from 'utils/grid';\r\nimport { Vec2, smallestDifferenceRadians } from 'utils/math';\r\n\r\nexport interface EdgeMarkedMapTile {\r\n    kind: 'air' | 'dirt' | 'edge',\r\n    normal: number,\r\n}\r\n\r\nexport const markEdges = (grid: Grid<boolean>): WriteGrid<EdgeMarkedMapTile> => {\r\n    const result = GridTool.map(grid, (x, y, val): EdgeMarkedMapTile => \r\n        ({ kind: val ? 'dirt' : 'air', normal: 0 }));\r\n\r\n    for (let x = 0; x < grid.width; x++) {\r\n        for (let y = 0; y < grid.height; y++) {\r\n            if (!grid.at(x, y)) continue;\r\n\r\n            const l = x > 0               && !grid.at(x-1, y);\r\n            const r = x < grid.width - 2  && !grid.at(x+1, y);\r\n            const u = y > 0               && !grid.at(x, y-1);\r\n            const d = y < grid.height - 2 && !grid.at(x, y+1);\r\n\r\n            if (!l && !r && !u && !d) continue;\r\n\r\n            const normal = r && d ? 45 :\r\n                d && l ?  135 :\r\n                l && u ? -135 :\r\n                u && r ?  -45 :\r\n                r ? 0 :\r\n                d ? 90 :\r\n                l ? 180 :\r\n                -90;\r\n\r\n            result.write(x, y, { kind: 'edge', normal });\r\n        }\r\n    }\r\n\r\n    return result;\r\n};\r\n\r\nexport enum WalkedStatus {\r\n    Unwalked,\r\n    Walked,\r\n    WalkedImportant,\r\n}\r\n\r\ninterface WalkCandidate {\r\n    dx: number,\r\n    dy: number,\r\n    normal: number,\r\n}\r\n\r\ninterface GridPoint {\r\n    x: number,\r\n    y: number,\r\n}\r\n\r\nexport interface FindContoursResult {\r\n    contours: Vec2[][],\r\n    walkMap: WriteGrid<WalkedStatus>,\r\n}\r\n\r\nexport const findContours = (grid: Grid<EdgeMarkedMapTile>, spaceInsurance: 0 | 1 | 2): FindContoursResult => {\r\n    const MAX_ITER = 100;\r\n    const walkMap = GridTool.map(new WriteGrid<WalkedStatus>(grid.width, grid.height), _ => WalkedStatus.Unwalked);\r\n    const contours: Vec2[][] = [];\r\n\r\n    let iter = 0;\r\n    let newContour: Vec2[] | null = null;\r\n\r\n    do {\r\n        newContour = findOneContour(walkMap, grid, spaceInsurance);\r\n        if (newContour !== null && newContour.length > 2) {\r\n            contours.push(newContour);\r\n        }\r\n    } while (newContour != null && iter++ < MAX_ITER);\r\n\r\n    return { contours, walkMap };\r\n}\r\n\r\nconst findFreshContour = (walkMap: Grid<WalkedStatus>, grid: Grid<EdgeMarkedMapTile>): GridPoint | null => {\r\n    for (let x = 0; x < grid.width; x++) {\r\n        for (let y = 0; y < grid.height; y++) {\r\n            if (grid.at(x, y).kind === 'edge' && walkMap.at(x, y) === WalkedStatus.Unwalked) {\r\n                return { x, y };\r\n            }\r\n        }\r\n    }\r\n\r\n    return null;\r\n};\r\n\r\nconst bestCandidate = (prev: WalkCandidate, candidates: WalkCandidate[]): WalkCandidate => {\r\n    let minVal = 100;\r\n    let minI = 0;\r\n\r\n    for (let i = 0; i < candidates.length; ++i) {\r\n        const c = candidates[i];\r\n        const d = Math.abs(smallestDifferenceRadians(\r\n            c.normal * Math.PI / 180,\r\n            prev.normal * Math.PI / 180\r\n        ));\r\n\r\n        if (d < minVal) {\r\n            minVal = d;\r\n            minI = i;\r\n        }\r\n    }\r\n\r\n    return candidates[minI];\r\n};\r\n\r\nconst findOneContour = (walkMap: WriteGrid<WalkedStatus>, grid: Grid<EdgeMarkedMapTile>, spaceInsurance: 0 | 1 | 2): Vec2[] | null => {\r\n    const MAX_ITER = 5000;\r\n\r\n    const freshStart = findFreshContour(walkMap, grid);\r\n    if (freshStart === null) {\r\n        return null;\r\n    }\r\n\r\n    grid = safeOutOfBounds(grid, {kind: 'dirt', normal: 0} as EdgeMarkedMapTile);\r\n\r\n    const points: Vec2[] = [];\r\n    let x = freshStart.x;\r\n    let y = freshStart.y;\r\n\r\n    let iter = 0;\r\n    let lastCan: WalkCandidate = { dx: 0, dy: 0, normal: 0 };\r\n    let lastStatus = WalkedStatus.Walked;\r\n    let candidates: WalkCandidate[] = [];\r\n\r\n    do {\r\n        candidates = [];\r\n\r\n        for (let dx = -1; dx <= 1; dx++) {\r\n            for (let dy = -1; dy <= 1; dy++) {\r\n                if (dx === 0 && dy === 0) continue;\r\n                if (grid.at(x+dx, y+dy).kind === 'edge'\r\n                && walkMap.at(x+dx, y+dy) === WalkedStatus.Unwalked) {\r\n                    candidates.push({dx, dy, normal: grid.at(x+dx, y+dy).normal});\r\n                }\r\n            }\r\n        }\r\n\r\n        if (candidates.length > 0) {\r\n            const c = bestCandidate(lastCan, candidates);\r\n            x += c.dx;\r\n            y += c.dy;\r\n\r\n            let newStatus = WalkedStatus.Walked;\r\n            if (c.normal !== lastCan.normal) {\r\n                let important;\r\n                if (spaceInsurance === 0) {\r\n                    important = true;\r\n                } else if (spaceInsurance === 1) {\r\n                    important = c.dx != 0 && c.dy != 0 || lastStatus != WalkedStatus.WalkedImportant;\r\n                } else {\r\n                    important = lastStatus != WalkedStatus.WalkedImportant;\r\n                }\r\n\r\n                if (important) {\r\n                    newStatus = WalkedStatus.WalkedImportant;\r\n                }\r\n            }\r\n\r\n            if (newStatus === WalkedStatus.WalkedImportant) {\r\n                points.push({\r\n                    x: (x + 0.5)/grid.width - 0.5,\r\n                    y: (y + 0.5)/grid.height - 0.5,\r\n                });\r\n            }\r\n\r\n            walkMap.write(x, y, newStatus);\r\n            lastStatus = newStatus;\r\n            lastCan = c;\r\n        }\r\n    }\r\n    while (candidates.length > 0 && iter++ < MAX_ITER);\r\n\r\n    return points;\r\n};","import { Vec2, V2 } from 'utils/math';\r\n\r\ninterface Pt {\r\n    pt: Vec2,\r\n    controlA: Vec2,\r\n    controlB: Vec2,\r\n}\r\n\r\nexport const smoothCurve = (input: Vec2[], resolution: number, curviness: number): Vec2[] => {\r\n    const pts: Pt[] = [];\r\n\r\n    if (resolution < 1) resolution = 1;\r\n\r\n    for (let i = 0; i < input.length; ++i) {\r\n        const prev = input[i == 0 ? input.length-1 : i-1];\r\n        const curr = input[i];\r\n        const next = input[(i + 1) % input.length];\r\n\r\n        const lenA = V2.length(V2.minus(prev, curr));\r\n        const lenB = V2.length(V2.minus(curr, next));\r\n\r\n        const midA = V2.scaled(V2.plus(prev, curr), 0.5);\r\n        const midB = V2.scaled(V2.plus(curr, next), 0.5);\r\n        const midDiff = V2.scaled(V2.minus(midA, midB), curviness);\r\n\r\n        const diffA = V2.scaled(midDiff,  lenA / (lenA + lenB));\r\n        const diffB = V2.scaled(midDiff, -lenB / (lenA + lenB));\r\n\r\n        pts.push({\r\n            pt: curr,\r\n            controlA: V2.plus(curr, diffA),\r\n            controlB: V2.plus(curr, diffB),\r\n        });\r\n    }\r\n\r\n    const inc = 1 / resolution;\r\n\r\n    const result: Vec2[] = [];\r\n    for (let i = 0; i < pts.length; ++i) {\r\n        const curr = pts[i];\r\n        const next = pts[(i + 1) % pts.length];\r\n\r\n        for (let t = 0; t < 1 - (inc / 2); t += inc) {\r\n            let newVal: Vec2 = { x: 0, y: 0 };\r\n\r\n            V2.add(newVal, V2.scaled(curr.pt       , (1-t)*(1-t)*(1-t)));\r\n            V2.add(newVal, V2.scaled(curr.controlB , 3*(1-t)*(1-t)*t));\r\n            V2.add(newVal, V2.scaled(next.controlA , 3*(1-t)*t*t));\r\n            V2.add(newVal, V2.scaled(next.pt       , t*t*t));\r\n\r\n            result.push(newVal);\r\n        }\r\n    }\r\n\r\n    return result;\r\n};","import { Vec2 } from 'utils/math';\r\n\r\nexport const triangulate = (points: Vec2[]): number[] => {\r\n    const indices: number[] = [];\r\n    const n = points.length;\r\n    if (n < 3) return indices;\r\n\r\n    const V: number[] = new Array(n);\r\n    if (area(points) > 0) {\r\n        for (let v = 0; v < n; v++) V[v] = v;\r\n    } else {\r\n        for (let v = 0; v < n; v++) V[v] = (n - 1) - v;\r\n    }\r\n\r\n    let nv = n;\r\n    let count = 2 * nv;\r\n    for (let v = nv - 1; nv > 2; ) {\r\n        if ((count--) <= 0) return indices;\r\n\r\n        let u = v;\r\n        if (nv <= u) u = 0;\r\n        v = u + 1;\r\n        if (nv <= v) v = 0;\r\n        let w = v + 1;\r\n        if (nv <= w) w = 0;\r\n\r\n        if (snip(points, u, v, w, nv, V)) {\r\n            indices.push(V[u]);\r\n            indices.push(V[v]);\r\n            indices.push(V[w]);\r\n            for (let s = v, t = v + 1; t < nv; s++, t++) V[s] = V[t];\r\n            nv--;\r\n            count = 2 * nv;\r\n        }\r\n    }\r\n\r\n    return indices;\r\n};\r\n\r\nconst area = (points: Vec2[]): number => {\r\n    let A = 0;\r\n    for (let p = points.length - 1, q = 0; q < points.length; p = q++) {\r\n        A += points[p].x * points[q].y - points[q].x * points[p].y;\r\n    }\r\n    return A / 2;\r\n};\r\n\r\nconst inside_triangle = (A: Vec2, B: Vec2, C: Vec2, P: Vec2): boolean => {\r\n    const ax = C.x - B.x, ay = C.y - B.y;\r\n    const bx = A.x - C.x, by = A.y - C.y;\r\n    const cx = B.x - A.x, cy = B.y - A.y;\r\n    const apx = P.x - A.x, apy = P.y - A.y;\r\n    const bpx = P.x - B.x, bpy = P.y - B.y;\r\n    const cpx = P.x - C.x, cpy = P.y - C.y;\r\n\r\n    const aCROSSbp = ax * bpy - ay * bpx;\r\n    const cCROSSap = cx * apy - cy * apx;\r\n    const bCROSScp = bx * cpy - by * cpx;\r\n\r\n    return aCROSSbp >= 0 && bCROSScp >= 0 && cCROSSap >= 0;\r\n};\r\n\r\nconst snip = (points: Vec2[], u: number, v: number, w: number, n: number, V: number[]): boolean => {\r\n    const A = points[V[u]];\r\n    const B = points[V[v]];\r\n    const C = points[V[w]];\r\n\r\n    const pdiff = (B.x - A.x) * (C.y - A.y) - (B.y - A.y) * (C.x - A.x);\r\n    if (pdiff < 1e-7) return false;\r\n\r\n    for (let p = 0; p < n; p++) {\r\n        if ((p == u) || (p == v) || (p == w)) continue;\r\n        const P = points[V[p]];\r\n        if (inside_triangle(A, B, C, P)) return false;\r\n    }\r\n\r\n    return true;\r\n};","import { loadShader } from \"webgl/shaderLoader\";\r\n\r\nexport const initPost = () :void => {\r\n    const canvas = document.getElementById('first-canvas') as HTMLCanvasElement;\r\n    const gl = canvas.getContext('webgl2') as WebGLRenderingContext;\r\n    gl.viewport(0,0,canvas.width,canvas.height);\r\n    gl.cullFace(gl.BACK);\r\n\r\n    Promise.all([\r\n        loadShader(gl, '/shaders/purple.glsl'),\r\n        loadShader(gl, '/shaders/bufferCopy.glsl')\r\n    ])\r\n    .then(([prog0, prog1]) => {\r\n        if (typeof prog0 === 'string' || typeof prog1 === 'string') {\r\n            console.log('Shader error: ' + prog0 + prog1);\r\n            return;\r\n        }\r\n\r\n        const fbo = gl.createFramebuffer();\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, fbo);\r\n        \r\n        const texture = gl.createTexture();\r\n        gl.bindTexture(gl.TEXTURE_2D, texture);\r\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGB, canvas.width, canvas.height, 0, gl.RGB, gl.UNSIGNED_BYTE, null);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR); \r\n        \r\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0); \r\n\r\n        {\r\n          gl.clearColor(0, 1, 0, 1);\r\n          gl.clear(gl.COLOR_BUFFER_BIT);\r\n\r\n          const vertexBuf = gl.createBuffer();\r\n          gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuf);\r\n          gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([\r\n            -0.95,0.95,0.0,  \r\n            -0.95,-0.95,0.0, \r\n            0.95,-0.95,0.0,\r\n            0.9,0,0.0,\r\n            0.9,0.9,0.0,\r\n            0,0.9,0.0,\r\n          ]), gl.STATIC_DRAW);\r\n\r\n          gl.useProgram(prog0);\r\n\r\n          const coord = gl.getAttribLocation(prog0, \"c\");\r\n          gl.vertexAttribPointer(coord, 3, gl.FLOAT, false, 0, 0);\r\n          gl.enableVertexAttribArray(coord);\r\n\r\n          gl.drawArrays(gl.TRIANGLES, 0, 6);\r\n        }\r\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n        {    \r\n          const vertexBuf = gl.createBuffer();\r\n          gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuf);\r\n          gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([ \r\n            -1,1,0.0,  \r\n            -1,-1,0.0, \r\n            1,-1,0.0,\r\n            1,-1,0.0,\r\n            1,1,0.0,\r\n            -1,1,0.0,\r\n          ]), gl.STATIC_DRAW);\r\n\r\n          gl.useProgram(prog1);\r\n\r\n          const coord = gl.getAttribLocation(prog1, \"c\");\r\n          gl.vertexAttribPointer(coord, 3, gl.FLOAT, false, 0, 0);\r\n          gl.enableVertexAttribArray(coord);\r\n\r\n          gl.drawArrays(gl.TRIANGLES, 0, 6);\r\n        }\r\n    });\r\n};","const VERT_HEADER = \r\n    `#version 300 es\r\n    #define VERTEX\r\n    #define v2f out\r\n    `;\r\n\r\nconst FRAG_HEADER = \r\n    `#version 300 es\r\n    #define FRAGMENT\r\n    #define v2f in\r\n    precision highp float;\r\n    `;\r\n\r\nconst buildProgram = (gl: WebGLRenderingContext, body: string): WebGLProgram | string => {\r\n    const vertShader = gl.createShader(gl.VERTEX_SHADER) as WebGLShader;\r\n    gl.shaderSource(vertShader, VERT_HEADER + body + '\\n');\r\n    gl.compileShader(vertShader);\r\n\r\n    const vertLog = gl.getShaderInfoLog(vertShader);\r\n    if (vertLog === null || vertLog.length > 0) {\r\n        return vertLog as string;\r\n    }\r\n\r\n    const fragShader = gl.createShader(gl.FRAGMENT_SHADER) as WebGLShader;\r\n    gl.shaderSource(fragShader, FRAG_HEADER + body + '\\n');\r\n    gl.compileShader(fragShader);\r\n\r\n    const fragLog = gl.getShaderInfoLog(fragShader);\r\n    if (fragLog === null || fragLog.length > 0) {\r\n        return fragLog as string;\r\n    }\r\n\r\n    const prog = gl.createProgram() as WebGLProgram;\r\n    gl.attachShader(prog, vertShader);\r\n    gl.attachShader(prog, fragShader);\r\n    gl.linkProgram(prog);\r\n    return prog;\r\n};\r\n\r\nexport const loadShader = (gl: WebGLRenderingContext, url: string): Promise<WebGLProgram | string> =>\r\n    fetch(url)\r\n        .then(response => {\r\n            if (!response.ok) throw new Error(\"HTTP error, status = \" + response.status);\r\n            return response.text();\r\n        })\r\n        .then(shader => buildProgram(gl, shader));","import { WriteGrid, GridTool, safeOutOfBounds } from 'utils/grid';\r\nimport { runCellularAutomaton } from './automaton';\r\nimport { markEdges, findContours, WalkedStatus } from './findContours';\r\nimport { smoothCurve } from './smoothCurve';\r\nimport { Vec2, findBounds, RectTool } from 'utils/math';\r\nimport { triangulate } from './triangulate';\r\n\r\nconst floodFill = (grid: WriteGrid<number>, x: number, y: number, replace: number, value: number, count: number): number => {\r\n    if (x < 0 || y < 0) return count;\r\n    if (x >= grid.width || y >= grid.height) return count;\r\n\r\n    const tile = grid.at(x, y);\r\n\r\n    if (tile === value) return count;\r\n    if (tile !== replace) return count;\r\n\r\n    grid.write(x, y, value);\r\n    count++;\r\n\r\n    count = floodFill(grid, x - 1, y, replace, value, count);\r\n    count = floodFill(grid, x + 1, y, replace, value, count);\r\n    count = floodFill(grid, x, y - 1, replace, value, count);\r\n    count = floodFill(grid, x, y + 1, replace, value, count);\r\n    return count;\r\n};\r\n\r\nconst fixSingleTileBridges = (grid: WriteGrid<boolean>): void => {\r\n    GridTool.forEach(safeOutOfBounds(grid, true), (x, y, val) => {\r\n        if (!val) return;\r\n\r\n        if (val && !grid.at(x - 1, y) && !grid.at(x + 1, y)) {\r\n            grid.write(x + 1, y, true);\r\n        }\r\n\r\n        if (val && !grid.at(x, y - 1) && !grid.at(x, y + 1)) {\r\n            grid.write(x, y + 1, true);\r\n        }\r\n    });\r\n};\r\n\r\nconst colorGridRegions = (grid: WriteGrid<number>): number => {\r\n    let color = 1;\r\n    let largestColor = -1;\r\n    let largestRegion = 0;\r\n\r\n    while (true) {\r\n        const pos = GridTool.find(grid, (x, y, val) => val === 0);\r\n        if (pos === null) return largestColor;\r\n\r\n        const size = floodFill(grid, pos.x, pos.y, 0, color, 0);\r\n\r\n        if (size > largestRegion) {\r\n            largestRegion = size;\r\n            largestColor = color;\r\n        }\r\n\r\n        color++;\r\n    }\r\n};\r\n\r\nconst randomColorHex = (): string => {\r\n    const randPair = (): string => {\r\n        let ret = Math.floor(Math.random() * 256).toString(16);\r\n        if (ret.length < 2) ret = '0'+ret;\r\n        return ret;\r\n    };\r\n\r\n    return '#' + randPair() + randPair() + randPair();\r\n};\r\n\r\nconst colors = [0,0,0,0,0,0,0,0,0,0].map(_ => randomColorHex());\r\n\r\n\r\nconst gridColorForNumber = (n: number): string => {\r\n    if (n < 0) return '#000';\r\n    return colors[n % colors.length];\r\n};\r\n\r\nconst gridColorForNormal = (degs: number): string => {\r\n    const x = Math.cos(degs * Math.PI / 180);\r\n    const y = Math.sin(degs * Math.PI / 180);\r\n\r\n    const hx = Math.round(15 * (0.5*x + 0.5));\r\n    const hy = Math.round(15 * (0.5*y + 0.5));\r\n\r\n    const result = '#' + hx.toString(16) + hy.toString(16) + 'f';\r\n\r\n    return result;\r\n};\r\n\r\nconst multibind = (objs: any[], events: string[], listener: Function): void => {\r\n    objs.forEach(o => {\r\n        events.forEach(e => {\r\n            o[e] = listener;\r\n        });\r\n    });\r\n};\r\n\r\nexport const initPost = () :void => {\r\n    const firstCanvas = document.getElementById('first-canvas') as HTMLCanvasElement;\r\n    const ctx = firstCanvas.getContext('2d') as CanvasRenderingContext2D;\r\n\r\n    const seedSlider = document.getElementById('seed-slider') as HTMLInputElement;\r\n    const popSlider = document.getElementById('pop-slider') as HTMLInputElement;\r\n    const genSlider = document.getElementById('gen-slider') as HTMLInputElement;\r\n    const insuranceSlider = document.getElementById('insurance-slider') as HTMLInputElement;\r\n    const curvinessSlider = document.getElementById('curviness-slider') as HTMLInputElement;\r\n    const qualitySlider = document.getElementById('quality-slider') as HTMLInputElement;\r\n\r\n    const secondCanvas = document.getElementById('second-canvas') as HTMLCanvasElement;\r\n    const ctx2 = secondCanvas.getContext('2d') as CanvasRenderingContext2D;\r\n\r\n    const thirdCanvas = document.getElementById('third-canvas') as HTMLCanvasElement;\r\n    const ctx3 = thirdCanvas.getContext('2d') as CanvasRenderingContext2D;\r\n\r\n    const fourthCanvas = document.getElementById('fourth-canvas') as HTMLCanvasElement;\r\n    const ctx4 = fourthCanvas.getContext('2d') as CanvasRenderingContext2D;\r\n\r\n    const fifthCanvas = document.getElementById('fifth-canvas') as HTMLCanvasElement;\r\n    const ctx5 = fifthCanvas.getContext('2d') as CanvasRenderingContext2D;\r\n\r\n    const sixthCanvas = document.getElementById('sixth-canvas') as HTMLCanvasElement;\r\n    const ctx6 = sixthCanvas.getContext('2d') as CanvasRenderingContext2D;\r\n\r\n    const seventhCanvas = document.getElementById('seventh-canvas') as HTMLCanvasElement;\r\n    const ctx7 = seventhCanvas.getContext('2d') as CanvasRenderingContext2D;\r\n\r\n    const eighthCanvas = document.getElementById('eighth-canvas') as HTMLCanvasElement;\r\n    const ctx8 = eighthCanvas.getContext('2d') as CanvasRenderingContext2D;\r\n\r\n    const ninthCanvas = document.getElementById('ninth-canvas') as HTMLCanvasElement;\r\n    const ctx9 = ninthCanvas.getContext('2d') as CanvasRenderingContext2D;\r\n\r\n    const update = () :void => {\r\n        const grid = runCellularAutomaton(\r\n            75, 75,\r\n            parseInt(seedSlider.value),\r\n            parseFloat(popSlider.value),\r\n            5, 4,\r\n            parseInt(genSlider.value)\r\n        );\r\n\r\n        GridTool.forEach(grid, (x, y, val) => {\r\n            ctx.fillStyle = val ? '#000' : '#FFF';\r\n            ctx.fillRect(4*x, 4*y, 4, 4);\r\n        });\r\n\r\n        const coloredGrid = GridTool.map(grid, (x, y, val) => val ? -1 : 0);\r\n        const bigColor = colorGridRegions(coloredGrid);\r\n\r\n        GridTool.forEach(coloredGrid, (x, y, val) => {\r\n            ctx2.fillStyle = gridColorForNumber(val);\r\n            ctx2.fillRect(4*x, 4*y, 4, 4);\r\n        });\r\n\r\n        const filledMap = GridTool.map(coloredGrid, (x, y, val) => val !== bigColor);\r\n\r\n        fixSingleTileBridges(filledMap);\r\n\r\n        GridTool.forEach(filledMap, (x, y, val) => {\r\n            ctx3.fillStyle = val ? '#000' : '#FFF';\r\n            ctx3.fillRect(4*x, 4*y, 4, 4);\r\n        });\r\n\r\n        const edgeMarkedMap = markEdges(filledMap);\r\n\r\n        GridTool.forEach(edgeMarkedMap, (x, y, val) => {\r\n            ctx4.fillStyle = val.kind === 'edge' ? gridColorForNormal(val.normal) : val.kind === 'air' ? '#655' : '#77f';\r\n            ctx4.fillRect(4*x, 4*y, 4, 4);\r\n        });\r\n\r\n        const contours = findContours(edgeMarkedMap, parseInt(insuranceSlider.value) as any);\r\n\r\n        GridTool.forEach(contours.walkMap, (x, y, val) => {\r\n            ctx5.fillStyle = val === WalkedStatus.WalkedImportant ? '#fff' : val === WalkedStatus.Walked ? '#333' : '#000';\r\n            ctx5.fillRect(4*x, 4*y, 4, 4);\r\n\r\n            ctx6.fillStyle = val === WalkedStatus.WalkedImportant ? '#333' : '#000';\r\n            ctx6.fillRect(9*x, 9*y, 9, 9);\r\n        });\r\n\r\n        const outerIndex = contours.contours\r\n            .map((c, i) => ({ i, area: RectTool.area(findBounds(c)) }))\r\n            .sort((a, b) => b.area - a.area)\r\n            [0].i;\r\n\r\n        contours.contours.forEach((c, i) => {\r\n            ctx6.strokeStyle = i === outerIndex ? '#f00' : '#933';\r\n\r\n            for (let i = 0; i < c.length; ++i) {\r\n                const j = (i + 1) % c.length;\r\n                const a = { x: 9 * contours.walkMap.width * c[i].x, y: 9 * contours.walkMap.height * c[i].y };\r\n                const b = { x: 9 * contours.walkMap.width * c[j].x, y: 9 * contours.walkMap.height * c[j].y };\r\n                \r\n                ctx6.beginPath();\r\n                ctx6.moveTo(9 * contours.walkMap.width / 2 + a.x, 9 * contours.walkMap.height / 2 + a.y);\r\n                ctx6.lineTo(9 * contours.walkMap.width / 2 + b.x, 9 * contours.walkMap.height / 2 + b.y);\r\n                // TODO closePath\r\n                ctx6.stroke();\r\n            }\r\n        });\r\n\r\n        const smoothContours = contours.contours.map(x => smoothCurve(x, parseFloat(qualitySlider.value), 2 * parseFloat(curvinessSlider.value) / 100));\r\n\r\n        ctx7.strokeStyle = '#0f0';\r\n        ctx7.fillStyle = '#000';\r\n        ctx7.fillRect(0, 0, 675, 675);\r\n\r\n        smoothContours.forEach((c, i) => {\r\n            ctx7.strokeStyle = i === outerIndex ? '#0f0' : '#393';\r\n\r\n            for (let i = 0; i < c.length; ++i) {\r\n                const j = (i + 1) % c.length;\r\n                const a = { x: 9 * contours.walkMap.width * c[i].x, y: 9 * contours.walkMap.height * c[i].y };\r\n                const b = { x: 9 * contours.walkMap.width * c[j].x, y: 9 * contours.walkMap.height * c[j].y };\r\n                \r\n                ctx7.beginPath();\r\n                ctx7.moveTo(9 * contours.walkMap.width / 2 + a.x, 9 * contours.walkMap.height / 2 + a.y);\r\n                ctx7.lineTo(9 * contours.walkMap.width / 2 + b.x, 9 * contours.walkMap.height / 2 + b.y);\r\n                // TODO closePath\r\n                ctx7.stroke();\r\n            }\r\n        });\r\n\r\n        // TODO find closest point to the actual OOB point we're making the seam to.\r\n        const mostTopLeft = (pts: Vec2[]): number =>\r\n            pts.map((p, i) => ({ i, len: (p.x+0.5)*(p.x+0.5) + (p.y+0.5)*(p.y+0.5) }))\r\n                .sort((a, b) => a.len - b.len)\r\n                [0].i;\r\n\r\n        const topLeftPtI = mostTopLeft(smoothContours[outerIndex]);\r\n        const topLeftPt = smoothContours[outerIndex][topLeftPtI];\r\n        const topLeftPrevPt = smoothContours[outerIndex][topLeftPtI === 0 ? smoothContours[outerIndex].length - 1 : topLeftPtI - 1];\r\n\r\n        ctx7.strokeStyle = '#0f0';\r\n        ctx7.beginPath();\r\n        ctx7.moveTo(\r\n            9 * contours.walkMap.width / 2 + 9 * contours.walkMap.width * topLeftPt.x,\r\n            9 * contours.walkMap.height / 2 + 9 * contours.walkMap.height * topLeftPt.y,\r\n        );\r\n        ctx7.lineTo(\r\n            -9 * contours.walkMap.width / 2,\r\n            -9 * contours.walkMap.height / 2\r\n        );\r\n        ctx7.stroke();\r\n\r\n        ctx7.strokeStyle = '#9f9';\r\n        ctx7.beginPath();\r\n        ctx7.arc(\r\n            9 * contours.walkMap.width / 2 + 9 * contours.walkMap.width * topLeftPt.x,\r\n            9 * contours.walkMap.height / 2 + 9 * contours.walkMap.height * topLeftPt.y,\r\n            5, 0, 2*Math.PI);\r\n        ctx7.stroke();\r\n\r\n        // =--------------------------------------------\r\n\r\n        const OUT = 0.51;\r\n        const bumpDownAmount = Math.abs(topLeftPt.y - topLeftPrevPt.y);\r\n\r\n        smoothContours[outerIndex].splice(topLeftPtI, 0,\r\n            {x: -OUT, y: -OUT+bumpDownAmount},\r\n            {x: -OUT, y:  OUT},\r\n            {x:  OUT, y:  OUT},\r\n            {x:  OUT, y: -OUT},\r\n            {x: -OUT, y: -OUT},\r\n            {x: (topLeftPt.x + topLeftPrevPt.x) / 2, \r\n             y: (topLeftPt.y + topLeftPrevPt.y) / 2}\r\n        );\r\n\r\n        const tris = smoothContours.map(triangulate);\r\n\r\n        smoothContours[outerIndex][topLeftPtI].y -= bumpDownAmount;\r\n        smoothContours[outerIndex][topLeftPtI+5].x = topLeftPrevPt.x;\r\n        smoothContours[outerIndex][topLeftPtI+5].y = topLeftPrevPt.y;\r\n\r\n        // =--------------------------------------------\r\n\r\n        ctx8.fillStyle = '#000';\r\n        ctx8.fillRect(0, 0, 675, 675);\r\n\r\n        smoothContours.forEach((c, i) => {\r\n            ctx8.fillStyle = i === outerIndex ? '#0f0' : '#393';\r\n\r\n            ctx8.beginPath();\r\n            const a = { x: 9 * contours.walkMap.width * c[0].x, y: 9 * contours.walkMap.height * c[0].y };\r\n            ctx8.moveTo(9 * contours.walkMap.width / 2 + a.x, 9 * contours.walkMap.height / 2 + a.y);\r\n\r\n            for (let j = 1; j < c.length; ++j) {\r\n                const b = { x: 9 * contours.walkMap.width * c[j].x, y: 9 * contours.walkMap.height * c[j].y };\r\n                ctx8.lineTo(9 * contours.walkMap.width / 2 + b.x, 9 * contours.walkMap.height / 2 + b.y);\r\n            }\r\n\r\n            ctx8.fill();\r\n        });\r\n\r\n        // =--------------------------------------------\r\n\r\n        ctx9.fillStyle = '#000';\r\n        ctx9.fillRect(0, 0, 675, 675);\r\n\r\n        tris.forEach((ts,j) => {\r\n            for (let i = 0; i < ts.length - 2; i += 3) {\r\n                ctx9.fillStyle = randomColorHex();\r\n                ctx9.beginPath();\r\n                {\r\n                    const c = smoothContours[j][ts[i]];\r\n                    const a = { x: 8 * contours.walkMap.width * c.x, y: 8 * contours.walkMap.height * c.y };\r\n                    ctx9.moveTo(9 * contours.walkMap.width / 2 + a.x, 9 * contours.walkMap.height / 2 + a.y);\r\n                } {\r\n                    const c = smoothContours[j][ts[i+1]];\r\n                    const a = { x: 8 * contours.walkMap.width * c.x, y: 8 * contours.walkMap.height * c.y };\r\n                    ctx9.lineTo(9 * contours.walkMap.width / 2 + a.x, 9 * contours.walkMap.height / 2 + a.y);\r\n                } {\r\n                    const c = smoothContours[j][ts[i+2]];\r\n                    const a = { x: 8 * contours.walkMap.width * c.x, y: 8 * contours.walkMap.height * c.y };\r\n                    ctx9.lineTo(9 * contours.walkMap.width / 2 + a.x, 9 * contours.walkMap.height / 2 + a.y);\r\n                } {\r\n                    const c = smoothContours[j][ts[i]];\r\n                    const a = { x: 8 * contours.walkMap.width * c.x, y: 8 * contours.walkMap.height * c.y };\r\n                    ctx9.lineTo(9 * contours.walkMap.width / 2 + a.x, 9 * contours.walkMap.height / 2 + a.y);\r\n                }\r\n                ctx9.fill();\r\n            }\r\n        });\r\n    };\r\n\r\n    multibind(\r\n        [popSlider, genSlider, seedSlider, insuranceSlider, curvinessSlider, qualitySlider],\r\n        ['oninput', 'onchange'],\r\n        update\r\n    );\r\n    update();\r\n};\r\n"],"sourceRoot":""}