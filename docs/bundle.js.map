{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/utils/grid.ts","webpack:///./src/utils/math.ts","webpack:///./node_modules/lodash/_Symbol.js","webpack:///./src/caveGenerator/index.ts","webpack:///./src/caveGenerator/findContours.ts","webpack:///./node_modules/lodash/isObjectLike.js","webpack:///./src/webgl/shaderLoader.ts","webpack:///./src/webgl/frameBufferTexture.ts","webpack:///./src/webgl/bufferRenderer.ts","webpack:///./src/index.ts","webpack:///./src/pages/vector-caves.ts","webpack:///./src/caveGenerator/automaton.ts","webpack:///./src/utils/prng.ts","webpack:///./src/caveGenerator/smoothCurve.ts","webpack:///./src/caveGenerator/triangulate.ts","webpack:///./src/pages/page2-webgl.ts","webpack:///./src/webgl/caveRenderer.ts","webpack:///./node_modules/lodash/flatten.js","webpack:///./node_modules/lodash/_baseFlatten.js","webpack:///./node_modules/lodash/_arrayPush.js","webpack:///./node_modules/lodash/_isFlattenable.js","webpack:///./node_modules/lodash/_root.js","webpack:///./node_modules/lodash/_freeGlobal.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/lodash/isArguments.js","webpack:///./node_modules/lodash/_baseIsArguments.js","webpack:///./node_modules/lodash/_baseGetTag.js","webpack:///./node_modules/lodash/_getRawTag.js","webpack:///./node_modules/lodash/_objectToString.js","webpack:///./node_modules/lodash/isArray.js","webpack:///./src/webgl/gaussianBlur.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","WriteGrid","width","height","this","vals","Array","write","x","y","val","at","copyFrom","grid","safeOutOfBounds","oobValue","GridTool","find","test","forEach","fn","map","result","V2","add","a","b","plus","minus","length","Math","sqrt","scaled","RectTool","area","xmax","xmin","ymax","ymin","smallestDifferenceRadians","PI","abs","findBounds","pts","Infinity","grid_1","automaton_1","findContours_1","smoothCurve_1","math_1","triangulate_1","floodFill","replace","count","tile","generateCave","config","generateCaveVerbose","cave","automatonResult","runCellularAutomaton","seed","coloredGrid","bigColor","color","largestColor","largestRegion","pos","size","colorGridRegions","filledGrid","edgeMarkedGrid","markEdges","findContoursResult","findContours","edgePointDist","outerMostContourIndex","contours","sort","smoothContours","smoothCurve","curveQuality","curveBend","topLeftPtI","len","topLeftPt","topLeftPrevPt","bumpDownAmount","splice","triangles","triangulate","edges","details","topLeftMostVertexIndex","WalkedStatus","kind","normal","u","spaceInsurance","walkMap","_","Unwalked","iter","newContour","findOneContour","push","bestCandidate","prev","candidates","minVal","minI","freshStart","findFreshContour","points","lastCan","dx","dy","lastStatus","Walked","newStatus","WalkedImportant","loadShader","gl","url","fetch","then","response","ok","Error","status","text","shader","body","vertShader","createShader","VERTEX_SHADER","shaderSource","compileShader","vertLog","getShaderInfoLog","fragShader","FRAGMENT_SHADER","fragLog","prog","createProgram","attachShader","linkProgram","buildProgram","FrameBufferTexture","framebuffer","createFramebuffer","bindFramebuffer","FRAMEBUFFER","texture","createTexture","bindTexture","TEXTURE_2D","texImage2D","RGB","UNSIGNED_BYTE","texParameteri","TEXTURE_MIN_FILTER","LINEAR","TEXTURE_MAG_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","framebufferTexture2D","COLOR_ATTACHMENT0","release","deleteTexture","deleteFramebuffer","releaseTexture","shaderLoader_1","BufferRenderer","vertexBuffer","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","Float32Array","STATIC_DRAW","shaderPath","draw","onPreDraw","useProgram","activeTexture","TEXTURE0","loc_tex","getUniformLocation","uniform1i","enableVertexAttribArray","vertexAttribPointer","FLOAT","drawArrays","TRIANGLES","deleteProgram","deleteBuffer","vector_caves_1","page2_webgl_1","postInitters","vector-caves","initPost","page2-webgl","window","caveGenerator_1","randomColorHex","randPair","ret","floor","random","toString","colors","events","listener","ctx","document","getElementById","getContext","seedSlider","insuranceSlider","curvinessSlider","qualitySlider","ctx2","ctx3","ctx4","ctx5","ctx6","ctx7","ctx9","update","parseInt","parseFloat","_a","fillStyle","fillRect","degs","cos","sin","hx","round","hy","gridColorForNormal","curveSpaceToCanvasSpace","pt","strokeStyle","beginPath","first","moveTo","i_1","next","lineTo","closePath","stroke","i_2","ts","j","fill","e","prng_1","getNeighborhood","nx","ny","population","birth","survival","iterations","buffer","rand","nextRandom01","neighbors","M","prevRandom01","input","resolution","curviness","curr","lenA","lenB","midA","midB","midDiff","diffA","diffB","controlA","controlB","inc","newVal","indices","V","v","nv","w","snip","A","q","inside_triangle","B","C","P","ax","ay","bx","by","cx","cy","apx","apy","bpx","bpy","cpx","cpy","caveRenderer_1","frameBufferTexture_1","bufferRenderer_1","gaussianBlur_1","buildSurfaceInfoBuffers","Promise","all","CaveRenderer","GaussianBlur","caveRenderer","normalsBlit","gaussBlur0","gaussBlur1","frameBufferTex","viewport","clearColor","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","run","resultTexture","uniform2f","canvas","depth","drawInfoBufferDemo","copyBlit","infoBuffers","drawBasicCaveDemo","flatten","getFlatVerts","getFlatIndices","baseCount","tris","index","concat","indexBufferData","indexBufferLen","indexBuffer","ELEMENT_ARRAY_BUFFER","Uint16Array","drawElements","UNSIGNED_SHORT","baseFlatten","array","arrayPush","isFlattenable","predicate","isStrict","values","offset","isArguments","isArray","spreadableSymbol","isConcatSpreadable","undefined","freeGlobal","freeSelf","self","root","Function","global","g","baseIsArguments","isObjectLike","objectProto","propertyIsEnumerable","arguments","baseGetTag","argsTag","getRawTag","objectToString","nullTag","undefinedTag","symToStringTag","nativeObjectToString","isOwn","tag","unmasked","bufferRenderer","frameTex0","frameTex1","_this"],"mappings":"aACA,IAAAA,EAAA,GAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAC,QAGA,IAAAC,EAAAJ,EAAAE,GAAA,CACAG,EAAAH,EACAI,GAAA,EACAH,QAAA,IAUA,OANAI,EAAAL,GAAAM,KAAAJ,EAAAD,QAAAC,IAAAD,QAAAF,GAGAG,EAAAE,GAAA,EAGAF,EAAAD,QAKAF,EAAAQ,EAAAF,EAGAN,EAAAS,EAAAV,EAGAC,EAAAU,EAAA,SAAAR,EAAAS,EAAAC,GACAZ,EAAAa,EAAAX,EAAAS,IACAG,OAAAC,eAAAb,EAAAS,EAAA,CAA0CK,YAAA,EAAAC,IAAAL,KAK1CZ,EAAAkB,EAAA,SAAAhB,GACA,oBAAAiB,eAAAC,aACAN,OAAAC,eAAAb,EAAAiB,OAAAC,YAAA,CAAwDC,MAAA,WAExDP,OAAAC,eAAAb,EAAA,cAAiDmB,OAAA,KAQjDrB,EAAAsB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAArB,EAAAqB,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,iBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAX,OAAAY,OAAA,MAGA,GAFA1B,EAAAkB,EAAAO,GACAX,OAAAC,eAAAU,EAAA,WAAyCT,YAAA,EAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAArB,EAAAU,EAAAe,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAzB,EAAA6B,EAAA,SAAA1B,GACA,IAAAS,EAAAT,KAAAqB,WACA,WAA2B,OAAArB,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAH,EAAAU,EAAAE,EAAA,IAAAA,GACAA,GAIAZ,EAAAa,EAAA,SAAAiB,EAAAC,GAAsD,OAAAjB,OAAAkB,UAAAC,eAAA1B,KAAAuB,EAAAC,IAGtD/B,EAAAkC,EAAA,GAIAlC,IAAAmC,EAAA,mFCzEA,IAAAC,EAAA,WAMI,SAAAA,EAAYC,EAAeC,GACvBC,KAAKF,MAAQA,EACbE,KAAKD,OAASA,EACdC,KAAKC,KAAO,IAAIC,MAAMJ,EAAQC,GAkBtC,OAfIF,EAAAJ,UAAAU,MAAA,SAAMC,EAAWC,EAAWC,GACxBN,KAAKC,KAAKG,EAAIC,EAAEL,KAAKF,OAASQ,GAGlCT,EAAAJ,UAAAc,GAAA,SAAGH,EAAWC,GACV,OAAOL,KAAKC,KAAKG,EAAIC,EAAEL,KAAKF,QAGhCD,EAAAJ,UAAAe,SAAA,SAASC,GACL,IAAK,IAAIL,EAAI,EAAGA,EAAIJ,KAAKF,OAASM,EAAIK,EAAKX,QAASM,EAChD,IAAK,IAAIC,EAAI,EAAGA,EAAIL,KAAKD,QAAUM,EAAII,EAAKV,SAAUM,EAClDL,KAAKG,MAAMC,EAAGC,EAAGI,EAAKF,GAAGH,EAAGC,KAI5CR,EA3BA,GAAalC,EAAAkC,YA6BAlC,EAAA+C,gBAAkB,SAAID,EAAeE,GAAyB,OACvEb,MAAOW,EAAKX,MACZC,OAAQU,EAAKV,OACbQ,GAAI,SAACH,EAAGC,GAAM,OAAAD,EAAI,GAAKC,EAAI,GAAKD,GAAKK,EAAKX,OAASO,GAAKI,EAAKX,MAAQa,EAAWF,EAAKF,GAAGH,EAAGC,MAGlF1C,EAAAiD,SAAW,CACpBC,KAAM,SAAIJ,EAAeK,GACrB,IAAK,IAAIV,EAAI,EAAGA,EAAIK,EAAKX,QAASM,EAC9B,IAAK,IAAIC,EAAI,EAAGA,EAAII,EAAKV,SAAUM,EAC/B,GAAIS,EAAKV,EAAGC,EAAGI,EAAKF,GAAGH,EAAGC,IACtB,MAAO,CAAED,EAACA,EAAEC,EAACA,GAIzB,OAAO,MAGXU,QAAS,SAAIN,EAAeO,GACxB,IAAK,IAAIZ,EAAI,EAAGA,EAAIK,EAAKX,QAASM,EAC9B,IAAK,IAAIC,EAAI,EAAGA,EAAII,EAAKV,SAAUM,EAC/BW,EAAGZ,EAAGC,EAAGI,EAAKF,GAAGH,EAAGC,KAKhCY,IAAK,SAAOR,EAAeO,GAGvB,IAFA,IAAME,EAAS,IAAIrB,EAAaY,EAAKX,MAAOW,EAAKV,QAExCK,EAAI,EAAGA,EAAIK,EAAKX,QAASM,EAC9B,IAAK,IAAIC,EAAI,EAAGA,EAAII,EAAKV,SAAUM,EAC/Ba,EAAOf,MAAMC,EAAGC,EAAGW,EAAGZ,EAAGC,EAAGI,EAAKF,GAAGH,EAAGC,KAI/C,OAAOa,mFC7DFvD,EAAAwD,GAAK,CACdC,IAAK,SAACC,EAASC,GACXD,EAAEjB,GAAKkB,EAAElB,EACTiB,EAAEhB,GAAKiB,EAAEjB,GAGbkB,KAAM,SAACF,EAASC,GAAkB,OAC9BlB,EAAGiB,EAAEjB,EAAIkB,EAAElB,EACXC,EAAGgB,EAAEhB,EAAIiB,EAAEjB,IAGfmB,MAAO,SAACH,EAASC,GAAkB,OAC/BlB,EAAGiB,EAAEjB,EAAIkB,EAAElB,EACXC,EAAGgB,EAAEhB,EAAIiB,EAAEjB,IAGfoB,OAAQ,SAACJ,GACL,OAAAK,KAAKC,KAAKN,EAAEjB,EAAEiB,EAAEjB,EAAIiB,EAAEhB,EAAEgB,EAAEhB,IAE9BuB,OAAQ,SAACP,EAASzB,GAAoB,OAClCQ,EAAGR,EAAIyB,EAAEjB,EACTC,EAAGT,EAAIyB,EAAEhB,KAIJ1C,EAAAkE,SAAW,CACpBC,KAAM,SAACnD,GACH,OAACA,EAAEoD,KAAOpD,EAAEqD,OAASrD,EAAEsD,KAAOtD,EAAEuD,QAG3BvE,EAAAwE,0BAA4B,SAACd,EAAWC,GASjD,OARAD,GAAK,EAAIK,KAAKU,GACdd,GAAK,EAAII,KAAKU,GAEVV,KAAKW,IAAIhB,EAAIC,GAAKI,KAAKU,KACnBf,EAAI,EAAGA,GAAK,EAAIK,KAAKU,GACpBf,GAAK,EAAIK,KAAKU,IAGhBf,EAAIC,GAGF3D,EAAA2E,WAAa,SAACC,GACvB,IAAMrB,EAAe,CAAEc,KAAMQ,IAAUN,KAAMM,IAAUT,MAAOS,IAAUP,MAAOO,KAS/E,OAPAD,EAAIxB,QAAQ,SAAApB,GACJA,EAAES,EAAIc,EAAOc,OAAMd,EAAOc,KAAOrC,EAAES,GACnCT,EAAEU,EAAIa,EAAOgB,OAAMhB,EAAOgB,KAAOvC,EAAEU,GACnCV,EAAES,EAAIc,EAAOa,OAAMb,EAAOa,KAAOpC,EAAES,GACnCT,EAAEU,EAAIa,EAAOe,OAAMf,EAAOe,KAAOtC,EAAEU,KAGpCa,oBChEX,IAGAtC,EAHWnB,EAAQ,IAGnBmB,OAEAhB,EAAAD,QAAAiB,iFCLA,IAAA6D,EAAAhF,EAAA,GACAiF,EAAAjF,EAAA,IACAkF,EAAAlF,EAAA,GACAmF,EAAAnF,EAAA,IACAoF,EAAApF,EAAA,GACAqF,EAAArF,EAAA,IAwBMsF,EAAY,SAACtC,EAAyBL,EAAWC,EAAW2C,EAAiBlE,EAAemE,GAC9F,GAAI7C,EAAI,GAAKC,EAAI,EAAG,OAAO4C,EAC3B,GAAI7C,GAAKK,EAAKX,OAASO,GAAKI,EAAKV,OAAQ,OAAOkD,EAEhD,IAAMC,EAAOzC,EAAKF,GAAGH,EAAGC,GAExB,OAAI6C,IAASpE,EAAcmE,EACvBC,IAASF,EAAgBC,GAE7BxC,EAAKN,MAAMC,EAAGC,EAAGvB,GAGjBmE,EAAQF,EAAUtC,EAAML,EAAI,EAAGC,EAAG2C,EAASlE,IAF3CmE,GAGAA,EAAQF,EAAUtC,EAAML,EAAI,EAAGC,EAAG2C,EAASlE,EAAOmE,GAClDA,EAAQF,EAAUtC,EAAML,EAAGC,EAAI,EAAG2C,EAASlE,EAAOmE,GAClDA,EAAQF,EAAUtC,EAAML,EAAGC,EAAI,EAAG2C,EAASlE,EAAOmE,KAsCzCtF,EAAAwF,aAAe,SAACC,GACzB,OAAAzF,EAAA0F,oBAAoBD,GAAQE,MAEnB3F,EAAA0F,oBAAsB,SAACD,GAChC,IAlB0B3C,EAkBpB8C,EAAkBb,EAAAc,qBAAqB,GAAI,GAAIJ,EAAOK,KAAM,IAAM,EAAG,EAAG,IAExEC,EAAcjB,EAAA7B,SAASK,IAAIsC,EAAiB,SAACnD,EAAGC,EAAGC,GAAQ,OAAAA,GAAO,EAAI,IACtEqD,EAzCe,SAAClD,GAKtB,IAJA,IAAImD,EAAQ,EACRC,GAAgB,EAChBC,EAAgB,IAEP,CACT,IAAMC,EAAMtB,EAAA7B,SAASC,KAAKJ,EAAM,SAACL,EAAGC,EAAGC,GAAQ,OAAQ,IAARA,IAC/C,GAAY,OAARyD,EAAc,OAAOF,EAEzB,IAAMG,EAAOjB,EAAUtC,EAAMsD,EAAI3D,EAAG2D,EAAI1D,EAAG,EAAGuD,EAAO,GAEjDI,EAAOF,IACPA,EAAgBE,EAChBH,EAAeD,GAGnBA,KAyBaK,CAAiBP,GAE5BQ,EAAazB,EAAA7B,SAASK,IAAIyC,EAAa,SAACtD,EAAGC,EAAGC,GAAQ,OAAAA,IAAQqD,IAvB1ClD,EAwBLyD,EAvBrBzB,EAAA7B,SAASG,QAAQ0B,EAAA/B,gBAAgBD,GAAM,GAAO,SAACL,EAAGC,EAAGC,GAC5CA,KAEDA,GAAQG,EAAKF,GAAGH,EAAI,EAAGC,IAAOI,EAAKF,GAAGH,EAAI,EAAGC,IAC7CI,EAAKN,MAAMC,EAAI,EAAGC,GAAG,IAGrBC,GAAQG,EAAKF,GAAGH,EAAGC,EAAI,IAAOI,EAAKF,GAAGH,EAAGC,EAAI,IAC7CI,EAAKN,MAAMC,EAAGC,EAAI,GAAG,MAiB7B,IAAM8D,EAAiBxB,EAAAyB,UAAUF,GAE3BG,EAAqB1B,EAAA2B,aAAaH,EAAgBf,EAAOmB,eAEzDC,EAAwBH,EAAmBI,SAC5CxD,IAAI,SAAC/C,EAAGL,GAAM,OAAGA,EAACA,EAAEiE,KAAMe,EAAAhB,SAASC,KAAKe,EAAAP,WAAWpE,OACnDwG,KAAK,SAACrD,EAAGC,GAAM,OAAAA,EAAEQ,KAAOT,EAAES,OAC1B,GAAGjE,EAEF8G,EAAiBN,EAAmBI,SAASxD,IAAI,SAAAb,GAAK,OAAAwC,EAAAgC,YAAYxE,EAAGgD,EAAOyB,aAAczB,EAAO0B,aASjGC,EAAyBJ,EAAeH,GAJtCvD,IAAI,SAACtB,EAAG9B,GAAM,OAAGA,EAACA,EAAEmH,KAAMrF,EAAES,EAHrB,IAGgCT,EAAES,EAHlC,IAG+CT,EAAEU,EAHjD,IAG4DV,EAAEU,EAH9D,MAINqE,KAAK,SAACrD,EAAGC,GAAM,OAAAD,EAAE2D,IAAM1D,EAAE0D,MACzB,GAAGnH,EAGNoH,EAAYN,EAAeH,GAAuBO,GAClDG,EAAgBP,EAAeH,GAAsC,IAAfO,EAAmBJ,EAAeH,GAAuB/C,OAAS,EAAIsD,EAAa,GAEzII,EAAiBzD,KAAKW,IAAI4C,EAAU5E,EAAI6E,EAAc7E,GAE5DsE,EAAeH,GAAuBY,OAAOL,EAAY,EACrD,CAAC3E,GAdU,EAcEC,GAdF,EAca8E,GACxB,CAAC/E,GAfU,EAeEC,EAfF,GAgBX,CAACD,EAhBU,EAgBEC,EAhBF,GAiBX,CAACD,EAjBU,EAiBEC,GAjBF,GAkBX,CAACD,GAlBU,EAkBEC,GAlBF,GAmBX,CAACD,GAAI6E,EAAU7E,EAAI8E,EAAc9E,GAAK,EACrCC,GAAI4E,EAAU5E,EAAI6E,EAAc7E,GAAK,IAG1C,IAAMgF,EAAYV,EAAe1D,IAAI6B,EAAAwC,aAMrC,OAJAX,EAAeH,GAAuBO,GAAY1E,GAAK8E,EACvDR,EAAeH,GAAuBO,EAAW,GAAG3E,EAAI8E,EAAc9E,EACtEuE,EAAeH,GAAuBO,EAAW,GAAG1E,EAAI6E,EAAc7E,EAE/D,CACHiD,KAAM,CACFiC,MAAOZ,EACPU,UAASA,GAEbG,QAAS,CACLjC,gBAAeA,EACfG,YAAWA,EACXQ,WAAUA,EACVC,eAAcA,EACdE,mBAAkBA,EAClBG,sBAAqBA,EACrBiB,uBAAwBV,oFClJpC,IAuCYW,EAvCZjD,EAAAhF,EAAA,GACAoF,EAAApF,EAAA,GAOaE,EAAAyG,UAAY,SAAC3D,GAItB,IAHA,IAAMS,EAASuB,EAAA7B,SAASK,IAAIR,EAAM,SAACL,EAAGC,EAAGC,GACrC,OAAGqF,KAAMrF,EAAM,OAAS,MAAOsF,OAAQ,KAElCxF,EAAI,EAAGA,EAAIK,EAAKX,MAAOM,IAC5B,IAAK,IAAIC,EAAI,EAAGA,EAAII,EAAKV,OAAQM,IAC7B,GAAKI,EAAKF,GAAGH,EAAGC,GAAhB,CAEA,IAAMvC,EAAIsC,EAAI,IAAoBK,EAAKF,GAAGH,EAAE,EAAGC,GACzC1B,EAAIyB,EAAIK,EAAKX,MAAQ,IAAOW,EAAKF,GAAGH,EAAE,EAAGC,GACzCwF,EAAIxF,EAAI,IAAoBI,EAAKF,GAAGH,EAAGC,EAAE,GACzClC,EAAIkC,EAAII,EAAKV,OAAS,IAAMU,EAAKF,GAAGH,EAAGC,EAAE,GAE/C,GAAKvC,GAAMa,GAAMkH,GAAM1H,EAAvB,CAEA,IAAMyH,EAASjH,GAAKR,EAAI,GACpBA,GAAKL,EAAK,IACVA,GAAK+H,GAAK,IACVA,GAAKlH,GAAM,GACXA,EAAI,EACJR,EAAI,GACJL,EAAI,KACH,GAELoD,EAAOf,MAAMC,EAAGC,EAAG,CAAEsF,KAAM,OAAQC,OAAMA,KAIjD,OAAO1E,GAGX,SAAYwE,GACRA,IAAA,uBACAA,IAAA,mBACAA,IAAA,qCAHJ,CAAYA,EAAA/H,EAAA+H,eAAA/H,EAAA+H,aAAY,KAsBX/H,EAAA2G,aAAe,SAAC7D,EAA+BqF,GACxD,IACMC,EAAUtD,EAAA7B,SAASK,IAAI,IAAIwB,EAAA5C,UAAwBY,EAAKX,MAAOW,EAAKV,QAAS,SAAAiG,GAAK,OAAAN,EAAaO,WAC/FxB,EAAqB,GAEvByB,EAAO,EACPC,EAA4B,KAEhC,GAEuB,QADnBA,EAAaC,EAAeL,EAAStF,EAAMqF,KAChBK,EAAW1E,OAAS,GAC3CgD,EAAS4B,KAAKF,SAEC,MAAdA,GAAsBD,IAZd,KAcjB,MAAO,CAAEzB,SAAQA,EAAEsB,QAAOA,IAG9B,IAYMO,EAAgB,SAACC,EAAqBC,GAIxC,IAHA,IAAIC,EAAS,IACTC,EAAO,EAEF7I,EAAI,EAAGA,EAAI2I,EAAW/E,SAAU5D,EAAG,CACxC,IAAMK,EAAIsI,EAAW3I,GACfM,EAAIuD,KAAKW,IAAIQ,EAAAV,0BACfjE,EAAE0H,OAASlE,KAAKU,GAAK,IACrBmE,EAAKX,OAASlE,KAAKU,GAAK,MAGxBjE,EAAIsI,IACJA,EAAStI,EACTuI,EAAO7I,GAIf,OAAO2I,EAAWE,IAGhBN,EAAiB,SAACL,EAAkCtF,EAA+BqF,GACrF,IAEMa,EAnCe,SAACZ,EAA6BtF,GACnD,IAAK,IAAIL,EAAI,EAAGA,EAAIK,EAAKX,MAAOM,IAC5B,IAAK,IAAIC,EAAI,EAAGA,EAAII,EAAKV,OAAQM,IAC7B,GAA2B,SAAvBI,EAAKF,GAAGH,EAAGC,GAAGsF,MAAmBI,EAAQxF,GAAGH,EAAGC,KAAOqF,EAAaO,SACnE,MAAO,CAAE7F,EAACA,EAAEC,EAACA,GAKzB,OAAO,KA0BYuG,CAAiBb,EAAStF,GAC7C,GAAmB,OAAfkG,EACA,OAAO,KAGXlG,EAAOgC,EAAA/B,gBAAgBD,EAAM,CAACkF,KAAM,OAAQC,OAAQ,IAEpD,IAAMiB,EAAiB,GACnBzG,EAAIuG,EAAWvG,EACfC,EAAIsG,EAAWtG,EAEf6F,EAAO,EACPY,EAAyB,CAAEC,GAAI,EAAGC,GAAI,EAAGpB,OAAQ,GACjDqB,EAAavB,EAAawB,OAC1BV,EAA8B,GAElC,EAAG,CACCA,EAAa,GAEb,IAAK,IAAIO,GAAM,EAAGA,GAAM,EAAGA,IACvB,IAAK,IAAIC,GAAM,EAAGA,GAAM,EAAGA,IACZ,IAAPD,GAAmB,IAAPC,GACiB,SAA7BvG,EAAKF,GAAGH,EAAE2G,EAAI1G,EAAE2G,GAAIrB,MACrBI,EAAQxF,GAAGH,EAAE2G,EAAI1G,EAAE2G,KAAQtB,EAAaO,UACvCO,EAAWH,KAAK,CAACU,GAAEA,EAAEC,GAAEA,EAAEpB,OAAQnF,EAAKF,GAAGH,EAAE2G,EAAI1G,EAAE2G,GAAIpB,SAKjE,GAAIY,EAAW/E,OAAS,EAAG,CACvB,IAAMvD,EAAIoI,EAAcQ,EAASN,GACjCpG,GAAKlC,EAAE6I,GACP1G,GAAKnC,EAAE8I,GAEP,IAAIG,EAAYzB,EAAawB,OAC7B,GAAIhJ,EAAE0H,SAAWkB,EAAQlB,OAAQ,EAEN,IAAnBE,IAE0B,IAAnBA,GACa,GAAR5H,EAAE6I,IAAmB,GAAR7I,EAAE8I,IAEfC,GAAcvB,EAAa0B,oBAIvCD,EAAYzB,EAAa0B,iBAI7BD,IAAczB,EAAa0B,iBAC3BP,EAAOR,KAAK,CACRjG,EAAG,GAAGA,EAAI,IAAKK,EAAKX,MAAQ,EAC5BO,EAAG,GAAGA,EAAI,IAAKI,EAAKV,OAAS,IAIrCgG,EAAQ5F,MAAMC,EAAGC,EAAG8G,GACpBF,EAAaE,EACbL,EAAU5I,SAGXsI,EAAW/E,OAAS,GAAKyE,IAhEf,KAkEjB,OAAOW,kBCtJXjJ,EAAAD,QAJA,SAAAmB,GACA,aAAAA,GAAA,iBAAAA,kFCUanB,EAAA0J,WAAa,SAACC,EAA2BC,GAClD,OAAAC,MAAMD,GACDE,KAAK,SAAAC,GACF,IAAKA,EAASC,GAAI,MAAM,IAAIC,MAAM,wBAA0BF,EAASG,QACrE,OAAOH,EAASI,SAEnBL,KAAK,SAAAM,GAAU,OAhCH,SAACT,EAA2BU,GAC7C,IAAMC,EAAaX,EAAGY,aAAaZ,EAAGa,eACtCb,EAAGc,aAAaH,EAVhB,uBAU0CD,EAAO,MACjDV,EAAGe,cAAcJ,GAEjB,IAAMK,EAAUhB,EAAGiB,iBAAiBN,GACpC,GAAgB,OAAZK,GAAoBA,EAAQ7G,OAAS,EACrC,OAAO6G,EAGX,IAAME,EAAalB,EAAGY,aAAaZ,EAAGmB,iBACtCnB,EAAGc,aAAaI,EAfhB,qDAe0CR,EAAO,MACjDV,EAAGe,cAAcG,GAEjB,IAAME,EAAUpB,EAAGiB,iBAAiBC,GACpC,GAAgB,OAAZE,GAAoBA,EAAQjH,OAAS,EACrC,OAAOiH,EAGX,IAAMC,EAAOrB,EAAGsB,gBAIhB,OAHAtB,EAAGuB,aAAaF,EAAMV,GACtBX,EAAGuB,aAAaF,EAAMH,GACtBlB,EAAGwB,YAAYH,GACRA,EASaI,CAAazB,EAAIS,qFCzCzC,IAAAiB,EAAA,WAMI,SAAAA,EAAY1B,EAA2BxH,EAAeC,GAClDC,KAAKsH,GAAKA,EAEVtH,KAAKiJ,YAAc3B,EAAG4B,oBACtB5B,EAAG6B,gBAAgB7B,EAAG8B,YAAapJ,KAAKiJ,aAExCjJ,KAAKqJ,QAAU/B,EAAGgC,gBAClBhC,EAAGiC,YAAYjC,EAAGkC,WAAYxJ,KAAKqJ,SACnC/B,EAAGmC,WAAWnC,EAAGkC,WAAY,EAAGlC,EAAGoC,IAAK5J,EAAOC,EAAQ,EAAGuH,EAAGoC,IAAKpC,EAAGqC,cAAe,MACpFrC,EAAGsC,cAActC,EAAGkC,WAAYlC,EAAGuC,mBAAoBvC,EAAGwC,QAC1DxC,EAAGsC,cAActC,EAAGkC,WAAYlC,EAAGyC,mBAAoBzC,EAAGwC,QAC1DxC,EAAGsC,cAActC,EAAGkC,WAAYlC,EAAG0C,eAAgB1C,EAAG2C,eACtD3C,EAAGsC,cAActC,EAAGkC,WAAYlC,EAAG4C,eAAgB5C,EAAG2C,eAEtD3C,EAAG6C,qBAAqB7C,EAAG8B,YAAa9B,EAAG8C,kBAAmB9C,EAAGkC,WAAYxJ,KAAKqJ,QAAS,GAoBnG,OAjBIL,EAAAvJ,UAAA4K,QAAA,WACI,IAAM/C,EAAKtH,KAAKsH,GAEhBA,EAAGiC,YAAYjC,EAAGkC,WAAY,MAC9BlC,EAAG6B,gBAAgB7B,EAAG8B,YAAa,MAEnC9B,EAAGgD,cAActK,KAAKqJ,SACtB/B,EAAGiD,kBAAkBvK,KAAKiJ,cAG9BD,EAAAvJ,UAAA+K,eAAA,WACI,IAAMlD,EAAKtH,KAAKsH,GAIhB,OAHAA,EAAG6B,gBAAgB7B,EAAG8B,YAAa,MACnC9B,EAAGiD,kBAAkBvK,KAAKiJ,aAEnBjJ,KAAKqJ,SAEpBL,EAxCA,GAAarL,EAAAqL,oGCAb,IAAAyB,EAAAhN,EAAA,GAEAiN,EAAA,WAUI,SAAAA,EAAoBpD,EAA2BS,GAC3C/H,KAAKsH,GAAKA,EACVtH,KAAK+H,OAASA,EAEd/H,KAAK2K,aAAerD,EAAGsD,eACvBtD,EAAGuD,WAAWvD,EAAGwD,aAAc9K,KAAK2K,cACpCrD,EAAGyD,WAAWzD,EAAGwD,aAAc,IAAIE,aAAa,EAAG,EAAE,GAAG,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,IAAM1D,EAAG2D,aA+B/F,OA1CWP,EAAAvL,OAAP,SAAcmI,EAA2B4D,GACrC,OAAOT,EAAApD,WAAWC,EAAI4D,GACjBzD,KAAK,SAAAM,GAAU,WAAI2C,EAAepD,EAAIS,MAY/C2C,EAAAjL,UAAA0L,KAAA,SAAK9B,EAAuB+B,GACxB,IAAM9D,EAAKtH,KAAKsH,GAEhBA,EAAG+D,WAAWrL,KAAK+H,QAEnBT,EAAGgE,cAAchE,EAAGiE,UACpBjE,EAAGiC,YAAYjC,EAAGkC,WAAYH,GAC9B,IAAMmC,EAAUlE,EAAGmE,mBAAmBzL,KAAK+H,OAAQ,SACnDT,EAAGoE,UAAUF,EAAS,GAElBJ,GAAWA,EAAU9D,EAAItH,KAAK+H,QAElCT,EAAGqE,wBAAwB,GAC3BrE,EAAGuD,WAAWvD,EAAGwD,aAAc9K,KAAK2K,cACpCrD,EAAGsE,oBAAoB,EAAG,EAAGtE,EAAGuE,OAAO,EAAO,EAAG,GAEjDvE,EAAGwE,WAAWxE,EAAGyE,UAAW,EAAG,IAGnCrB,EAAAjL,UAAA4K,QAAA,WACI,IAAM/C,EAAKtH,KAAKsH,GAEhBA,EAAG+D,WAAW,MACd/D,EAAGuD,WAAWvD,EAAGwD,aAAc,MAE/BxD,EAAG0E,cAAchM,KAAK+H,QACtBT,EAAG2E,aAAajM,KAAK2K,eAE7BD,EA/CA,GAAa/M,EAAA+M,gGCFb,IAAAwB,EAAAzO,EAAA,IACA0O,EAAA1O,EAAA,IAEM2O,EAA4C,CAC9CC,eAAgBH,EAAAI,SAChBC,cAAeJ,EAAAG,UAGlBE,OAAeF,SAAW,SAAClO,GACxB,OAAAgO,EAAahO,qFCTjB,IAAAqO,EAAAhP,EAAA,GACAgF,EAAAhF,EAAA,GACAkF,EAAAlF,EAAA,GAGMiP,EAAiB,WACnB,IAAMC,EAAW,WACb,IAAIC,EAAMlL,KAAKmL,MAAsB,IAAhBnL,KAAKoL,UAAgBC,SAAS,IAEnD,OADIH,EAAInL,OAAS,IAAGmL,EAAM,IAAIA,GACvBA,GAGX,MAAO,IAAMD,IAAaA,IAAaA,KAGrCK,EAAS,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG/L,IAAI,SAAA+E,GAAK,OAAA0G,MA2BjC/O,EAAA2O,SAAW,WACpB,IAT4BW,EAAkBC,EAUxCC,EADcC,SAASC,eAAe,gBACpBC,WAAW,MAE7BC,EAAaH,SAASC,eAAe,eACrCG,EAAkBJ,SAASC,eAAe,oBAC1CI,EAAkBL,SAASC,eAAe,oBAC1CK,EAAgBN,SAASC,eAAe,kBAGxCM,EADeP,SAASC,eAAe,iBACnBC,WAAW,MAG/BM,EADcR,SAASC,eAAe,gBACnBC,WAAW,MAG9BO,EADeT,SAASC,eAAe,iBACnBC,WAAW,MAG/BQ,EADcV,SAASC,eAAe,gBACnBC,WAAW,MAG9BS,EADcX,SAASC,eAAe,gBACnBC,WAAW,MAG9BU,EADgBZ,SAASC,eAAe,kBACnBC,WAAW,MAGhCW,EADcb,SAASC,eAAe,gBACnBC,WAAW,MAE9BY,EAAS,WACX,IAAM9K,EAA8B,CAChCK,KAAM0K,SAASZ,EAAWzO,OAC1ByF,cAAe4J,SAASX,EAAgB1O,OACxCgG,UAAW,EAAIsJ,WAAWX,EAAgB3O,OAAS,IACnD+F,aAAcuJ,WAAWV,EAAc5O,QAGrCuP,EAAA5B,EAAApJ,oBAAAD,GAAEE,EAAA+K,EAAA/K,KAAMkC,EAAA6I,EAAA7I,QAEd/C,EAAA7B,SAASG,QAAQyE,EAAQjC,gBAAiB,SAACnD,EAAGC,EAAGC,GAC7C6M,EAAImB,UAAYhO,EAAM,OAAS,OAC/B6M,EAAIoB,SAAS,EAAEnO,EAAG,EAAEC,EAAG,EAAG,KAG9BoC,EAAA7B,SAASG,QAAQyE,EAAQ9B,YAAa,SAACtD,EAAGC,EAAGC,GAtE1B,IAAChB,EAuEhBqO,EAAKW,WAvEWhP,EAuEoBgB,GAtEpC,EAAU,OACX0M,EAAO1N,EAAI0N,EAAOvL,QAsEjBkM,EAAKY,SAAS,EAAEnO,EAAG,EAAEC,EAAG,EAAG,KAG/BoC,EAAA7B,SAASG,QAAQyE,EAAQtB,WAAY,SAAC9D,EAAGC,EAAGC,GACxCsN,EAAKU,UAAYhO,EAAM,OAAS,OAChCsN,EAAKW,SAAS,EAAEnO,EAAG,EAAEC,EAAG,EAAG,KAG/BoC,EAAA7B,SAASG,QAAQyE,EAAQrB,eAAgB,SAAC/D,EAAGC,EAAGC,GAC5CuN,EAAKS,UAAyB,SAAbhO,EAAIqF,KA5EN,SAAC6I,GACxB,IAAMpO,EAAIsB,KAAK+M,IAAID,EAAO9M,KAAKU,GAAK,KAC9B/B,EAAIqB,KAAKgN,IAAIF,EAAO9M,KAAKU,GAAK,KAE9BuM,EAAKjN,KAAKkN,MAAM,IAAM,GAAIxO,EAAI,KAC9ByO,EAAKnN,KAAKkN,MAAM,IAAM,GAAIvO,EAAI,KAIpC,MAFe,IAAMsO,EAAG5B,SAAS,IAAM8B,EAAG9B,SAAS,IAAM,IAqEV+B,CAAmBxO,EAAIsF,QAAuB,QAAbtF,EAAIqF,KAAiB,OAAS,OACtGkI,EAAKU,SAAS,EAAEnO,EAAG,EAAEC,EAAG,EAAG,KAG/B,IAAMoE,EAAWe,EAAQnB,mBAEzB5B,EAAA7B,SAASG,QAAQ0D,EAASsB,QAAS,SAAC3F,EAAGC,EAAGC,GACtCwN,EAAKQ,UAAYhO,IAAQqC,EAAA+C,aAAa0B,gBAAkB,OAAS9G,IAAQqC,EAAA+C,aAAawB,OAAS,OAAS,OACxG4G,EAAKS,SAAS,EAAEnO,EAAG,EAAEC,EAAG,EAAG,GAE3B0N,EAAKO,UAAYhO,IAAQqC,EAAA+C,aAAa0B,gBAAkB,OAAS,OACjE2G,EAAKQ,SAAS,EAAEnO,EAAG,EAAEC,EAAG,EAAG,KAG/B,IAEM0O,EAA0B,SAACC,GAAmB,OAChD5O,EAAG,OAAyB,EAAI4O,EAAG5O,GACnCC,EAAG,OAAyB,EAAI2O,EAAG3O,KAKvCoE,EAASA,SAAS1D,QAAQ,SAAC7C,EAAGL,GAC1BkQ,EAAKkB,YAAcpR,IAAM2H,EAAQhB,sBAAwB,OAAS,OAElEuJ,EAAKmB,YACL,IAAMC,EAAQJ,EAAwB7Q,EAAE,IACxC6P,EAAKqB,OAAOD,EAAM/O,EAAG+O,EAAM9O,GAE3B,IAAK,IAAIgP,EAAI,EAAGA,EAAInR,EAAEuD,SAAU4N,EAAG,CAC/B,IAAMC,EAAOP,EAAwB7Q,EAAEmR,IACvCtB,EAAKwB,OAAOD,EAAKlP,EAAGkP,EAAKjP,GAG7B0N,EAAKyB,YACLzB,EAAK0B,WAKTzB,EAAKiB,YAAc,OACnBjB,EAAKM,UAAY,OACjBN,EAAKO,SAAS,EAAG,EA7BO,SA+BxBjL,EAAKiC,MAAMxE,QAAQ,SAAC7C,EAAGL,GACnBmQ,EAAKiB,YAAcpR,IAAM2H,EAAQhB,sBAAwB,OAAS,OAElEwJ,EAAKkB,YACL,IAAMC,EAAQJ,EAAwB7Q,EAAE,IACxC8P,EAAKoB,OAAOD,EAAM/O,EAAG+O,EAAM9O,GAE3B,IAAK,IAAIqP,EAAI,EAAGA,EAAIxR,EAAEuD,SAAUiO,EAAG,CAC/B,IAAMJ,EAAOP,EAAwB7Q,EAAEwR,IACvC1B,EAAKuB,OAAOD,EAAKlP,EAAGkP,EAAKjP,GAG7B2N,EAAKwB,YACLxB,EAAKyB,WAKTxB,EAAKK,UAAY,OACjBL,EAAKM,SAAS,EAAG,EAlDO,SAoDxBjL,EAAK+B,UAAUtE,QAAQ,SAAC4O,EAAGC,GACvB,mBAAS/R,GACLoQ,EAAKK,UAAY5B,IACjBuB,EAAKiB,YAEL,IAAMC,EAAQJ,EAAwBzL,EAAKiC,MAAMqK,GAAGD,EAAG9R,KACvDoQ,EAAKmB,OAAOD,EAAM/O,EAAG+O,EAAM9O,GAE3B,CAAC,EAAG,EAAG,GAAGU,QAAQ,SAAAzC,GACd,IAAM+C,EAAI0N,EAAwBzL,EAAKiC,MAAMqK,GAAGD,EAAG9R,EAAES,KACrD2P,EAAKsB,OAAOlO,EAAEjB,EAAGiB,EAAEhB,KAGvB4N,EAAK4B,QAZAhS,EAAI,EAAGA,EAAI8R,EAAGlO,OAAS,EAAG5D,GAAK,IAA/BA,MAnIWoP,EAsJxB,CAAC,UAAW,YAtJ8BC,EAuJ1CgB,EAFA,CAACX,EAAYC,EAAiBC,EAAiBC,GApJ9C3M,QAAQ,SAAAzC,GACT2O,EAAOlM,QAAQ,SAAA+O,GACXxR,EAAEwR,GAAK5C,MAsJfgB,oFC3LJ,IAAA6B,EAAAtS,EAAA,IACAgF,EAAAhF,EAAA,GAEMuS,EAAkB,SAAC/O,EAAoBb,EAAWC,GAGpD,IAFA,IAAIa,EAAiB,EAEZ+O,EAAK7P,EAAE,EAAG6P,GAAM7P,EAAE,IAAK6P,EAC5B,IAAK,IAAIC,EAAK7P,EAAE,EAAG6P,GAAM7P,EAAE,IAAK6P,EACxBD,GAAM7P,GAAK8P,GAAM7P,IACjB4P,EAAK,GAAKC,EAAK,GAAKD,GAAMhP,EAAInB,MAAM,GAAKoQ,GAAMjP,EAAIlB,OAAO,EAAGmB,IAC5DA,GAAUD,EAAIV,GAAG0P,EAAGC,GAAM,EAAI,GAI3C,OAAOhP,GAGEvD,EAAA6F,qBAAuB,SAAC1D,EAAeC,EAAgB0D,EAAc0M,EAAoBC,EAAeC,EAAkBC,GAKnI,IAJA,IAAMpP,EAAS,IAAIuB,EAAA5C,UAAmBC,EAAOC,GACvCwQ,EAAS,IAAI9N,EAAA5C,UAAmBC,EAAOC,GACzCyQ,EAAOT,EAAAU,aAAahN,EAAO,KAEtBrD,EAAI,EAAGA,EAAIN,IAASM,EACzB,IAAK,IAAIC,EAAI,EAAGA,EAAIN,IAAUM,EAAG,CAC7B,IAAMwP,EAAa,IAANzP,GAAiB,IAANC,GAAWD,IAAMN,EAAM,GAAKO,IAAMN,EAAO,GAAKyQ,EAAOL,EAC7EjP,EAAOf,MAAMC,EAAGC,EAAGwP,GACnBU,EAAOpQ,MAAMC,EAAGC,EAAGwP,GAEnBW,EAAOT,EAAAU,aAAaD,GAI5B,IAAK,IAAI3S,EAAI,EAAGA,EAAIyS,IAAczS,EAAG,CACjC,IAASuC,EAAI,EAAGA,EAAIN,EAAM,IAAKM,EAC3B,IAASC,EAAI,EAAGA,EAAIN,EAAO,IAAKM,EAAG,CAC/B,IAAMqQ,EAAYV,EAAgB9O,EAAQd,EAAGC,GAC7CkQ,EAAOpQ,MAAMC,EAAGC,EAAGqQ,IAAcxP,EAAOX,GAAGH,EAAGC,GAAKgQ,EAAWD,IAGtElP,EAAOV,SAAS+P,GAGpB,OAAOrP,kFCxCX,IAAMyP,EAAI,WAIGhT,EAAA8S,aAAe,SAACG,GACzB,OAJM,QAIAlP,KAAKmL,MAAM+D,EAAeD,GAH1B,YAGoCA,EAAKA,kFCPnD,IAAA9N,EAAApF,EAAA,GAQaE,EAAAiH,YAAc,SAACiM,EAAeC,EAAoBC,GAC3D,IAAMxO,EAAY,GAEduO,EAAa,IAAGA,EAAa,GAEjC,IAAK,IAAIjT,EAAI,EAAGA,EAAIgT,EAAMpP,SAAU5D,EAAG,CACnC,IAAM0I,EAAOsK,EAAW,GAALhT,EAASgT,EAAMpP,OAAO,EAAI5D,EAAE,GACzCmT,EAAOH,EAAMhT,GACbyR,EAAOuB,GAAOhT,EAAI,GAAKgT,EAAMpP,QAE7BwP,EAAOpO,EAAA1B,GAAGM,OAAOoB,EAAA1B,GAAGK,MAAM+E,EAAMyK,IAChCE,EAAOrO,EAAA1B,GAAGM,OAAOoB,EAAA1B,GAAGK,MAAMwP,EAAM1B,IAEhC6B,EAAOtO,EAAA1B,GAAGS,OAAOiB,EAAA1B,GAAGI,KAAKgF,EAAMyK,GAAO,IACtCI,EAAOvO,EAAA1B,GAAGS,OAAOiB,EAAA1B,GAAGI,KAAKyP,EAAM1B,GAAO,IACtC+B,EAAUxO,EAAA1B,GAAGS,OAAOiB,EAAA1B,GAAGK,MAAM2P,EAAMC,GAAOL,GAE1CO,EAAQzO,EAAA1B,GAAGS,OAAOyP,EAAUJ,GAAQA,EAAOC,IAC3CK,EAAQ1O,EAAA1B,GAAGS,OAAOyP,GAAUH,GAAQD,EAAOC,IAEjD3O,EAAI8D,KAAK,CACL2I,GAAIgC,EACJQ,SAAU3O,EAAA1B,GAAGI,KAAKyP,EAAMM,GACxBG,SAAU5O,EAAA1B,GAAGI,KAAKyP,EAAMO,KAIhC,IAAMG,EAAM,EAAIZ,EAEV5P,EAAiB,GACvB,IAASrD,EAAI,EAAGA,EAAI0E,EAAId,SAAU5D,EAC9B,CAAMmT,EAAOzO,EAAI1E,GACXyR,EAAO/M,GAAK1E,EAAI,GAAK0E,EAAId,QAE/B,IAHA,IAGS1C,EAAI,EAAGA,EAAI,EAAK2S,EAAM,EAAI3S,GAAK2S,EAAK,CACzC,IAAIC,EAAe,CAAEvR,EAAG,EAAGC,EAAG,GAE9BwC,EAAA1B,GAAGC,IAAIuQ,EAAQ9O,EAAA1B,GAAGS,OAAOoP,EAAKhC,IAAY,EAAEjQ,IAAI,EAAEA,IAAI,EAAEA,KACxD8D,EAAA1B,GAAGC,IAAIuQ,EAAQ9O,EAAA1B,GAAGS,OAAOoP,EAAKS,SAAW,GAAG,EAAE1S,IAAI,EAAEA,GAAGA,IACvD8D,EAAA1B,GAAGC,IAAIuQ,EAAQ9O,EAAA1B,GAAGS,OAAO0N,EAAKkC,SAAW,GAAG,EAAEzS,GAAGA,EAAEA,IACnD8D,EAAA1B,GAAGC,IAAIuQ,EAAQ9O,EAAA1B,GAAGS,OAAO0N,EAAKN,GAAWjQ,EAAEA,EAAEA,IAE7CmC,EAAOmF,KAAKsL,IAIpB,OAAOzQ,kFCpDEvD,EAAA2H,YAAc,SAACuB,GACxB,IAAM+K,EAAoB,GACpBtS,EAAIuH,EAAOpF,OACjB,GAAInC,EAAI,EAAG,OAAOsS,EAElB,IAAMC,EAAc,IAAI3R,MAAMZ,GAC9B,GAAIwC,EAAK+E,GAAU,EACf,IAAK,IAAIiL,EAAI,EAAGA,EAAIxS,EAAGwS,IAAKD,EAAEC,GAAKA,OAEnC,IAASA,EAAI,EAAGA,EAAIxS,EAAGwS,IAAKD,EAAEC,GAAMxS,EAAI,EAAKwS,EAGjD,IAAIC,EAAKzS,EACL2D,EAAQ,EAAI8O,EAChB,IAASD,EAAIC,EAAK,EAAGA,EAAK,GAAK,CAC3B,GAAK9O,KAAY,EAAG,OAAO2O,EAE3B,IAAI/L,EAAIiM,EACJC,GAAMlM,IAAGA,EAAI,GAEbkM,IADJD,EAAIjM,EAAI,KACKiM,EAAI,GACjB,IAAIE,EAAIF,EAAI,EAGZ,GAFIC,GAAMC,IAAGA,EAAI,GAEbC,EAAKpL,EAAQhB,EAAGiM,EAAGE,EAAGD,EAAIF,GAAI,CAC9BD,EAAQvL,KAAKwL,EAAEhM,IACf+L,EAAQvL,KAAKwL,EAAEC,IACfF,EAAQvL,KAAKwL,EAAEG,IACf,IAAK,IAAIpS,EAAIkS,EAAG/S,EAAI+S,EAAI,EAAG/S,EAAIgT,EAAInS,IAAKb,IAAK8S,EAAEjS,GAAKiS,EAAE9S,GAEtDkE,EAAQ,IADR8O,GAKR,OAAOH,GAGX,IAAM9P,EAAO,SAAC+E,GAEV,IADA,IAAIqL,EAAI,EACCvS,EAAIkH,EAAOpF,OAAS,EAAG0Q,EAAI,EAAGA,EAAItL,EAAOpF,OAAQ9B,EAAIwS,IAC1DD,GAAKrL,EAAOlH,GAAGS,EAAIyG,EAAOsL,GAAG9R,EAAIwG,EAAOsL,GAAG/R,EAAIyG,EAAOlH,GAAGU,EAE7D,OAAO6R,EAAI,GAGTE,EAAkB,SAACF,EAASG,EAASC,EAASC,GAChD,IAAMC,EAAKF,EAAElS,EAAIiS,EAAEjS,EAAGqS,EAAKH,EAAEjS,EAAIgS,EAAEhS,EAC7BqS,EAAKR,EAAE9R,EAAIkS,EAAElS,EAAGuS,EAAKT,EAAE7R,EAAIiS,EAAEjS,EAC7BuS,EAAKP,EAAEjS,EAAI8R,EAAE9R,EAAGyS,EAAKR,EAAEhS,EAAI6R,EAAE7R,EAC7ByS,EAAMP,EAAEnS,EAAI8R,EAAE9R,EAAG2S,EAAMR,EAAElS,EAAI6R,EAAE7R,EAC/B2S,EAAMT,EAAEnS,EAAIiS,EAAEjS,EAAG6S,EAAMV,EAAElS,EAAIgS,EAAEhS,EAC/B6S,EAAMX,EAAEnS,EAAIkS,EAAElS,EAAG+S,EAAMZ,EAAElS,EAAIiS,EAAEjS,EAMrC,OAJiBmS,EAAKS,EAAMR,EAAKO,GAId,GAFFN,EAAKS,EAAMR,EAAKO,GAEG,GAHnBN,EAAKG,EAAMF,EAAKC,GAGoB,GAGnDb,EAAO,SAACpL,EAAgBhB,EAAWiM,EAAWE,EAAW1S,EAAWuS,GACtE,IAAMK,EAAIrL,EAAOgL,EAAEhM,IACbwM,EAAIxL,EAAOgL,EAAEC,IACbQ,EAAIzL,EAAOgL,EAAEG,IAGnB,IADeK,EAAEjS,EAAI8R,EAAE9R,IAAMkS,EAAEjS,EAAI6R,EAAE7R,IAAMgS,EAAEhS,EAAI6R,EAAE7R,IAAMiS,EAAElS,EAAI8R,EAAE9R,GACrD,KAAM,OAAO,EAEzB,IAAK,IAAIT,EAAI,EAAGA,EAAIL,EAAGK,IACnB,GAAKA,GAAKkG,GAAOlG,GAAKmS,GAAOnS,GAAKqS,EAAlC,CACA,IAAMO,EAAI1L,EAAOgL,EAAElS,IACnB,GAAIyS,EAAgBF,EAAGG,EAAGC,EAAGC,GAAI,OAAO,EAG5C,OAAO,kFC5EX,IAAA9F,EAAAhP,EAAA,GACA2V,EAAA3V,EAAA,IACA4V,EAAA5V,EAAA,GACA6V,EAAA7V,EAAA,GACA8V,EAAA9V,EAAA,IAOM+V,EAA0B,SAAClM,EAA2BtD,EAAcV,GACtE,OAAAmQ,QAAQC,IAAI,CACRN,EAAAO,aAAaxU,OAAOmI,EAAI,yBAA0BhE,GAClDgQ,EAAA5I,eAAevL,OAAOmI,EAAI,wBAC1BiM,EAAAK,aAAazU,OAAOmI,EAAItD,EAAMA,GAC9BuP,EAAAK,aAAazU,OAAOmI,EAAItD,EAAMA,KAEjCyD,KAAK,SAAC4G,OAACwF,EAAAxF,EAAA,GAAcyF,EAAAzF,EAAA,GAAa0F,EAAA1F,EAAA,GAAY2F,EAAA3F,EAAA,GACrC4F,EAAiB,IAAIZ,EAAArK,mBAAmB1B,EAAItD,EAAMA,GA2BxD,OAzBAsD,EAAG6B,gBAAgB7B,EAAG8B,YAAa6K,EAAehL,aAClD3B,EAAG4M,SAAS,EAAG,EAAGlQ,EAAMA,GACxBsD,EAAG6M,WAAW,EAAG,EAAG,EAAG,GACvB7M,EAAG8M,MAAM9M,EAAG+M,iBAAmB/M,EAAGgN,kBAClCT,EAAa1I,OAEb4I,EAAWQ,IAAIN,EAAe5K,QAAS,IAEvC/B,EAAG6B,gBAAgB7B,EAAG8B,YAAa6K,EAAehL,aAClD3B,EAAG4M,SAAS,EAAG,EAAGlQ,EAAMA,GAExB8P,EAAY3I,KAAK4I,EAAWS,cAAe,SAAClN,EAAIS,GAC5CT,EAAGmN,UAAUnN,EAAGmE,mBAAmB1D,EAAQ,gBAAiB/D,EAAMA,KAGtEgQ,EAAWO,IAAIN,EAAe5K,QAAS,GAEvC/B,EAAG6B,gBAAgB7B,EAAG8B,YAAa,MACnC9B,EAAG4M,SAAS,EAAG,EAAG5M,EAAGoN,OAAO5U,MAAOwH,EAAGoN,OAAO3U,QAE7C8T,EAAaxJ,UACbyJ,EAAYzJ,UAIL,CAAEsK,MAHKZ,EAAWvJ,iBAGT5E,OAFDoO,EAAWxJ,qBAqB5BoK,EAAqB,SAACtR,EAAYqC,EAAwB2B,GAC5DmM,QAAQC,IAAI,CACRJ,EAAA5I,eAAevL,OAAOmI,EAAI,2BAC1BkM,EAAwBlM,EAAI,KAAMhE,KAErCmE,KAAK,SAAC4G,OAACwG,EAAAxG,EAAA,GAAUyG,EAAAzG,EAAA,GACdwG,EAAS1J,KAAc,UAATxF,EAAmBmP,EAAYH,MAAQG,EAAYlP,QAEjEiP,EAASxK,UACT/C,EAAGgD,cAAcwK,EAAYH,OAC7BrN,EAAGgD,cAAcwK,EAAYlP,WAIxBjI,EAAA2O,SAAW,WACpB,IACMhJ,EAAOmJ,EAAAtJ,aAAa,CAAEM,KADf,MACqBqB,UAAW,IAAMD,aAAc,GAAIN,cAAe,IAE9E+C,EAAK,CAAC,EAAE,EAAE,GAAGrG,IAAI,SAAAb,GAAK,OAACgN,SAASC,eAAe,SAASjN,GAAyBkN,WAAW,YAjC5E,SAAChK,EAAYgE,GACnCmM,QAAQC,IAAI,CACRN,EAAAO,aAAaxU,OAAOmI,EAAI,yBAA0BhE,KAErDmE,KAAK,SAAC4G,OAACwF,EAAAxF,EAAA,GACJ/G,EAAG4M,SAAS,EAAG,EAAG5M,EAAGoN,OAAO5U,MAAOwH,EAAGoN,OAAO3U,QAC7CuH,EAAG6M,WAAW,EAAG,EAAG,EAAG,GACvB7M,EAAG8M,MAAM9M,EAAG+M,iBAAmB/M,EAAGgN,kBAElCT,EAAa1I,OAEb0I,EAAaxJ,YAwBjB0K,CAAkBzR,EAAMgE,EAAG,IAC3BsN,EAAmBtR,EAAM,QAASgE,EAAG,IACrCsN,EAAmBtR,EAAM,SAAUgE,EAAG,oFCtF1C,IAAA0N,EAAAvX,EAAA,IACAgN,EAAAhN,EAAA,GAEMwX,EAAe,SAAC3R,GAClB,OAAA0R,EAAQA,EAAQ1R,EAAKiC,OAAOtE,IAAI,SAAA6Q,GAAK,OAACA,EAAE1R,EAAG0R,EAAEzR,OAE3C6U,EAAiB,SAAC5R,GACpB,IAAI6R,EAAY,EACZjU,EAAmB,GAOvB,OALAoC,EAAK+B,UAAUtE,QAAQ,SAACqU,EAAMC,GAC1BnU,EAASA,EAAOoU,OAAOF,EAAKnU,IAAI,SAAAb,GAAK,OAAAA,EAAI+U,KACzCA,GAAa7R,EAAKiC,MAAM8P,GAAO5T,SAG5BP,GAGXyS,EAAA,WAaI,SAAAA,EAAoBrM,EAA2BhE,EAAYyE,GACvD/H,KAAKsH,GAAKA,EACVtH,KAAK+H,OAASA,EAEd/H,KAAK2K,aAAerD,EAAGsD,eACvBtD,EAAGuD,WAAWvD,EAAGwD,aAAc9K,KAAK2K,cACpCrD,EAAGyD,WAAWzD,EAAGwD,aAAc,IAAIE,aAAaiK,EAAa3R,IAAQgE,EAAG2D,aAExE,IAAMsK,EAAkBL,EAAe5R,GACvCtD,KAAKwV,eAAiBD,EAAgB9T,OAEtCzB,KAAKyV,YAAcnO,EAAGsD,eACtBtD,EAAGuD,WAAWvD,EAAGoO,qBAAsB1V,KAAKyV,aAC5CnO,EAAGyD,WAAWzD,EAAGoO,qBAAsB,IAAIC,YAAYJ,GAAkBjO,EAAG2D,aA2BpF,OA7CW0I,EAAAxU,OAAP,SAAcmI,EAA2B4D,EAAoB5H,GACzD,OAAOmH,EAAApD,WAAWC,EAAI4D,GACjBzD,KAAK,SAAAM,GAAU,WAAI4L,EAAarM,EAAIhE,EAAMyE,MAmBnD4L,EAAAlU,UAAA0L,KAAA,WACI,IAAM7D,EAAKtH,KAAKsH,GAEhBA,EAAG+D,WAAWrL,KAAK+H,QAEnBT,EAAGqE,wBAAwB,GAC3BrE,EAAGuD,WAAWvD,EAAGwD,aAAc9K,KAAK2K,cACpCrD,EAAGsE,oBAAoB,EAAG,EAAGtE,EAAGuE,OAAO,EAAO,EAAG,GAEjDvE,EAAGuD,WAAWvD,EAAGoO,qBAAsB1V,KAAKyV,aAC5CnO,EAAGsO,aAAatO,EAAGyE,UAAW/L,KAAKwV,eAAgBlO,EAAGuO,eAAgB,IAG1ElC,EAAAlU,UAAA4K,QAAA,WACI,IAAM/C,EAAKtH,KAAKsH,GAEhBA,EAAG+D,WAAW,MACd/D,EAAGuD,WAAWvD,EAAGoO,qBAAsB,MACvCpO,EAAGuD,WAAWvD,EAAGwD,aAAc,MAE/BxD,EAAG0E,cAAchM,KAAK+H,QACtBT,EAAG2E,aAAajM,KAAK2K,cACrBrD,EAAG2E,aAAajM,KAAKyV,cAE7B9B,EArDA,GAAahW,EAAAgW,gCCnBb,IAAAmC,EAAkBrY,EAAQ,IAqB1BG,EAAAD,QALA,SAAAoY,GAEA,OADA,MAAAA,KAAAtU,OACAqU,EAAAC,EAAA,wBClBA,IAAAC,EAAgBvY,EAAQ,IACxBwY,EAAoBxY,EAAQ,IAoC5BG,EAAAD,QAvBA,SAAAmY,EAAAC,EAAApB,EAAAuB,EAAAC,EAAAjV,GACA,IAAAmU,GAAA,EACA5T,EAAAsU,EAAAtU,OAKA,IAHAyU,MAAAD,GACA/U,MAAA,MAEAmU,EAAA5T,GAAA,CACA,IAAA3C,EAAAiX,EAAAV,GACAV,EAAA,GAAAuB,EAAApX,GACA6V,EAAA,EAEAmB,EAAAhX,EAAA6V,EAAA,EAAAuB,EAAAC,EAAAjV,GAEA8U,EAAA9U,EAAApC,GAEKqX,IACLjV,IAAAO,QAAA3C,GAGA,OAAAoC,kBCfAtD,EAAAD,QAXA,SAAAoY,EAAAK,GAKA,IAJA,IAAAf,GAAA,EACA5T,EAAA2U,EAAA3U,OACA4U,EAAAN,EAAAtU,SAEA4T,EAAA5T,GACAsU,EAAAM,EAAAhB,GAAAe,EAAAf,GAEA,OAAAU,oBChBA,IAAAnX,EAAanB,EAAQ,GACrB6Y,EAAkB7Y,EAAQ,IAC1B8Y,EAAc9Y,EAAQ,IAGtB+Y,EAAA5X,IAAA6X,wBAAAC,EAcA9Y,EAAAD,QALA,SAAAmB,GACA,OAAAyX,EAAAzX,IAAAwX,EAAAxX,OACA0X,GAAA1X,KAAA0X,sBChBA,IAAAG,EAAiBlZ,EAAQ,IAGzBmZ,EAAA,iBAAAC,iBAAAtY,iBAAAsY,KAGAC,EAAAH,GAAAC,GAAAG,SAAA,cAAAA,GAEAnZ,EAAAD,QAAAmZ,oBCRA,SAAAE,GACA,IAAAL,EAAA,iBAAAK,QAAAzY,iBAAAyY,EAEApZ,EAAAD,QAAAgZ,oCCHA,IAAAM,EAGAA,EAAA,WACA,OAAAjX,KADA,GAIA,IAEAiX,KAAA,IAAAF,SAAA,iBACC,MAAAjH,GAED,iBAAAtD,SAAAyK,EAAAzK,QAOA5O,EAAAD,QAAAsZ,mBCnBA,IAAAC,EAAsBzZ,EAAQ,IAC9B0Z,EAAmB1Z,EAAQ,GAG3B2Z,EAAA7Y,OAAAkB,UAGAC,EAAA0X,EAAA1X,eAGA2X,EAAAD,EAAAC,qBAoBAf,EAAAY,EAAA,WAA8C,OAAAI,UAA9C,IAAkEJ,EAAA,SAAApY,GAClE,OAAAqY,EAAArY,IAAAY,EAAA1B,KAAAc,EAAA,YACAuY,EAAArZ,KAAAc,EAAA,WAGAlB,EAAAD,QAAA2Y,mBCnCA,IAAAiB,EAAiB9Z,EAAQ,IACzB0Z,EAAmB1Z,EAAQ,GAG3B+Z,EAAA,qBAaA5Z,EAAAD,QAJA,SAAAmB,GACA,OAAAqY,EAAArY,IAAAyY,EAAAzY,IAAA0Y,oBCdA,IAAA5Y,EAAanB,EAAQ,GACrBga,EAAgBha,EAAQ,IACxBia,EAAqBja,EAAQ,IAG7Bka,EAAA,gBACAC,EAAA,qBAGAC,EAAAjZ,IAAAC,iBAAA6X,EAkBA9Y,EAAAD,QATA,SAAAmB,GACA,aAAAA,OACA4X,IAAA5X,EAAA8Y,EAAAD,EAEAE,QAAAtZ,OAAAO,GACA2Y,EAAA3Y,GACA4Y,EAAA5Y,qBCxBA,IAAAF,EAAanB,EAAQ,GAGrB2Z,EAAA7Y,OAAAkB,UAGAC,EAAA0X,EAAA1X,eAOAoY,EAAAV,EAAArK,SAGA8K,EAAAjZ,IAAAC,iBAAA6X,EA6BA9Y,EAAAD,QApBA,SAAAmB,GACA,IAAAiZ,EAAArY,EAAA1B,KAAAc,EAAA+Y,GACAG,EAAAlZ,EAAA+Y,GAEA,IACA/Y,EAAA+Y,QAAAnB,EACA,IAAAuB,GAAA,EACG,MAAAnI,IAEH,IAAA5O,EAAA4W,EAAA9Z,KAAAc,GAQA,OAPAmZ,IACAF,EACAjZ,EAAA+Y,GAAAG,SAEAlZ,EAAA+Y,IAGA3W,kBCzCA,IAOA4W,EAPAvZ,OAAAkB,UAOAsN,SAaAnP,EAAAD,QAJA,SAAAmB,GACA,OAAAgZ,EAAA9Z,KAAAc,mBCKA,IAAAyX,EAAArW,MAAAqW,QAEA3Y,EAAAD,QAAA4Y,iFCzBA,IAAAlD,EAAA5V,EAAA,GACA6V,EAAA7V,EAAA,GAEAmW,EAAA,WAcI,SAAAA,EAAoBtM,EAA2BxH,EAAeC,EAAgBmY,GAC1ElY,KAAKsH,GAAKA,EACVtH,KAAKF,MAAQA,EACbE,KAAKD,OAASA,EACdC,KAAKkY,eAAiBA,EACtBlY,KAAKmY,UAAY,IAAI9E,EAAArK,mBAAmB1B,EAAIxH,EAAOC,GACnDC,KAAKoY,UAAY,IAAI/E,EAAArK,mBAAmB1B,EAAIxH,EAAOC,GAyC3D,OApDW6T,EAAAzU,OAAP,SAAcmI,EAA2BxH,EAAeC,GACpD,OAAOuT,EAAA5I,eAAevL,OAAOmI,EAAI,6BAC5BG,KAAK,SAAAyQ,GAAkB,WAAItE,EAAatM,EAAIxH,EAAOC,EAAQmY,MAYpEtE,EAAAnU,UAAA8U,IAAA,SAAIlL,EAAuBiH,GAA3B,IAAA+H,EAAArY,KACUsH,EAAKtH,KAAKsH,GAEZgJ,EAAa,IAAGA,EAAa,GAEjC,IAAK,IAAIzS,EAAI,EAAGA,EAAIyS,IAAczS,EAC9ByJ,EAAG6B,gBAAgB7B,EAAG8B,YAAapJ,KAAKmY,UAAUlP,aACxC,IAANpL,GAASyJ,EAAG4M,SAAS,EAAG,EAAGlU,KAAKF,MAAOE,KAAKD,QAEhDC,KAAKkY,eAAe/M,KAAW,IAANtN,EAAUwL,EAAUrJ,KAAKoY,UAAU/O,QAAS,SAAC/B,EAAIS,GACtET,EAAGmN,UAAUnN,EAAGmE,mBAAmB1D,EAAQ,gBAAiBsQ,EAAKvY,MAAOuY,EAAKtY,QAC7EuH,EAAGmN,UAAUnN,EAAGmE,mBAAmB1D,EAAQ,eAAgB,EAAG,KAGlET,EAAG6B,gBAAgB7B,EAAG8B,YAAapJ,KAAKoY,UAAUnP,aAElDjJ,KAAKkY,eAAe/M,KAAKnL,KAAKmY,UAAU9O,QAAS,SAAC/B,EAAIS,GAClDT,EAAGmN,UAAUnN,EAAGmE,mBAAmB1D,EAAQ,gBAAiBsQ,EAAKvY,MAAOuY,EAAKtY,QAC7EuH,EAAGmN,UAAUnN,EAAGmE,mBAAmB1D,EAAQ,eAAgB,EAAG,MAK1ExJ,OAAAC,eAAIoV,EAAAnU,UAAA,gBAAa,KAAjB,WACI,OAAOO,KAAKoY,UAAU/O,yCAG1BuK,EAAAnU,UAAA4K,QAAA,WACIrK,KAAKkY,eAAe7N,UACpBrK,KAAKmY,UAAU9N,UACfrK,KAAKoY,UAAU/N,WAGnBuJ,EAAAnU,UAAA+K,eAAA,WAGI,OAFAxK,KAAKkY,eAAe7N,UACpBrK,KAAKmY,UAAU9N,UACRrK,KAAKoY,UAAU5N,kBAE9BoJ,EA7DA,GAAajW,EAAAiW","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 9);\n","export interface Grid<T> {\n    readonly width: number;\n    readonly height: number;\n    at(x: number, y: number): T;\n}\n\nexport type GridCallback<T> = (x: number, y: number, val: T) => void;\nexport type GridMapper<T,U> = (x: number, y: number, val: T) => U;\n\nexport class WriteGrid<T> implements Grid<T> {\n    public readonly width: number;\n    public readonly height: number;\n\n    private vals: T[];\n\n    constructor(width: number, height: number) {\n        this.width = width;\n        this.height = height;\n        this.vals = new Array(width * height);\n    }\n\n    write(x: number, y: number, val: T): void {\n        this.vals[x + y*this.width] = val;\n    }\n\n    at(x: number, y: number): T {\n        return this.vals[x + y*this.width];\n    }\n\n    copyFrom(grid: Grid<T>): void {\n        for (let x = 0; x < this.width && x < grid.width; ++x) {\n            for (let y = 0; y < this.height && y < grid.height; ++y) {\n                this.write(x, y, grid.at(x, y));\n            }\n        }\n    }\n}\n\nexport const safeOutOfBounds = <T>(grid: Grid<T>, oobValue: T): Grid<T> => ({\n    width: grid.width,\n    height: grid.height,\n    at: (x, y) => x < 0 || y < 0 || x >= grid.width || y >= grid.width ? oobValue : grid.at(x, y)\n});\n\nexport const GridTool = {\n    find: <T>(grid: Grid<T>, test: GridMapper<T, boolean>): { x: number, y: number } | null => {\n        for (let x = 0; x < grid.width; ++x) {\n            for (let y = 0; y < grid.height; ++y) {\n                if (test(x, y, grid.at(x, y))) {\n                    return { x, y };\n                }\n            }\n        }\n        return null;\n    },\n\n    forEach: <T>(grid: Grid<T>, fn: GridCallback<T>): void => {\n        for (let x = 0; x < grid.width; ++x) {\n            for (let y = 0; y < grid.height; ++y) {\n                fn(x, y, grid.at(x, y));\n            }\n        }\n    },\n\n    map: <T, U>(grid: Grid<T>, fn: GridMapper<T, U>): WriteGrid<U> => {\n        const result = new WriteGrid<U>(grid.width, grid.height);\n\n        for (let x = 0; x < grid.width; ++x) {\n            for (let y = 0; y < grid.height; ++y) {\n                result.write(x, y, fn(x, y, grid.at(x, y)));\n            }\n        }\n\n        return result;\n    },\n};","export interface Vec2 {\n    x: number,\n    y: number,\n}\n\nexport interface Rect {\n    xmin: number,\n    ymin: number,\n    xmax: number,\n    ymax: number,\n}\n\nexport const V2 = {\n    add: (a: Vec2, b: Vec2): void => {\n        a.x += b.x;\n        a.y += b.y;\n    },\n\n    plus: (a: Vec2, b: Vec2): Vec2 => ({\n        x: a.x + b.x,\n        y: a.y + b.y,\n    }),\n\n    minus: (a: Vec2, b: Vec2): Vec2 => ({\n        x: a.x - b.x,\n        y: a.y - b.y,\n    }),\n\n    length: (a: Vec2): number =>\n        Math.sqrt(a.x*a.x + a.y*a.y),\n    \n    scaled: (a: Vec2, s: number): Vec2 => ({\n        x: s * a.x,\n        y: s * a.y,\n    }),\n};\n\nexport const RectTool = {\n    area: (r: Rect): number =>\n        (r.xmax - r.xmin) * (r.ymax - r.ymin),\n};\n\nexport const smallestDifferenceRadians = (a: number, b: number): number => {\n    a %= 2 * Math.PI;\n    b %= 2 * Math.PI;\n\n    if (Math.abs(a - b) > Math.PI) {\n        if (a > 0) a -= 2 * Math.PI;\n        else a += 2 * Math.PI;\n    }\n\n    return a - b;\n};\n\nexport const findBounds = (pts: Vec2[]): Rect => {\n    const result: Rect = { xmin: Infinity, ymin: Infinity, xmax: -Infinity, ymax: -Infinity };\n\n    pts.forEach(p => {\n        if (p.x < result.xmin) result.xmin = p.x;\n        if (p.y < result.ymin) result.ymin = p.y;\n        if (p.x > result.xmax) result.xmax = p.x;\n        if (p.y > result.ymax) result.ymax = p.y;\n    });\n\n    return result;\n};","var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n","import { Grid, WriteGrid, GridTool, safeOutOfBounds } from 'utils/grid';\nimport { runCellularAutomaton } from './automaton';\nimport { markEdges, findContours, EdgeMarkedMapTile, FindContoursResult } from './findContours';\nimport { smoothCurve } from './smoothCurve';\nimport { Vec2, findBounds, RectTool } from 'utils/math';\nimport { triangulate } from './triangulate';\n\nexport interface CaveGeneratorConfig {\n    seed: number,\n    edgePointDist: 0 | 1 | 2,\n    curveQuality: number,\n    curveBend: number,\n}\n\nexport interface Cave {\n    edges: Vec2[][],\n    triangles: number[][],\n}\n\nexport interface CaveBuildDetails {\n    automatonResult: Grid<boolean>;\n    coloredGrid: Grid<number>;\n    filledGrid: Grid<boolean>;\n    edgeMarkedGrid: Grid<EdgeMarkedMapTile>;\n    findContoursResult: FindContoursResult;\n    outerMostContourIndex: number;\n    topLeftMostVertexIndex: number;\n}\n\nconst floodFill = (grid: WriteGrid<number>, x: number, y: number, replace: number, value: number, count: number): number => {\n    if (x < 0 || y < 0) return count;\n    if (x >= grid.width || y >= grid.height) return count;\n\n    const tile = grid.at(x, y);\n\n    if (tile === value) return count;\n    if (tile !== replace) return count;\n\n    grid.write(x, y, value);\n    count++;\n\n    count = floodFill(grid, x - 1, y, replace, value, count);\n    count = floodFill(grid, x + 1, y, replace, value, count);\n    count = floodFill(grid, x, y - 1, replace, value, count);\n    count = floodFill(grid, x, y + 1, replace, value, count);\n    return count;\n};\n\nconst colorGridRegions = (grid: WriteGrid<number>): number => {\n    let color = 1;\n    let largestColor = -1;\n    let largestRegion = 0;\n\n    while (true) {\n        const pos = GridTool.find(grid, (x, y, val) => val === 0);\n        if (pos === null) return largestColor;\n\n        const size = floodFill(grid, pos.x, pos.y, 0, color, 0);\n\n        if (size > largestRegion) {\n            largestRegion = size;\n            largestColor = color;\n        }\n\n        color++;\n    }\n};\n\nconst fixSingleTileBridges = (grid: WriteGrid<boolean>): void => {\n    GridTool.forEach(safeOutOfBounds(grid, true), (x, y, val) => {\n        if (!val) return;\n\n        if (val && !grid.at(x - 1, y) && !grid.at(x + 1, y)) {\n            grid.write(x + 1, y, true);\n        }\n\n        if (val && !grid.at(x, y - 1) && !grid.at(x, y + 1)) {\n            grid.write(x, y + 1, true);\n        }\n    });\n};\n\nexport const generateCave = (config: CaveGeneratorConfig): Cave => \n    generateCaveVerbose(config).cave;\n\nexport const generateCaveVerbose = (config: CaveGeneratorConfig): { cave: Cave, details: CaveBuildDetails } => {\n    const automatonResult = runCellularAutomaton(75, 75, config.seed, 0.48, 5, 4, 40);\n\n    const coloredGrid = GridTool.map(automatonResult, (x, y, val) => val ? -1 : 0);\n    const bigColor = colorGridRegions(coloredGrid);\n\n    const filledGrid = GridTool.map(coloredGrid, (x, y, val) => val !== bigColor);\n    fixSingleTileBridges(filledGrid);\n\n    const edgeMarkedGrid = markEdges(filledGrid);\n\n    const findContoursResult = findContours(edgeMarkedGrid, config.edgePointDist);\n\n    const outerMostContourIndex = findContoursResult.contours\n        .map((c, i) => ({ i, area: RectTool.area(findBounds(c)) }))\n        .sort((a, b) => b.area - a.area)\n        [0].i;\n\n    const smoothContours = findContoursResult.contours.map(x => smoothCurve(x, config.curveQuality, config.curveBend));\n\n    const BOUNDS = 1.0;\n\n    const mostTopLeft = (pts: Vec2[]): number =>\n        pts.map((p, i) => ({ i, len: (p.x+BOUNDS)*(p.x+BOUNDS) + (p.y+BOUNDS)*(p.y+BOUNDS) }))\n            .sort((a, b) => a.len - b.len)\n            [0].i;\n\n    const topLeftPtI = mostTopLeft(smoothContours[outerMostContourIndex]);\n    const topLeftPt = smoothContours[outerMostContourIndex][topLeftPtI];\n    const topLeftPrevPt = smoothContours[outerMostContourIndex][topLeftPtI === 0 ? smoothContours[outerMostContourIndex].length - 1 : topLeftPtI - 1];\n\n    const bumpDownAmount = Math.abs(topLeftPt.y - topLeftPrevPt.y);\n\n    smoothContours[outerMostContourIndex].splice(topLeftPtI, 0,\n        {x: -BOUNDS, y: -BOUNDS+bumpDownAmount},\n        {x: -BOUNDS, y:  BOUNDS},\n        {x:  BOUNDS, y:  BOUNDS},\n        {x:  BOUNDS, y: -BOUNDS},\n        {x: -BOUNDS, y: -BOUNDS},\n        {x: (topLeftPt.x + topLeftPrevPt.x) / 2, \n         y: (topLeftPt.y + topLeftPrevPt.y) / 2}\n    );\n\n    const triangles = smoothContours.map(triangulate);\n\n    smoothContours[outerMostContourIndex][topLeftPtI].y -= bumpDownAmount;\n    smoothContours[outerMostContourIndex][topLeftPtI+5].x = topLeftPrevPt.x;\n    smoothContours[outerMostContourIndex][topLeftPtI+5].y = topLeftPrevPt.y;\n\n    return {\n        cave: {\n            edges: smoothContours,\n            triangles\n        },\n        details: {\n            automatonResult,\n            coloredGrid,\n            filledGrid,\n            edgeMarkedGrid,\n            findContoursResult,\n            outerMostContourIndex,\n            topLeftMostVertexIndex: topLeftPtI\n        }\n    };\n};\n","import { Grid, WriteGrid, GridTool, safeOutOfBounds } from 'utils/grid';\nimport { Vec2, smallestDifferenceRadians } from 'utils/math';\n\nexport interface EdgeMarkedMapTile {\n    kind: 'air' | 'dirt' | 'edge',\n    normal: number,\n}\n\nexport const markEdges = (grid: Grid<boolean>): WriteGrid<EdgeMarkedMapTile> => {\n    const result = GridTool.map(grid, (x, y, val): EdgeMarkedMapTile => \n        ({ kind: val ? 'dirt' : 'air', normal: 0 }));\n\n    for (let x = 0; x < grid.width; x++) {\n        for (let y = 0; y < grid.height; y++) {\n            if (!grid.at(x, y)) continue;\n\n            const l = x > 0               && !grid.at(x-1, y);\n            const r = x < grid.width - 2  && !grid.at(x+1, y);\n            const u = y > 0               && !grid.at(x, y-1);\n            const d = y < grid.height - 2 && !grid.at(x, y+1);\n\n            if (!l && !r && !u && !d) continue;\n\n            const normal = r && d ? 45 :\n                d && l ?  135 :\n                l && u ? -135 :\n                u && r ?  -45 :\n                r ? 0 :\n                d ? 90 :\n                l ? 180 :\n                -90;\n\n            result.write(x, y, { kind: 'edge', normal });\n        }\n    }\n\n    return result;\n};\n\nexport enum WalkedStatus {\n    Unwalked,\n    Walked,\n    WalkedImportant,\n}\n\ninterface WalkCandidate {\n    dx: number,\n    dy: number,\n    normal: number,\n}\n\ninterface GridPoint {\n    x: number,\n    y: number,\n}\n\nexport interface FindContoursResult {\n    contours: Vec2[][],\n    walkMap: WriteGrid<WalkedStatus>,\n}\n\nexport const findContours = (grid: Grid<EdgeMarkedMapTile>, spaceInsurance: 0 | 1 | 2): FindContoursResult => {\n    const MAX_ITER = 100;\n    const walkMap = GridTool.map(new WriteGrid<WalkedStatus>(grid.width, grid.height), _ => WalkedStatus.Unwalked);\n    const contours: Vec2[][] = [];\n\n    let iter = 0;\n    let newContour: Vec2[] | null = null;\n\n    do {\n        newContour = findOneContour(walkMap, grid, spaceInsurance);\n        if (newContour !== null && newContour.length > 2) {\n            contours.push(newContour);\n        }\n    } while (newContour != null && iter++ < MAX_ITER);\n\n    return { contours, walkMap };\n}\n\nconst findFreshContour = (walkMap: Grid<WalkedStatus>, grid: Grid<EdgeMarkedMapTile>): GridPoint | null => {\n    for (let x = 0; x < grid.width; x++) {\n        for (let y = 0; y < grid.height; y++) {\n            if (grid.at(x, y).kind === 'edge' && walkMap.at(x, y) === WalkedStatus.Unwalked) {\n                return { x, y };\n            }\n        }\n    }\n\n    return null;\n};\n\nconst bestCandidate = (prev: WalkCandidate, candidates: WalkCandidate[]): WalkCandidate => {\n    let minVal = 100;\n    let minI = 0;\n\n    for (let i = 0; i < candidates.length; ++i) {\n        const c = candidates[i];\n        const d = Math.abs(smallestDifferenceRadians(\n            c.normal * Math.PI / 180,\n            prev.normal * Math.PI / 180\n        ));\n\n        if (d < minVal) {\n            minVal = d;\n            minI = i;\n        }\n    }\n\n    return candidates[minI];\n};\n\nconst findOneContour = (walkMap: WriteGrid<WalkedStatus>, grid: Grid<EdgeMarkedMapTile>, spaceInsurance: 0 | 1 | 2): Vec2[] | null => {\n    const MAX_ITER = 5000;\n\n    const freshStart = findFreshContour(walkMap, grid);\n    if (freshStart === null) {\n        return null;\n    }\n\n    grid = safeOutOfBounds(grid, {kind: 'dirt', normal: 0} as EdgeMarkedMapTile);\n\n    const points: Vec2[] = [];\n    let x = freshStart.x;\n    let y = freshStart.y;\n\n    let iter = 0;\n    let lastCan: WalkCandidate = { dx: 0, dy: 0, normal: 0 };\n    let lastStatus = WalkedStatus.Walked;\n    let candidates: WalkCandidate[] = [];\n\n    do {\n        candidates = [];\n\n        for (let dx = -1; dx <= 1; dx++) {\n            for (let dy = -1; dy <= 1; dy++) {\n                if (dx === 0 && dy === 0) continue;\n                if (grid.at(x+dx, y+dy).kind === 'edge'\n                && walkMap.at(x+dx, y+dy) === WalkedStatus.Unwalked) {\n                    candidates.push({dx, dy, normal: grid.at(x+dx, y+dy).normal});\n                }\n            }\n        }\n\n        if (candidates.length > 0) {\n            const c = bestCandidate(lastCan, candidates);\n            x += c.dx;\n            y += c.dy;\n\n            let newStatus = WalkedStatus.Walked;\n            if (c.normal !== lastCan.normal) {\n                let important;\n                if (spaceInsurance === 0) {\n                    important = true;\n                } else if (spaceInsurance === 1) {\n                    important = c.dx != 0 && c.dy != 0 || lastStatus != WalkedStatus.WalkedImportant;\n                } else {\n                    important = lastStatus != WalkedStatus.WalkedImportant;\n                }\n\n                if (important) {\n                    newStatus = WalkedStatus.WalkedImportant;\n                }\n            }\n\n            if (newStatus === WalkedStatus.WalkedImportant) {\n                points.push({\n                    x: 2*(x + 0.5)/grid.width - 1,\n                    y: 2*(y + 0.5)/grid.height - 1,\n                });\n            }\n\n            walkMap.write(x, y, newStatus);\n            lastStatus = newStatus;\n            lastCan = c;\n        }\n    }\n    while (candidates.length > 0 && iter++ < MAX_ITER);\n\n    return points;\n};","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n","const VERT_HEADER = \n    `#define VERTEX\n    `;\n\nconst FRAG_HEADER = \n    `#define FRAGMENT\n    precision highp float;\n    `;\n\nconst buildProgram = (gl: WebGLRenderingContext, body: string): WebGLProgram | string => {\n    const vertShader = gl.createShader(gl.VERTEX_SHADER) as WebGLShader;\n    gl.shaderSource(vertShader, VERT_HEADER + body + '\\n');\n    gl.compileShader(vertShader);\n\n    const vertLog = gl.getShaderInfoLog(vertShader);\n    if (vertLog === null || vertLog.length > 0) {\n        return vertLog as string;\n    }\n\n    const fragShader = gl.createShader(gl.FRAGMENT_SHADER) as WebGLShader;\n    gl.shaderSource(fragShader, FRAG_HEADER + body + '\\n');\n    gl.compileShader(fragShader);\n\n    const fragLog = gl.getShaderInfoLog(fragShader);\n    if (fragLog === null || fragLog.length > 0) {\n        return fragLog as string;\n    }\n\n    const prog = gl.createProgram() as WebGLProgram;\n    gl.attachShader(prog, vertShader);\n    gl.attachShader(prog, fragShader);\n    gl.linkProgram(prog);\n    return prog;\n};\n\nexport const loadShader = (gl: WebGLRenderingContext, url: string): Promise<WebGLProgram | string> =>\n    fetch(url)\n        .then(response => {\n            if (!response.ok) throw new Error(\"HTTP error, status = \" + response.status);\n            return response.text();\n        })\n        .then(shader => buildProgram(gl, shader));","export class FrameBufferTexture {\n    readonly framebuffer: WebGLFramebuffer;\n    readonly texture: WebGLTexture;\n\n    private readonly gl: WebGLRenderingContext;\n\n    constructor(gl: WebGLRenderingContext, width: number, height: number) {\n        this.gl = gl;\n\n        this.framebuffer = gl.createFramebuffer() as WebGLFramebuffer;\n        gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n        \n        this.texture = gl.createTexture() as WebGLTexture;\n        gl.bindTexture(gl.TEXTURE_2D, this.texture);\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGB, width, height, 0, gl.RGB, gl.UNSIGNED_BYTE, null);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR); \n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n        \n        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.texture, 0); \n    }\n\n    release() {\n        const gl = this.gl;\n\n        gl.bindTexture(gl.TEXTURE_2D, null);\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\n        gl.deleteTexture(this.texture);\n        gl.deleteFramebuffer(this.framebuffer);\n    }\n\n    releaseTexture(): WebGLTexture {\n        const gl = this.gl;\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        gl.deleteFramebuffer(this.framebuffer);\n\n        return this.texture;\n    }\n}\n","import { loadShader } from \"./shaderLoader\";\n\nexport class BufferRenderer {\n    private readonly gl: WebGLRenderingContext;\n    private readonly vertexBuffer: WebGLBuffer;\n    private readonly shader: WebGLProgram;\n\n    static create(gl: WebGLRenderingContext, shaderPath: string, ): Promise<BufferRenderer> {\n        return loadShader(gl, shaderPath)\n            .then(shader => new BufferRenderer(gl, shader));\n    }\n\n    private constructor(gl: WebGLRenderingContext, shader: WebGLProgram) {\n        this.gl = gl;\n        this.shader = shader;\n\n        this.vertexBuffer = gl.createBuffer() as WebGLBuffer;\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer);\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([ -1,1,-1,-1,1,-1,1,-1,1,1,-1,1 ]), gl.STATIC_DRAW);\n    }\n\n    draw(texture: WebGLTexture, onPreDraw?: (gl: WebGLRenderingContext, shader: WebGLProgram) => void) {\n        const gl = this.gl;\n\n        gl.useProgram(this.shader);\n\n        gl.activeTexture(gl.TEXTURE0);\n        gl.bindTexture(gl.TEXTURE_2D, texture);\n        const loc_tex = gl.getUniformLocation(this.shader, \"u_tex\");\n        gl.uniform1i(loc_tex, 0);\n\n        if (onPreDraw) onPreDraw(gl, this.shader);\n\n        gl.enableVertexAttribArray(0);\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer);\n        gl.vertexAttribPointer(0, 2, gl.FLOAT, false, 0, 0);\n\n        gl.drawArrays(gl.TRIANGLES, 0, 6);\n    }\n\n    release() {\n        const gl = this.gl;\n\n        gl.useProgram(null);\n        gl.bindBuffer(gl.ARRAY_BUFFER, null);\n\n        gl.deleteProgram(this.shader);\n        gl.deleteBuffer(this.vertexBuffer);\n    }\n}","import { initPost as initPost_vectorCaves } from 'pages/vector-caves';\nimport { initPost as initPost_webgl } from 'pages/page2-webgl';\n\nconst postInitters: {[key: string]: () => void} = {\n    'vector-caves': initPost_vectorCaves,\n    'page2-webgl': initPost_webgl\n};\n\n(window as any).initPost = (name: string): void =>\n    postInitters[name]();","import { generateCaveVerbose, CaveGeneratorConfig } from 'caveGenerator';\nimport { GridTool } from 'utils/grid';\nimport { WalkedStatus } from 'caveGenerator/findContours';\nimport { Vec2 } from 'utils/math';\n\nconst randomColorHex = (): string => {\n    const randPair = (): string => {\n        let ret = Math.floor(Math.random() * 256).toString(16);\n        if (ret.length < 2) ret = '0'+ret;\n        return ret;\n    };\n\n    return '#' + randPair() + randPair() + randPair();\n};\n\nconst colors = [0,0,0,0,0,0,0,0,0,0].map(_ => randomColorHex());\n\nconst gridColorForNumber = (n: number): string => {\n    if (n < 0) return '#000';\n    return colors[n % colors.length];\n};\n\nconst gridColorForNormal = (degs: number): string => {\n    const x = Math.cos(degs * Math.PI / 180);\n    const y = Math.sin(degs * Math.PI / 180);\n\n    const hx = Math.round(15 * (0.5*x + 0.5));\n    const hy = Math.round(15 * (0.5*y + 0.5));\n\n    const result = '#' + hx.toString(16) + hy.toString(16) + 'f';\n\n    return result;\n};\n\nconst multibind = (objs: any[], events: string[], listener: Function): void => {\n    objs.forEach(o => {\n        events.forEach(e => {\n            o[e] = listener;\n        });\n    });\n};\n\nexport const initPost = () :void => {\n    const firstCanvas = document.getElementById('first-canvas') as HTMLCanvasElement;\n    const ctx = firstCanvas.getContext('2d') as CanvasRenderingContext2D;\n\n    const seedSlider = document.getElementById('seed-slider') as HTMLInputElement;\n    const insuranceSlider = document.getElementById('insurance-slider') as HTMLInputElement;\n    const curvinessSlider = document.getElementById('curviness-slider') as HTMLInputElement;\n    const qualitySlider = document.getElementById('quality-slider') as HTMLInputElement;\n\n    const secondCanvas = document.getElementById('second-canvas') as HTMLCanvasElement;\n    const ctx2 = secondCanvas.getContext('2d') as CanvasRenderingContext2D;\n\n    const thirdCanvas = document.getElementById('third-canvas') as HTMLCanvasElement;\n    const ctx3 = thirdCanvas.getContext('2d') as CanvasRenderingContext2D;\n\n    const fourthCanvas = document.getElementById('fourth-canvas') as HTMLCanvasElement;\n    const ctx4 = fourthCanvas.getContext('2d') as CanvasRenderingContext2D;\n\n    const fifthCanvas = document.getElementById('fifth-canvas') as HTMLCanvasElement;\n    const ctx5 = fifthCanvas.getContext('2d') as CanvasRenderingContext2D;\n\n    const sixthCanvas = document.getElementById('sixth-canvas') as HTMLCanvasElement;\n    const ctx6 = sixthCanvas.getContext('2d') as CanvasRenderingContext2D;\n\n    const seventhCanvas = document.getElementById('seventh-canvas') as HTMLCanvasElement;\n    const ctx7 = seventhCanvas.getContext('2d') as CanvasRenderingContext2D;\n\n    const ninthCanvas = document.getElementById('ninth-canvas') as HTMLCanvasElement;\n    const ctx9 = ninthCanvas.getContext('2d') as CanvasRenderingContext2D;\n\n    const update = () :void => {\n        const config: CaveGeneratorConfig = {\n            seed: parseInt(seedSlider.value),\n            edgePointDist: parseInt(insuranceSlider.value) as any,\n            curveBend: 2 * parseFloat(curvinessSlider.value) / 100,\n            curveQuality: parseFloat(qualitySlider.value), \n        };\n\n        const { cave, details } = generateCaveVerbose(config);\n\n        GridTool.forEach(details.automatonResult, (x, y, val) => {\n            ctx.fillStyle = val ? '#000' : '#FFF';\n            ctx.fillRect(4*x, 4*y, 4, 4);\n        });\n\n        GridTool.forEach(details.coloredGrid, (x, y, val) => {\n            ctx2.fillStyle = gridColorForNumber(val);\n            ctx2.fillRect(4*x, 4*y, 4, 4);\n        });\n\n        GridTool.forEach(details.filledGrid, (x, y, val) => {\n            ctx3.fillStyle = val ? '#000' : '#FFF';\n            ctx3.fillRect(4*x, 4*y, 4, 4);\n        });\n\n        GridTool.forEach(details.edgeMarkedGrid, (x, y, val) => {\n            ctx4.fillStyle = val.kind === 'edge' ? gridColorForNormal(val.normal) : val.kind === 'air' ? '#655' : '#77f';\n            ctx4.fillRect(4*x, 4*y, 4, 4);\n        });\n\n        const contours = details.findContoursResult;\n\n        GridTool.forEach(contours.walkMap, (x, y, val) => {\n            ctx5.fillStyle = val === WalkedStatus.WalkedImportant ? '#fff' : val === WalkedStatus.Walked ? '#333' : '#000';\n            ctx5.fillRect(4*x, 4*y, 4, 4);\n\n            ctx6.fillStyle = val === WalkedStatus.WalkedImportant ? '#333' : '#000';\n            ctx6.fillRect(9*x, 9*y, 9, 9);\n        });\n\n        const BIG_CANVAS_SIZE = 675;\n\n        const curveSpaceToCanvasSpace = (pt: Vec2): Vec2 => ({ \n            x: (BIG_CANVAS_SIZE / 2) * (1 + pt.x),\n            y: (BIG_CANVAS_SIZE / 2) * (1 + pt.y)\n        });\n\n        // =--------------------------------------------\n\n        contours.contours.forEach((c, i) => {\n            ctx6.strokeStyle = i === details.outerMostContourIndex ? '#f00' : '#933';\n\n            ctx6.beginPath();\n            const first = curveSpaceToCanvasSpace(c[0]);\n            ctx6.moveTo(first.x, first.y);\n\n            for (let i = 1; i < c.length; ++i) {\n                const next = curveSpaceToCanvasSpace(c[i]);\n                ctx6.lineTo(next.x, next.y);\n            }\n\n            ctx6.closePath();\n            ctx6.stroke();\n        });\n\n        // =--------------------------------------------\n\n        ctx7.strokeStyle = '#0f0';\n        ctx7.fillStyle = '#000';\n        ctx7.fillRect(0, 0, BIG_CANVAS_SIZE, BIG_CANVAS_SIZE);\n\n        cave.edges.forEach((c, i) => {\n            ctx7.strokeStyle = i === details.outerMostContourIndex ? '#0f0' : '#393';\n\n            ctx7.beginPath();\n            const first = curveSpaceToCanvasSpace(c[0]);\n            ctx7.moveTo(first.x, first.y);\n\n            for (let i = 1; i < c.length; ++i) {\n                const next = curveSpaceToCanvasSpace(c[i]);\n                ctx7.lineTo(next.x, next.y);\n            }\n\n            ctx7.closePath();\n            ctx7.stroke();\n        });\n\n        // =--------------------------------------------\n\n        ctx9.fillStyle = '#000';\n        ctx9.fillRect(0, 0, BIG_CANVAS_SIZE, BIG_CANVAS_SIZE);\n\n        cave.triangles.forEach((ts,j) => {\n            for (let i = 0; i < ts.length - 2; i += 3) {\n                ctx9.fillStyle = randomColorHex();\n                ctx9.beginPath();\n\n                const first = curveSpaceToCanvasSpace(cave.edges[j][ts[i]]);\n                ctx9.moveTo(first.x, first.y);\n\n                [1, 2, 0].forEach(o => {\n                    const a = curveSpaceToCanvasSpace(cave.edges[j][ts[i+o]]);\n                    ctx9.lineTo(a.x, a.y);\n                })\n\n                ctx9.fill();\n            }\n        });\n    };\n\n    multibind(\n        [seedSlider, insuranceSlider, curvinessSlider, qualitySlider],\n        ['oninput', 'onchange'],\n        update\n    );\n    update();\n};\n","import { nextRandom01 } from 'utils/prng';\nimport { WriteGrid, Grid } from 'utils/grid';\n\nconst getNeighborhood = (map: Grid<boolean>, x: number, y: number): number => {\n    let result: number = 0;\n\n    for (let nx = x-1; nx <= x+1; ++nx) {\n        for (let ny = y-1; ny <= y+1; ++ny) {\n            if (nx == x && ny == y) continue;\n            if (nx < 1 || ny < 1 || nx >= map.width-1 || ny >= map.height-1) result++;\n            else result += map.at(nx,ny) ? 1 : 0;\n        }\n    }\n\n    return result;\n}\n\nexport const runCellularAutomaton = (width: number, height: number, seed: number, population: number, birth: number, survival: number, iterations: number): Grid<boolean> => {\n    const result = new WriteGrid<boolean>(width, height);\n    const buffer = new WriteGrid<boolean>(width, height);\n    let rand = nextRandom01(seed / 101);\n\n    for (let x = 0; x < width; ++x) {\n        for (let y = 0; y < height; ++y) {\n            const fill = x === 0 || y === 0 || x === width-1 || y === height-1 || rand < population;\n            result.write(x, y, fill);\n            buffer.write(x, y, fill);\n\n            rand = nextRandom01(rand);\n        }\n    }\n\n    for (let i = 0; i < iterations; ++i) {\n        for (let x = 1; x < width-1; ++x) {\n            for (let y = 1; y < height-1; ++y) {\n                const neighbors = getNeighborhood(result, x, y);\n                buffer.write(x, y, neighbors >= (result.at(x, y) ? survival : birth));\n            }\n        }\n        result.copyFrom(buffer);\n    }\n\n    return result;\n}","// https://en.wikipedia.org/wiki/Linear_congruential_generator\n\nconst M = 4294967296;\nconst A = 1664525;\nconst C = 1013904223;\n\nexport const nextRandom01 = (prevRandom01: number): number => \n    ((A * Math.floor(prevRandom01 * M) + C) % M) / M;","import { Vec2, V2 } from 'utils/math';\n\ninterface Pt {\n    pt: Vec2,\n    controlA: Vec2,\n    controlB: Vec2,\n}\n\nexport const smoothCurve = (input: Vec2[], resolution: number, curviness: number): Vec2[] => {\n    const pts: Pt[] = [];\n\n    if (resolution < 1) resolution = 1;\n\n    for (let i = 0; i < input.length; ++i) {\n        const prev = input[i == 0 ? input.length-1 : i-1];\n        const curr = input[i];\n        const next = input[(i + 1) % input.length];\n\n        const lenA = V2.length(V2.minus(prev, curr));\n        const lenB = V2.length(V2.minus(curr, next));\n\n        const midA = V2.scaled(V2.plus(prev, curr), 0.5);\n        const midB = V2.scaled(V2.plus(curr, next), 0.5);\n        const midDiff = V2.scaled(V2.minus(midA, midB), curviness);\n\n        const diffA = V2.scaled(midDiff,  lenA / (lenA + lenB));\n        const diffB = V2.scaled(midDiff, -lenB / (lenA + lenB));\n\n        pts.push({\n            pt: curr,\n            controlA: V2.plus(curr, diffA),\n            controlB: V2.plus(curr, diffB),\n        });\n    }\n\n    const inc = 1 / resolution;\n\n    const result: Vec2[] = [];\n    for (let i = 0; i < pts.length; ++i) {\n        const curr = pts[i];\n        const next = pts[(i + 1) % pts.length];\n\n        for (let t = 0; t < 1 - (inc / 2); t += inc) {\n            let newVal: Vec2 = { x: 0, y: 0 };\n\n            V2.add(newVal, V2.scaled(curr.pt       , (1-t)*(1-t)*(1-t)));\n            V2.add(newVal, V2.scaled(curr.controlB , 3*(1-t)*(1-t)*t));\n            V2.add(newVal, V2.scaled(next.controlA , 3*(1-t)*t*t));\n            V2.add(newVal, V2.scaled(next.pt       , t*t*t));\n\n            result.push(newVal);\n        }\n    }\n\n    return result;\n};","import { Vec2 } from 'utils/math';\n\nexport const triangulate = (points: Vec2[]): number[] => {\n    const indices: number[] = [];\n    const n = points.length;\n    if (n < 3) return indices;\n\n    const V: number[] = new Array(n);\n    if (area(points) > 0) {\n        for (let v = 0; v < n; v++) V[v] = v;\n    } else {\n        for (let v = 0; v < n; v++) V[v] = (n - 1) - v;\n    }\n\n    let nv = n;\n    let count = 2 * nv;\n    for (let v = nv - 1; nv > 2; ) {\n        if ((count--) <= 0) return indices;\n\n        let u = v;\n        if (nv <= u) u = 0;\n        v = u + 1;\n        if (nv <= v) v = 0;\n        let w = v + 1;\n        if (nv <= w) w = 0;\n\n        if (snip(points, u, v, w, nv, V)) {\n            indices.push(V[u]);\n            indices.push(V[v]);\n            indices.push(V[w]);\n            for (let s = v, t = v + 1; t < nv; s++, t++) V[s] = V[t];\n            nv--;\n            count = 2 * nv;\n        }\n    }\n\n    return indices;\n};\n\nconst area = (points: Vec2[]): number => {\n    let A = 0;\n    for (let p = points.length - 1, q = 0; q < points.length; p = q++) {\n        A += points[p].x * points[q].y - points[q].x * points[p].y;\n    }\n    return A / 2;\n};\n\nconst inside_triangle = (A: Vec2, B: Vec2, C: Vec2, P: Vec2): boolean => {\n    const ax = C.x - B.x, ay = C.y - B.y;\n    const bx = A.x - C.x, by = A.y - C.y;\n    const cx = B.x - A.x, cy = B.y - A.y;\n    const apx = P.x - A.x, apy = P.y - A.y;\n    const bpx = P.x - B.x, bpy = P.y - B.y;\n    const cpx = P.x - C.x, cpy = P.y - C.y;\n\n    const aCROSSbp = ax * bpy - ay * bpx;\n    const cCROSSap = cx * apy - cy * apx;\n    const bCROSScp = bx * cpy - by * cpx;\n\n    return aCROSSbp >= 0 && bCROSScp >= 0 && cCROSSap >= 0;\n};\n\nconst snip = (points: Vec2[], u: number, v: number, w: number, n: number, V: number[]): boolean => {\n    const A = points[V[u]];\n    const B = points[V[v]];\n    const C = points[V[w]];\n\n    const pdiff = (B.x - A.x) * (C.y - A.y) - (B.y - A.y) * (C.x - A.x);\n    if (pdiff < 1e-7) return false;\n\n    for (let p = 0; p < n; p++) {\n        if ((p == u) || (p == v) || (p == w)) continue;\n        const P = points[V[p]];\n        if (inside_triangle(A, B, C, P)) return false;\n    }\n\n    return true;\n};","import { generateCave, Cave } from 'caveGenerator';\nimport { CaveRenderer } from \"webgl/caveRenderer\";\nimport { FrameBufferTexture } from \"webgl/frameBufferTexture\";\nimport { BufferRenderer } from 'webgl/bufferRenderer';\nimport { GaussianBlur } from 'webgl/gaussianBlur';\n\ninterface SurfaceInfoBuffers {\n    readonly depth: WebGLTexture,\n    readonly normal: WebGLTexture,\n}\n\nconst buildSurfaceInfoBuffers = (gl: WebGLRenderingContext, size: number, cave: Cave): Promise<SurfaceInfoBuffers> =>\n    Promise.all([\n        CaveRenderer.create(gl, 'shaders/flatWhite.glsl', cave),\n        BufferRenderer.create(gl, 'shaders/normals.glsl'),\n        GaussianBlur.create(gl, size, size),\n        GaussianBlur.create(gl, size, size)\n    ])\n    .then(([caveRenderer, normalsBlit, gaussBlur0, gaussBlur1]) => {\n        const frameBufferTex = new FrameBufferTexture(gl, size, size);\n\n        gl.bindFramebuffer(gl.FRAMEBUFFER, frameBufferTex.framebuffer);\n        gl.viewport(0, 0, size, size);\n        gl.clearColor(0, 0, 0, 1);\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n        caveRenderer.draw();\n\n        gaussBlur0.run(frameBufferTex.texture, 30);\n\n        gl.bindFramebuffer(gl.FRAMEBUFFER, frameBufferTex.framebuffer);\n        gl.viewport(0, 0, size, size);\n\n        normalsBlit.draw(gaussBlur0.resultTexture, (gl, shader) => {\n            gl.uniform2f(gl.getUniformLocation(shader, \"u_resolution\"), size, size);\n        });\n\n        gaussBlur1.run(frameBufferTex.texture, 2);\n\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        gl.viewport(0, 0, gl.canvas.width, gl.canvas.height);\n\n        caveRenderer.release();\n        normalsBlit.release();\n        const depth = gaussBlur0.releaseTexture();\n        const normal = gaussBlur1.releaseTexture();\n\n        return { depth, normal };\n    });\n\n\nconst drawBasicCaveDemo = (cave: Cave, gl: WebGLRenderingContext): void => {\n    Promise.all([\n        CaveRenderer.create(gl, 'shaders/flatWhite.glsl', cave),\n    ])\n    .then(([caveRenderer]) => {\n        gl.viewport(0, 0, gl.canvas.width, gl.canvas.height);\n        gl.clearColor(0, 0, 0, 1);\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n\n        caveRenderer.draw();\n\n        caveRenderer.release();\n    });\n};\n\nconst drawInfoBufferDemo = (cave: Cave, kind: 'depth'|'normal', gl: WebGLRenderingContext): void => {\n    Promise.all([\n        BufferRenderer.create(gl, 'shaders/bufferCopy.glsl'),\n        buildSurfaceInfoBuffers(gl, 1024, cave)\n    ])\n    .then(([copyBlit, infoBuffers]) => {\n        copyBlit.draw(kind === 'depth' ? infoBuffers.depth : infoBuffers.normal);\n\n        copyBlit.release();\n        gl.deleteTexture(infoBuffers.depth);\n        gl.deleteTexture(infoBuffers.normal);\n    });\n};\n\nexport const initPost = () :void => {\n    const seed = 0.1248;\n    const cave = generateCave({ seed, curveBend: 0.75, curveQuality: 10, edgePointDist: 2 });\n\n    const gl = [0,1,2].map(x => (document.getElementById('canvas'+x) as HTMLCanvasElement).getContext('webgl') as WebGLRenderingContext);\n\n    drawBasicCaveDemo(cave, gl[0]);\n    drawInfoBufferDemo(cave, 'depth', gl[1]);\n    drawInfoBufferDemo(cave, 'normal', gl[2]);\n};","import { Cave } from 'caveGenerator';\nimport flatten = require('lodash/flatten');\nimport { loadShader } from './shaderLoader';\n\nconst getFlatVerts = (cave: Cave): number[] =>\n    flatten(flatten(cave.edges).map(v => [v.x, v.y]));\n\nconst getFlatIndices = (cave: Cave): number[] => {\n    let baseCount = 0;\n    let result: number[] = [];\n\n    cave.triangles.forEach((tris, index) => {\n        result = result.concat(tris.map(x => x + baseCount));\n        baseCount += cave.edges[index].length;\n    });\n\n    return result;\n};\n\nexport class CaveRenderer {\n    private readonly gl: WebGLRenderingContext;\n    private readonly shader: WebGLProgram;\n    private readonly vertexBuffer: WebGLBuffer;\n    private readonly indexBuffer: WebGLBuffer;\n\n    private readonly indexBufferLen: number;\n\n    static create(gl: WebGLRenderingContext, shaderPath: string, cave: Cave): Promise<CaveRenderer> {\n        return loadShader(gl, shaderPath)\n            .then(shader => new CaveRenderer(gl, cave, shader));\n    }\n\n    private constructor(gl: WebGLRenderingContext, cave: Cave, shader: WebGLProgram) {\n        this.gl = gl;\n        this.shader = shader;\n\n        this.vertexBuffer = gl.createBuffer() as WebGLBuffer;\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer);\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(getFlatVerts(cave)), gl.STATIC_DRAW);\n\n        const indexBufferData = getFlatIndices(cave);\n        this.indexBufferLen = indexBufferData.length;\n\n        this.indexBuffer = gl.createBuffer() as WebGLBuffer;\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer);\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(indexBufferData), gl.STATIC_DRAW);\n    }\n\n    draw() {\n        const gl = this.gl;\n\n        gl.useProgram(this.shader);\n\n        gl.enableVertexAttribArray(0);\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer);\n        gl.vertexAttribPointer(0, 2, gl.FLOAT, false, 0, 0);\n\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer);\n        gl.drawElements(gl.TRIANGLES, this.indexBufferLen, gl.UNSIGNED_SHORT, 0);\n    }\n\n    release() {\n        const gl = this.gl;\n\n        gl.useProgram(null);\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n        gl.bindBuffer(gl.ARRAY_BUFFER, null);\n\n        gl.deleteProgram(this.shader);\n        gl.deleteBuffer(this.vertexBuffer);\n        gl.deleteBuffer(this.indexBuffer);\n    }\n}\n","var baseFlatten = require('./_baseFlatten');\n\n/**\n * Flattens `array` a single level deep.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to flatten.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * _.flatten([1, [2, [3, [4]], 5]]);\n * // => [1, 2, [3, [4]], 5]\n */\nfunction flatten(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? baseFlatten(array, 1) : [];\n}\n\nmodule.exports = flatten;\n","var arrayPush = require('./_arrayPush'),\n    isFlattenable = require('./_isFlattenable');\n\n/**\n * The base implementation of `_.flatten` with support for restricting flattening.\n *\n * @private\n * @param {Array} array The array to flatten.\n * @param {number} depth The maximum recursion depth.\n * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n * @param {Array} [result=[]] The initial result value.\n * @returns {Array} Returns the new flattened array.\n */\nfunction baseFlatten(array, depth, predicate, isStrict, result) {\n  var index = -1,\n      length = array.length;\n\n  predicate || (predicate = isFlattenable);\n  result || (result = []);\n\n  while (++index < length) {\n    var value = array[index];\n    if (depth > 0 && predicate(value)) {\n      if (depth > 1) {\n        // Recursively flatten arrays (susceptible to call stack limits).\n        baseFlatten(value, depth - 1, predicate, isStrict, result);\n      } else {\n        arrayPush(result, value);\n      }\n    } else if (!isStrict) {\n      result[result.length] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseFlatten;\n","/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\nmodule.exports = arrayPush;\n","var Symbol = require('./_Symbol'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray');\n\n/** Built-in value references. */\nvar spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;\n\n/**\n * Checks if `value` is a flattenable `arguments` object or array.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n */\nfunction isFlattenable(value) {\n  return isArray(value) || isArguments(value) ||\n    !!(spreadableSymbol && value && value[spreadableSymbol]);\n}\n\nmodule.exports = isFlattenable;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","var baseIsArguments = require('./_baseIsArguments'),\n    isObjectLike = require('./isObjectLike');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\nmodule.exports = isArguments;\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nmodule.exports = baseIsArguments;\n","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n","var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nmodule.exports = isArray;\n","import { FrameBufferTexture } from \"./frameBufferTexture\";\nimport { BufferRenderer } from \"./bufferRenderer\";\n\nexport class GaussianBlur {\n    private readonly gl: WebGLRenderingContext;\n    private readonly width: number;\n    private readonly height: number;\n\n    private readonly bufferRenderer: BufferRenderer;\n    private readonly frameTex0: FrameBufferTexture;\n    private readonly frameTex1: FrameBufferTexture;\n\n    static create(gl: WebGLRenderingContext, width: number, height: number): Promise<GaussianBlur> {\n        return BufferRenderer.create(gl, 'shaders/gaussianBlur.glsl')\n            .then(bufferRenderer => new GaussianBlur(gl, width, height, bufferRenderer));\n    }\n\n    private constructor(gl: WebGLRenderingContext, width: number, height: number, bufferRenderer: BufferRenderer) {\n        this.gl = gl;\n        this.width = width;\n        this.height = height;\n        this.bufferRenderer = bufferRenderer;\n        this.frameTex0 = new FrameBufferTexture(gl, width, height);\n        this.frameTex1 = new FrameBufferTexture(gl, width, height);\n    }\n\n    run(texture: WebGLTexture, iterations: number) {\n        const gl = this.gl;\n\n        if (iterations < 1) iterations = 1;\n\n        for (let i = 0; i < iterations; ++i) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, this.frameTex0.framebuffer);\n            if (i === 0) gl.viewport(0, 0, this.width, this.height);\n\n            this.bufferRenderer.draw(i === 0 ? texture : this.frameTex1.texture, (gl, shader) => {\n                gl.uniform2f(gl.getUniformLocation(shader, \"u_resolution\"), this.width, this.height);\n                gl.uniform2f(gl.getUniformLocation(shader, \"u_direction\"), 1, 0);\n            });\n\n            gl.bindFramebuffer(gl.FRAMEBUFFER, this.frameTex1.framebuffer);\n\n            this.bufferRenderer.draw(this.frameTex0.texture, (gl, shader) => {\n                gl.uniform2f(gl.getUniformLocation(shader, \"u_resolution\"), this.width, this.height);\n                gl.uniform2f(gl.getUniformLocation(shader, \"u_direction\"), 0, 1);\n            });\n        }\n    }\n\n    get resultTexture(): WebGLTexture {\n        return this.frameTex1.texture;\n    }\n\n    release() {\n        this.bufferRenderer.release();\n        this.frameTex0.release();\n        this.frameTex1.release();\n    }\n\n    releaseTexture(): WebGLTexture {\n        this.bufferRenderer.release();\n        this.frameTex0.release();\n        return this.frameTex1.releaseTexture();\n    }\n}"],"sourceRoot":""}