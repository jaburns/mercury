{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/main.ts","webpack:///./src/vector-caves.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","postInitters","vector-caves","initPost","window","Rand","seed","this","M","Math","random","next","A","C","WriteGrid","width","height","vals","Array","write","x","y","val","at","copyFrom","grid","getNeighborhood","map","result","nx","ny","events","listener","ctx","document","getElementById","getContext","seedSlider","popSlider","genSlider","update","population","birth","survival","iterations","buffer","rand","fill","neighbors","generate","parseInt","parseFloat","fillStyle","fillRect","fn","iterateGrid","forEach","e"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import { initPost as initPost_vectorCaves } from './vector-caves';\r\n\r\nconst postInitters: {[key: string]: () => void} = {\r\n    'vector-caves': initPost_vectorCaves\r\n};\r\n\r\n(window as any).initPost = (name: string): void =>\r\n    postInitters[name]();","class Rand {\r\n    private static readonly M = 4294967296;\r\n    private static readonly A = 1664525;\r\n    private static readonly C = 1013904223;\r\n\r\n    private seed: number;\r\n\r\n    constructor(seed?: number) {\r\n        this.seed = typeof seed === 'undefined'\r\n            ? Rand.M * Math.random()\r\n            : seed;\r\n    }\r\n\r\n    next(): void {\r\n        this.seed = (Rand.A * this.seed + Rand.C) % Rand.M;\r\n    }\r\n\r\n    value(): number {\r\n        return this.seed / Rand.M;\r\n    }\r\n}\r\n\r\ninterface Grid<T> {\r\n    readonly width: number;\r\n    readonly height: number;\r\n    at(x: number, y: number): T;\r\n}\r\n\r\ntype GridCallback<T> = (x: number, y: number, val: T) => void;\r\n\r\nconst iterateGrid = <T>(grid: Grid<T>, fn: GridCallback<T>): void => {\r\n    for (let x = 0; x < grid.width; ++x) {\r\n        for (let y = 0; y < grid.height; ++y) {\r\n            fn(x, y, grid.at(x, y));\r\n        }\r\n    }\r\n};\r\n\r\nclass WriteGrid<T> implements Grid<T> {\r\n    public readonly width: number;\r\n    public readonly height: number;\r\n\r\n    private vals: T[];\r\n\r\n    constructor(width: number, height: number) {\r\n        this.width = width;\r\n        this.height = height;\r\n        this.vals = new Array(width * height);\r\n    }\r\n\r\n    write(x: number, y: number, val: T): void {\r\n        this.vals[x + y*this.width] = val;\r\n    }\r\n\r\n    at(x: number, y: number): T {\r\n        return this.vals[x + y*this.width];\r\n    }\r\n\r\n    copyFrom(grid: Grid<T>): void {\r\n        for (let x = 0; x < this.width && x < grid.width; ++x) {\r\n            for (let y = 0; y < this.height && y < grid.height; ++y) {\r\n                this.write(x, y, grid.at(x, y));\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nconst getNeighborhood = (map: Grid<boolean>, x: number, y: number): number => {\r\n    let result: number = 0;\r\n\r\n    for (let nx = x-1; nx <= x+1; ++nx) {\r\n        for (let ny = y-1; ny <= y+1; ++ny) {\r\n            if (nx == x && ny == y) continue;\r\n            if (nx < 1 || ny < 1 || nx >= map.width-1 || ny >= map.height-1) result++;\r\n            else result += map.at(nx,ny) ? 1 : 0;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nconst generate = (width: number, height: number, seed: number, population: number, birth: number, survival: number, iterations: number): Grid<boolean> => {\r\n    const result = new WriteGrid<boolean>(width, height);\r\n    const buffer = new WriteGrid<boolean>(width, height);\r\n    const rand = new Rand(seed);\r\n\r\n    for (let x = 0; x < width; ++x) {\r\n        for (let y = 0; y < height; ++y) {\r\n            const fill = x === 0 || y === 0 || x === width-1 || y === height-1 || rand.value() < population;\r\n            result.write(x, y, fill);\r\n            buffer.write(x, y, fill);\r\n            rand.next();\r\n        }\r\n    }\r\n\r\n    for (let i = 0; i < iterations; ++i) {\r\n        for (let x = 1; x < width-1; ++x) {\r\n            for (let y = 1; y < height-1; ++y) {\r\n                const neighbors = getNeighborhood(result, x, y);\r\n                buffer.write(x, y, neighbors >= (result.at(x, y) ? survival : birth));\r\n            }\r\n        }\r\n        result.copyFrom(buffer);\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nconst multibind = (objs: any[], events: string[], listener: Function): void => {\r\n    objs.forEach(o => {\r\n        events.forEach(e => {\r\n            o[e] = listener;\r\n        });\r\n    });\r\n};\r\n\r\nexport const initPost = () :void => {\r\n    const firstCanvas = document.getElementById('first-canvas') as HTMLCanvasElement;\r\n    const ctx = firstCanvas.getContext('2d') as CanvasRenderingContext2D;\r\n\r\n    const seedSlider = document.getElementById('seed-slider') as HTMLInputElement;\r\n    const popSlider = document.getElementById('pop-slider') as HTMLInputElement;\r\n    const genSlider = document.getElementById('gen-slider') as HTMLInputElement;\r\n\r\n    const update = () :void => {\r\n        const grid = generate(\r\n            150, 150,\r\n            parseInt(seedSlider.value),\r\n            parseFloat(popSlider.value),\r\n            5, 4,\r\n            parseInt(genSlider.value)\r\n        );\r\n\r\n        ctx.fillStyle = '#FFF';\r\n        ctx.fillRect(0, 0, 300, 300);\r\n\r\n        ctx.fillStyle = '#000';\r\n\r\n        iterateGrid(grid, (x, y, val) => {\r\n            if (val) ctx.fillRect(2*x, 2*y, 2, 2);\r\n        });\r\n    };\r\n\r\n    multibind(\r\n        [popSlider, genSlider, seedSlider],\r\n        ['oninput', 'onchange'],\r\n        update\r\n    );\r\n    update();\r\n};"],"sourceRoot":""}