{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/gl-matrix/esm/common.js","webpack:///./node_modules/gl-matrix/esm/mat2.js","webpack:///./node_modules/gl-matrix/esm/mat2d.js","webpack:///./node_modules/gl-matrix/esm/mat3.js","webpack:///./node_modules/gl-matrix/esm/mat4.js","webpack:///./node_modules/gl-matrix/esm/vec3.js","webpack:///./node_modules/gl-matrix/esm/vec4.js","webpack:///./node_modules/gl-matrix/esm/quat.js","webpack:///./node_modules/gl-matrix/esm/quat2.js","webpack:///./node_modules/gl-matrix/esm/vec2.js","webpack:///./node_modules/gl-matrix/esm/index.js","webpack:///./src/utils/grid.ts","webpack:///./src/shaders/index.ts","webpack:///./src/graphics/camera.ts","webpack:///./src/utils/lang.ts","webpack:///./src/networking/index.ts","webpack:///./src/utils/math.ts","webpack:///./node_modules/lodash/_Symbol.js","webpack:///./src/graphics/bufferRenderer.ts","webpack:///./src/graphics/transform.ts","webpack:///./src/game/state.ts","webpack:///./src/caveGenerator/index.ts","webpack:///./src/utils/prng.ts","webpack:///./src/caveGenerator/findContours.ts","webpack:///./src/game/render/caveRenderer.ts","webpack:///./node_modules/lodash/isObjectLike.js","webpack:///./src/graphics/frameBufferTexture.ts","webpack:///./src/graphics/textureLoader.ts","webpack:///./src/index.ts","webpack:///./src/pages/vector-caves.ts","webpack:///./src/caveGenerator/automaton.ts","webpack:///./src/caveGenerator/smoothCurve.ts","webpack:///./src/caveGenerator/triangulate.ts","webpack:///./node_modules/lodash/flatten.js","webpack:///./node_modules/lodash/_baseFlatten.js","webpack:///./node_modules/lodash/_arrayPush.js","webpack:///./node_modules/lodash/_isFlattenable.js","webpack:///./node_modules/lodash/_root.js","webpack:///./node_modules/lodash/_freeGlobal.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/lodash/isArguments.js","webpack:///./node_modules/lodash/_baseIsArguments.js","webpack:///./node_modules/lodash/_baseGetTag.js","webpack:///./node_modules/lodash/_getRawTag.js","webpack:///./node_modules/lodash/_objectToString.js","webpack:///./node_modules/lodash/isArray.js","webpack:///./src/shaders/bufferCopy.glsl","webpack:///./src/shaders/cave.glsl","webpack:///./src/shaders/caveDemo.glsl","webpack:///./src/shaders/flatWhite.glsl","webpack:///./src/shaders/gaussianBlur.glsl","webpack:///./src/shaders/normals.glsl","webpack:///./src/shaders/ship.glsl","webpack:///./src/graphics/gaussianBlur.ts","webpack:///./src/pages/game.ts","webpack:///./src/game/server.ts","webpack:///./src/game/client.ts","webpack:///./src/game/render/gameRenderer.ts","webpack:///./src/game/render/shipRenderer.ts","webpack:///./src/utils/inputGrabber.ts","webpack:///./src/utils/eventBinder.ts","webpack:///./src/utils/uid.ts","webpack:///./node_modules/lodash/_getNative.js","webpack:///./node_modules/lodash/isObject.js","webpack:///./node_modules/lodash/_ListCache.js","webpack:///./node_modules/lodash/_assocIndexOf.js","webpack:///./node_modules/lodash/_nativeCreate.js","webpack:///./node_modules/lodash/_getMapData.js","webpack:///./node_modules/lodash/_copyObject.js","webpack:///./node_modules/lodash/_Map.js","webpack:///./node_modules/lodash/keys.js","webpack:///(webpack)/buildin/module.js","webpack:///./node_modules/lodash/_baseUnary.js","webpack:///./node_modules/lodash/_nodeUtil.js","webpack:///./node_modules/lodash/_isPrototype.js","webpack:///./node_modules/lodash/_getSymbols.js","webpack:///./node_modules/lodash/_getTag.js","webpack:///./node_modules/lodash/_cloneArrayBuffer.js","webpack:///./node_modules/lodash/eq.js","webpack:///./node_modules/lodash/isFunction.js","webpack:///./node_modules/lodash/_toSource.js","webpack:///./node_modules/lodash/_assignValue.js","webpack:///./node_modules/lodash/_baseAssignValue.js","webpack:///./node_modules/lodash/_arrayLikeKeys.js","webpack:///./node_modules/lodash/isBuffer.js","webpack:///./node_modules/lodash/isLength.js","webpack:///./node_modules/lodash/_overArg.js","webpack:///./node_modules/lodash/isArrayLike.js","webpack:///./node_modules/lodash/keysIn.js","webpack:///./node_modules/lodash/stubArray.js","webpack:///./node_modules/lodash/_getSymbolsIn.js","webpack:///./node_modules/lodash/_getPrototype.js","webpack:///./node_modules/lodash/_baseGetAllKeys.js","webpack:///./node_modules/lodash/cloneDeep.js","webpack:///./node_modules/lodash/_baseClone.js","webpack:///./node_modules/lodash/_Stack.js","webpack:///./node_modules/lodash/_listCacheClear.js","webpack:///./node_modules/lodash/_listCacheDelete.js","webpack:///./node_modules/lodash/_listCacheGet.js","webpack:///./node_modules/lodash/_listCacheHas.js","webpack:///./node_modules/lodash/_listCacheSet.js","webpack:///./node_modules/lodash/_stackClear.js","webpack:///./node_modules/lodash/_stackDelete.js","webpack:///./node_modules/lodash/_stackGet.js","webpack:///./node_modules/lodash/_stackHas.js","webpack:///./node_modules/lodash/_stackSet.js","webpack:///./node_modules/lodash/_baseIsNative.js","webpack:///./node_modules/lodash/_isMasked.js","webpack:///./node_modules/lodash/_coreJsData.js","webpack:///./node_modules/lodash/_getValue.js","webpack:///./node_modules/lodash/_MapCache.js","webpack:///./node_modules/lodash/_mapCacheClear.js","webpack:///./node_modules/lodash/_Hash.js","webpack:///./node_modules/lodash/_hashClear.js","webpack:///./node_modules/lodash/_hashDelete.js","webpack:///./node_modules/lodash/_hashGet.js","webpack:///./node_modules/lodash/_hashHas.js","webpack:///./node_modules/lodash/_hashSet.js","webpack:///./node_modules/lodash/_mapCacheDelete.js","webpack:///./node_modules/lodash/_isKeyable.js","webpack:///./node_modules/lodash/_mapCacheGet.js","webpack:///./node_modules/lodash/_mapCacheHas.js","webpack:///./node_modules/lodash/_mapCacheSet.js","webpack:///./node_modules/lodash/_arrayEach.js","webpack:///./node_modules/lodash/_defineProperty.js","webpack:///./node_modules/lodash/_baseAssign.js","webpack:///./node_modules/lodash/_baseTimes.js","webpack:///./node_modules/lodash/stubFalse.js","webpack:///./node_modules/lodash/_isIndex.js","webpack:///./node_modules/lodash/isTypedArray.js","webpack:///./node_modules/lodash/_baseIsTypedArray.js","webpack:///./node_modules/lodash/_baseKeys.js","webpack:///./node_modules/lodash/_nativeKeys.js","webpack:///./node_modules/lodash/_baseAssignIn.js","webpack:///./node_modules/lodash/_baseKeysIn.js","webpack:///./node_modules/lodash/_nativeKeysIn.js","webpack:///./node_modules/lodash/_cloneBuffer.js","webpack:///./node_modules/lodash/_copyArray.js","webpack:///./node_modules/lodash/_copySymbols.js","webpack:///./node_modules/lodash/_arrayFilter.js","webpack:///./node_modules/lodash/_copySymbolsIn.js","webpack:///./node_modules/lodash/_getAllKeys.js","webpack:///./node_modules/lodash/_getAllKeysIn.js","webpack:///./node_modules/lodash/_DataView.js","webpack:///./node_modules/lodash/_Promise.js","webpack:///./node_modules/lodash/_Set.js","webpack:///./node_modules/lodash/_WeakMap.js","webpack:///./node_modules/lodash/_initCloneArray.js","webpack:///./node_modules/lodash/_initCloneByTag.js","webpack:///./node_modules/lodash/_Uint8Array.js","webpack:///./node_modules/lodash/_cloneDataView.js","webpack:///./node_modules/lodash/_cloneRegExp.js","webpack:///./node_modules/lodash/_cloneSymbol.js","webpack:///./node_modules/lodash/_cloneTypedArray.js","webpack:///./node_modules/lodash/_initCloneObject.js","webpack:///./node_modules/lodash/_baseCreate.js","webpack:///./node_modules/lodash/isMap.js","webpack:///./node_modules/lodash/_baseIsMap.js","webpack:///./node_modules/lodash/isSet.js","webpack:///./node_modules/lodash/_baseIsSet.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","EPSILON","ARRAY_TYPE","Float32Array","Array","RANDOM","Math","random","setMatrixArrayType","type","degree","PI","toRadian","a","equals","b","abs","max","out","clone","copy","identity","fromValues","m00","m01","m10","m11","set","transpose","a1","invert","a0","a2","a3","det","adjoint","determinant","multiply","b0","b1","b2","b3","rotate","rad","sin","cos","mat2_scale","v","v0","v1","fromRotation","fromScaling","str","frob","sqrt","pow","LDU","L","D","U","add","subtract","exactEquals","mat2_equals","multiplyScalar","multiplyScalarAndAdd","scale","mul","sub","mat2d_create","mat2d_clone","mat2d_copy","mat2d_identity","mat2d_fromValues","tx","ty","mat2d_set","mat2d_invert","aa","ab","ac","ad","atx","aty","mat2d_determinant","mat2d_multiply","a4","a5","b4","b5","mat2d_rotate","mat2d_scale","translate","mat2d_fromRotation","mat2d_fromScaling","fromTranslation","mat2d_str","mat2d_frob","mat2d_add","mat2d_subtract","mat2d_multiplyScalar","mat2d_multiplyScalarAndAdd","mat2d_exactEquals","mat2d_equals","mat2d_mul","mat2d_sub","mat3_create","fromMat4","mat3_clone","mat3_copy","mat3_fromValues","m02","m12","m20","m21","m22","mat3_set","mat3_identity","mat3_transpose","a01","a02","a12","mat3_invert","a00","a10","a11","a20","a21","a22","b01","b11","b21","mat3_adjoint","mat3_determinant","mat3_multiply","b00","b02","b10","b12","b20","b22","mat3_translate","x","y","mat3_rotate","mat3_scale","mat3_fromTranslation","mat3_fromRotation","mat3_fromScaling","fromMat2d","fromQuat","q","z","w","x2","y2","z2","xx","yx","yy","zx","zy","zz","wx","wy","wz","normalFromMat4","a03","a13","a23","a30","a31","a32","a33","b03","b04","b05","b06","b07","b08","b09","projection","width","height","mat3_str","mat3_frob","mat3_add","mat3_subtract","mat3_multiplyScalar","mat3_multiplyScalarAndAdd","mat3_exactEquals","mat3_equals","a6","a7","a8","b6","b7","b8","mat3_mul","mat3_sub","mat4_create","mat4_clone","mat4_copy","mat4_fromValues","m03","m13","m23","m30","m31","m32","m33","mat4_set","mat4_identity","mat4_transpose","mat4_invert","mat4_adjoint","mat4_determinant","mat4_multiply","mat4_translate","mat4_scale","mat4_rotate","axis","len","rotateX","rotateY","rotateZ","mat4_fromTranslation","mat4_fromScaling","mat4_fromRotation","fromXRotation","fromYRotation","fromZRotation","fromRotationTranslation","xy","xz","yz","fromQuat2","translation","bx","by","bz","bw","ax","ay","az","aw","magnitude","getTranslation","mat","getScaling","getRotation","trace","S","fromRotationTranslationScale","sx","sy","sz","fromRotationTranslationScaleOrigin","ox","oy","oz","out0","out1","out2","out4","out5","out6","out8","out9","out10","mat4_fromQuat","frustum","left","right","bottom","top","near","far","rl","tb","nf","perspective","fovy","aspect","f","tan","Infinity","perspectiveFromFieldOfView","fov","upTan","upDegrees","downTan","downDegrees","leftTan","leftDegrees","rightTan","rightDegrees","xScale","yScale","ortho","lr","bt","lookAt","eye","center","up","x0","x1","y0","y1","z0","z1","eyex","eyey","eyez","upx","upy","upz","centerx","centery","centerz","targetTo","target","mat4_str","mat4_frob","mat4_add","mat4_subtract","mat4_multiplyScalar","mat4_multiplyScalarAndAdd","mat4_exactEquals","mat4_equals","a9","a14","a15","b9","b13","b14","b15","mat4_mul","mat4_sub","vec3_create","vec3_clone","vec3_length","vec3_fromValues","vec3_copy","vec3_set","vec3_add","vec3_subtract","vec3_multiply","divide","ceil","floor","min","round","vec3_scale","scaleAndAdd","distance","squaredDistance","squaredLength","negate","inverse","normalize","vec3_dot","cross","lerp","hermite","factorTimes2","factor1","factor2","factor3","factor4","bezier","inverseFactor","inverseFactorTimesTwo","zScale","transformMat4","transformMat3","transformQuat","qx","qy","qz","qw","uvx","uvy","uvz","uuvx","uuvy","uuvz","w2","vec3_rotateX","vec3_rotateY","vec3_rotateZ","angle","tempA","tempB","cosine","acos","zero","vec3_str","vec3_exactEquals","vec3_equals","vec","vec3_sub","vec3_mul","div","dist","sqrDist","vec3_len","sqrLen","forEach","stride","offset","count","fn","arg","length","vec4_create","vec4_clone","vec4_fromValues","vec4_copy","vec4_set","vec4_add","vec4_subtract","vec4_multiply","vec4_divide","vec4_ceil","vec4_floor","vec4_min","vec4_max","vec4_round","vec4_scale","vec4_scaleAndAdd","vec4_distance","vec4_squaredDistance","vec4_length","vec4_squaredLength","vec4_negate","vec4_inverse","vec4_normalize","vec4_dot","vec4_cross","u","A","B","C","E","F","G","H","I","J","vec4_lerp","vec4_random","v2","v3","v4","s1","s2","vec4_transformMat4","vec4_transformQuat","ix","iy","iz","iw","vec4_zero","vec4_str","vec4_exactEquals","vec4_equals","vec4_sub","vec4_mul","vec4_div","vec4_dist","vec4_sqrDist","vec4_len","vec4_sqrLen","vec4_forEach","quat_create","quat_identity","setAxisAngle","getAxisAngle","out_axis","quat_multiply","quat_rotateX","quat_rotateY","quat_rotateZ","calculateW","slerp","omega","cosom","sinom","scale0","scale1","quat_random","u1","u2","u3","sqrt1MinusU1","sqrtU1","quat_invert","dot","invDot","conjugate","fromMat3","fRoot","fTrace","j","k","fromEuler","halfToRad","cx","cy","cz","quat_str","tmpvec3","xUnitVec3","yUnitVec3","temp1","temp2","matr","quat_clone","quat_fromValues","quat_copy","quat_set","quat_add","quat_mul","quat_scale","quat_dot","quat_lerp","quat_length","quat_len","quat_squaredLength","quat_sqrLen","quat_normalize","quat_exactEquals","quat_equals","rotationTo","sqlerp","setAxes","view","quat2_create","dq","quat2_clone","quat2_fromValues","w1","fromRotationTranslationValues","quat2_fromRotationTranslation","quat2_fromTranslation","quat2_fromRotation","quat2_fromMat4","outer","quat2_copy","quat2_identity","quat2_set","getReal","getDual","setReal","setDual","quat2_getTranslation","quat2_translate","ax1","ay1","az1","aw1","bx1","by1","bz1","ax2","ay2","az2","aw2","quat2_rotateX","quat2_rotateY","quat2_rotateZ","rotateByQuatAppend","rotateByQuatPrepend","rotateAroundAxis","axisLength","quat2_add","quat2_multiply","ax0","ay0","az0","aw0","bw1","bx0","by0","bz0","bw0","quat2_mul","quat2_scale","quat2_dot","quat2_lerp","mt","quat2_invert","sqlen","quat2_squaredLength","quat2_conjugate","quat2_length","quat2_len","quat2_sqrLen","quat2_normalize","a_dot_b","quat2_str","quat2_exactEquals","quat2_equals","vec2_create","vec2_clone","vec2_fromValues","vec2_copy","vec2_set","vec2_add","vec2_subtract","vec2_multiply","vec2_divide","vec2_ceil","vec2_floor","vec2_min","vec2_max","vec2_round","vec2_scale","vec2_scaleAndAdd","vec2_distance","vec2_squaredDistance","vec2_length","vec2_squaredLength","vec2_negate","vec2_inverse","vec2_normalize","vec2_dot","vec2_cross","vec2_lerp","vec2_random","transformMat2","transformMat2d","vec2_transformMat3","vec2_transformMat4","vec2_rotate","p0","p1","sinC","cosC","vec2_angle","len1","len2","vec2_zero","vec2_str","vec2_exactEquals","vec2_equals","vec2_len","vec2_sub","vec2_mul","vec2_div","vec2_dist","vec2_sqrDist","vec2_sqrLen","vec2_forEach","__webpack_exports__","common_namespaceObject","mat2_namespaceObject","mat2d_namespaceObject","mat3_namespaceObject","mat4_namespaceObject","quat_namespaceObject","quat2_namespaceObject","vec2_namespaceObject","vec3_namespaceObject","vec4_namespaceObject","WriteGrid","this","vals","write","val","at","copyFrom","grid","safeOutOfBounds","oobValue","Grid","find","test","map","result","bufferCopy","cave","caveDemo","flatWhite","gaussianBlur","normals","ship","compiledShaders","getShaders","gl","canvas","id","compileShader","buildCollection","errorHTML","kind","log","replace","body","vertShader","createShader","VERTEX_SHADER","shaderSource","vertLog","getShaderInfoLog","document","innerHTML","Error","fragShader","FRAGMENT_SHADER","fragLog","prog","createProgram","attachShader","linkProgram","transform_1","gl_matrix_1","lang_1","m4x","mat4","v4x","vec4","v3x","vec3","v3y","v3z","Camera","transform","Transform","aspectRatio","getViewMatrix","self","toMatrix","getProjectionMatrix","updateAspectRatio","screenWidth","screenHeight","screenPointToWorldXYPlanePoint","screenPoint","unconst","position","createSimpleSerializer","serialize","JSON","stringify","deserialize","parse","TICK_LENGTH_MS","LocalNetwork","toClientSerDe","toServerSerDe","_this","toServerQueue","toClientQueues","clients","latency","server","countAvailablePackets","receiveAllPackets","slice","receivePacket","splice","sendPacket","packet","serialized","setTimeout","push","senderId","createClient","toString","substr","RectTool","area","xmax","xmin","ymax","ymin","smallestDifferenceRadians","lerpRadians","findBounds","pts","BufferRenderer","shader","vertexBuffer","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","draw","texture","onPreDraw","useProgram","activeTexture","TEXTURE0","bindTexture","TEXTURE_2D","loc_tex","getUniformLocation","uniform1i","posLoc","getAttribLocation","enableVertexAttribArray","vertexAttribPointer","FLOAT","drawArrays","TRIANGLES","release","deleteBuffer","rotation","quat","networking_1","math_1","cloneDeep","v2x","vec2","serverPacketSerializer","clientPacketSerializer","PlayerState","lastInputUID","applyInputsToPlayer","cur","inputs","mouseWorldPos","atan2","pressing","uid","GameState","tick","predictedTick","players","from","matchPlayerCount","lerpNew","step","predict","input","playerId","grid_1","automaton_1","findContours_1","smoothCurve_1","triangulate_1","floodFill","tile","generateCave","seed","generateCaveVerbose","generatePartialAutomatonResult","generation","runCellularAutomaton","automatonResult","coloredGrid","bigColor","color","largestColor","largestRegion","pos","size","colorGridRegions","filledGrid","edgeMarkedGrid","markEdges","findContoursResult","findContours","outerMostContourIndex","contours","sort","smoothContours","smoothCurve","topLeftPtI","topLeftPt","topLeftPrevPt","bumpDownAmount","triangles","triangulate","edges","details","topLeftMostVertexIndex","M","PRNG","getRandomSeed","next","MAX_SEED","WalkedStatus","normal","spaceInsurance","walkMap","_","Unwalked","iter","newContour","findOneContour","bestCandidate","prev","candidates","minVal","minI","freshStart","findFreshContour","points","lastCan","dx","dy","lastStatus","Walked","newStatus","WalkedImportant","flatten","shaders_1","bufferRenderer_1","gaussianBlur_1","frameBufferTexture_1","camera_1","m4y","getFlatVerts","getFlatIndices","baseCount","tris","index","concat","reverse","CaveRenderer","normalsTexture","indexBufferData","indexBufferLen","indexBuffer","ELEMENT_ARRAY_BUFFER","Uint16Array","_surfaceInfoBuffers","buildSurfaceInfoBuffers","SURFACE_INFO_BUFFER_SIZE","normalsBlit","gaussBlur0","GaussianBlur","gaussBlur1","frameBufferTex","FrameBufferTexture","flatWhiteShader","bindFramebuffer","FRAMEBUFFER","framebuffer","viewport","clearColor","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","drawElements","UNSIGNED_SHORT","run","resultTexture","uniform2f","depth","releaseTexture","drawDemo","zoom","uniform1f","uniformMatrix4fv","TEXTURE1","TEXTURE2","camera","shipWorldPos","CAVE_SCALE","uniform3fv","deleteTexture","CAVE_SIZE","createFramebuffer","createTexture","texImage2D","RGB","UNSIGNED_BYTE","texParameteri","TEXTURE_MIN_FILTER","LINEAR","TEXTURE_MAG_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","framebufferTexture2D","COLOR_ATTACHMENT0","deleteFramebuffer","loadTexture","url","glWrapMode","Promise","resolve","reject","image","Image","onload","RGBA","wrapMode","src","vector_caves_1","game_1","postInitters","vector-caves","initPost","window","initGame","initLocalMultiGame","caveGenerator_1","caveRenderer_1","textureLoader_1","prng_1","caveCache","genSlider","getElementById","ctx0","getContext","ctx","ctx2","ctx3","ctx4","ctx5","ctx6","ctx7","ctx9","updatePartialAutomatonResult","parseFloat","fillStyle","fillRect","_a","gridColorForNumber","gridColorForNormal","curveSpaceToCanvasSpace","pt","strokeStyle","beginPath","first","moveTo","i_1","lineTo","closePath","stroke","i_2","ts","randomColorHex","fill","oninput","onchange","onclick","location","reload","drawInfoBufferDemo","drawDetailedCaveDemo","randPair","ret","colors","degs","hx","hy","infoBuffers","surfaceInfoBuffers","copyBlit","mousePos","mouseDown","zoomT","onmousemove","e","rect","getBoundingClientRect","clientX","clientY","onmousedown","onmouseleave","onmouseout","onmouseup","REPEAT","then","normTex","caveRenderer","startTime","Date","now","render","requestAnimationFrame","getNeighborhood","nx","ny","population","birth","survival","iterations","buffer","rng","neighbors","resolution","curviness","curr","lenA","lenB","midA","midB","midDiff","diffA","diffB","controlA","controlB","inc","newVal","indices","V","nv","snip","insideTriangle","P","apx","apy","bpx","bpy","cpx","cpy","baseFlatten","array","arrayPush","isFlattenable","predicate","isStrict","values","isArguments","isArray","spreadableSymbol","isConcatSpreadable","undefined","freeGlobal","freeSelf","root","Function","global","g","baseIsArguments","isObjectLike","objectProto","propertyIsEnumerable","arguments","baseGetTag","argsTag","getRawTag","objectToString","nullTag","undefinedTag","symToStringTag","nativeObjectToString","isOwn","tag","unmasked","bufferRenderer","frameTex0","frameTex1","server_1","client_1","state_1","io","console","span0","network","netClient","GameServer","client","GameClient","notifyClientConnect","onResize","innerWidth","innerHeight","notifyCanvasResize","addEventListener","canvas0","canvas1","span1","waitAndAddClient","span","millis","net","tickIntervalID","setInterval","state","latestPlayerInputs","newPackets","notifyClientDisconnect","clearInterval","gameRenderer_1","inputGrabber_1","uid_1","gsx","loadResources","all","caveTexture","inputGrabber","InputGrabber","running","inputStack","curState","resources","gameRenderer","GameRenderer","runUpdateLoop","onAnimationFrame","mainLoop","stoppedRunning","lastUpdateTime","tickAccumulator","newTime","dt","maybeNewPacket","receiveStateFromServer","latestInputs","readInputs","matchIndex","mouseScreenPoint","generateUID","getExtension","loseContext","onStoppedRunningCallback","stoppedCallback","shipRenderer_1","trx","shipRenderer","ShipRenderer","_camera","localPlayerId","player","verts","eventBinder_1","eventBinder","EventBinder","_mouseDown","canvasBoundingRect","onMouseMove","onMouseDown","onMouseButtonNegative","onWindowChange","clientRect","clientLeft","clientTop","unbindAll","thisArg","bindings","event","listener","binding","removeEventListener","baseIsNative","getValue","listCacheClear","listCacheDelete","listCacheGet","listCacheHas","listCacheSet","ListCache","entries","entry","has","eq","nativeCreate","getNative","isKeyable","data","__data__","assignValue","baseAssignValue","source","props","customizer","isNew","newValue","Map","arrayLikeKeys","baseKeys","isArrayLike","webpackPolyfill","deprecate","paths","children","func","freeExports","nodeType","freeModule","freeProcess","process","nodeUtil","types","require","Ctor","constructor","arrayFilter","stubArray","nativeGetSymbols","getOwnPropertySymbols","getSymbols","symbol","DataView","Set","WeakMap","toSource","dataViewCtorString","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","getTag","ArrayBuffer","ctorString","Uint8Array","arrayBuffer","byteLength","other","isObject","asyncTag","funcTag","genTag","proxyTag","funcToString","objValue","configurable","writable","baseTimes","isBuffer","isIndex","isTypedArray","inherited","isArr","isArg","isBuff","isType","skipIndexes","String","stubFalse","Buffer","MAX_SAFE_INTEGER","isFunction","isLength","baseKeysIn","getPrototype","getSymbolsIn","overArg","getPrototypeOf","keysFunc","symbolsFunc","baseClone","CLONE_DEEP_FLAG","CLONE_SYMBOLS_FLAG","Stack","arrayEach","baseAssign","baseAssignIn","cloneBuffer","copyArray","copySymbols","copySymbolsIn","getAllKeys","getAllKeysIn","initCloneArray","initCloneByTag","initCloneObject","isMap","isSet","keys","CLONE_FLAT_FLAG","objectTag","cloneableTags","bitmask","stack","isDeep","isFlat","isFull","isFunc","stacked","subValue","keysIn","stackClear","stackDelete","stackGet","stackHas","stackSet","assocIndexOf","pop","MapCache","LARGE_ARRAY_SIZE","pairs","isMasked","reIsHostCtor","funcProto","reIsNative","RegExp","coreJsData","maskSrcKey","exec","IE_PROTO","mapCacheClear","mapCacheDelete","mapCacheGet","mapCacheHas","mapCacheSet","Hash","hash","string","hashClear","hashDelete","hashGet","hashHas","hashSet","HASH_UNDEFINED","getMapData","iteratee","copyObject","reIsUint","baseIsTypedArray","baseUnary","nodeIsTypedArray","typedArrayTags","isPrototype","nativeKeys","nativeKeysIn","isProto","allocUnsafe","resIndex","baseGetAllKeys","cloneArrayBuffer","cloneDataView","cloneRegExp","cloneSymbol","cloneTypedArray","boolTag","dateTag","mapTag","numberTag","regexpTag","setTag","stringTag","symbolTag","arrayBufferTag","dataViewTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","dataView","byteOffset","reFlags","regexp","lastIndex","symbolProto","symbolValueOf","valueOf","typedArray","baseCreate","objectCreate","proto","baseIsMap","nodeIsMap","baseIsSet","nodeIsSet"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 18);\n","/**\r\n * Common utilities\r\n * @module glMatrix\r\n */\n// Configuration Constants\nexport var EPSILON = 0.000001;\nexport var ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nexport var RANDOM = Math.random;\n/**\r\n * Sets the type of array used when creating new vectors and matrices\r\n *\r\n * @param {Type} type Array type, such as Float32Array or Array\r\n */\n\nexport function setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\nvar degree = Math.PI / 180;\n/**\r\n * Convert Degree To Radian\r\n *\r\n * @param {Number} a Angle in Degrees\r\n */\n\nexport function toRadian(a) {\n  return a * degree;\n}\n/**\r\n * Tests whether or not the arguments have approximately the same value, within an absolute\r\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\r\n * than or equal to 1.0, and a relative tolerance is used for larger values)\r\n *\r\n * @param {Number} a The first number to test.\r\n * @param {Number} b The second number to test.\r\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}","import * as glMatrix from \"./common.js\";\n/**\r\n * 2x2 Matrix\r\n * @module mat2\r\n */\n\n/**\r\n * Creates a new identity mat2\r\n *\r\n * @returns {mat2} a new 2x2 matrix\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  out[0] = 1;\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat2 initialized with values from an existing matrix\r\n *\r\n * @param {mat2} a matrix to clone\r\n * @returns {mat2} a new 2x2 matrix\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Copy the values from one mat2 to another\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the source matrix\r\n * @returns {mat2} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Set a mat2 to the identity matrix\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @returns {mat2} out\r\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Create a new mat2 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\r\n * @returns {mat2} out A new 2x2 matrix\r\n */\n\nexport function fromValues(m00, m01, m10, m11) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m10;\n  out[3] = m11;\n  return out;\n}\n/**\r\n * Set the components of a mat2 to the given values\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\r\n * @returns {mat2} out\r\n */\n\nexport function set(out, m00, m01, m10, m11) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m10;\n  out[3] = m11;\n  return out;\n}\n/**\r\n * Transpose the values of a mat2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the source matrix\r\n * @returns {mat2} out\r\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache\n  // some values\n  if (out === a) {\n    var a1 = a[1];\n    out[1] = a[2];\n    out[2] = a1;\n  } else {\n    out[0] = a[0];\n    out[1] = a[2];\n    out[2] = a[1];\n    out[3] = a[3];\n  }\n\n  return out;\n}\n/**\r\n * Inverts a mat2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the source matrix\r\n * @returns {mat2} out\r\n */\n\nexport function invert(out, a) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3]; // Calculate the determinant\n\n  var det = a0 * a3 - a2 * a1;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = a3 * det;\n  out[1] = -a1 * det;\n  out[2] = -a2 * det;\n  out[3] = a0 * det;\n  return out;\n}\n/**\r\n * Calculates the adjugate of a mat2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the source matrix\r\n * @returns {mat2} out\r\n */\n\nexport function adjoint(out, a) {\n  // Caching this value is nessecary if out == a\n  var a0 = a[0];\n  out[0] = a[3];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a0;\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat2\r\n *\r\n * @param {mat2} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\nexport function determinant(a) {\n  return a[0] * a[3] - a[2] * a[1];\n}\n/**\r\n * Multiplies two mat2's\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the first operand\r\n * @param {mat2} b the second operand\r\n * @returns {mat2} out\r\n */\n\nexport function multiply(out, a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = a0 * b0 + a2 * b1;\n  out[1] = a1 * b0 + a3 * b1;\n  out[2] = a0 * b2 + a2 * b3;\n  out[3] = a1 * b2 + a3 * b3;\n  return out;\n}\n/**\r\n * Rotates a mat2 by the given angle\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2} out\r\n */\n\nexport function rotate(out, a, rad) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  out[0] = a0 * c + a2 * s;\n  out[1] = a1 * c + a3 * s;\n  out[2] = a0 * -s + a2 * c;\n  out[3] = a1 * -s + a3 * c;\n  return out;\n}\n/**\r\n * Scales the mat2 by the dimensions in the given vec2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the matrix to rotate\r\n * @param {vec2} v the vec2 to scale the matrix by\r\n * @returns {mat2} out\r\n **/\n\nexport function scale(out, a, v) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var v0 = v[0],\n      v1 = v[1];\n  out[0] = a0 * v0;\n  out[1] = a1 * v0;\n  out[2] = a2 * v1;\n  out[3] = a3 * v1;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2.identity(dest);\r\n *     mat2.rotate(dest, dest, rad);\r\n *\r\n * @param {mat2} out mat2 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2} out\r\n */\n\nexport function fromRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = -s;\n  out[3] = c;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2.identity(dest);\r\n *     mat2.scale(dest, dest, vec);\r\n *\r\n * @param {mat2} out mat2 receiving operation result\r\n * @param {vec2} v Scaling vector\r\n * @returns {mat2} out\r\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = v[1];\n  return out;\n}\n/**\r\n * Returns a string representation of a mat2\r\n *\r\n * @param {mat2} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\nexport function str(a) {\n  return 'mat2(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n}\n/**\r\n * Returns Frobenius norm of a mat2\r\n *\r\n * @param {mat2} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\nexport function frob(a) {\n  return Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2));\n}\n/**\r\n * Returns L, D and U matrices (Lower triangular, Diagonal and Upper triangular) by factorizing the input matrix\r\n * @param {mat2} L the lower triangular matrix\r\n * @param {mat2} D the diagonal matrix\r\n * @param {mat2} U the upper triangular matrix\r\n * @param {mat2} a the input matrix to factorize\r\n */\n\nexport function LDU(L, D, U, a) {\n  L[2] = a[2] / a[0];\n  U[0] = a[0];\n  U[1] = a[1];\n  U[3] = a[3] - L[2] * U[1];\n  return [L, D, U];\n}\n/**\r\n * Adds two mat2's\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the first operand\r\n * @param {mat2} b the second operand\r\n * @returns {mat2} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the first operand\r\n * @param {mat2} b the second operand\r\n * @returns {mat2} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {mat2} a The first matrix.\r\n * @param {mat2} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {mat2} a The first matrix.\r\n * @param {mat2} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat2} out\r\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n/**\r\n * Adds two mat2's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat2} out the receiving vector\r\n * @param {mat2} a the first operand\r\n * @param {mat2} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat2} out\r\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  return out;\n}\n/**\r\n * Alias for {@link mat2.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link mat2.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\n/**\r\n * 2x3 Matrix\r\n * @module mat2d\r\n *\r\n * @description\r\n * A mat2d contains six elements defined as:\r\n * <pre>\r\n * [a, c, tx,\r\n *  b, d, ty]\r\n * </pre>\r\n * This is a short form for the 3x3 matrix:\r\n * <pre>\r\n * [a, c, tx,\r\n *  b, d, ty,\r\n *  0, 0, 1]\r\n * </pre>\r\n * The last row is ignored so the array is shorter and operations are faster.\r\n */\n\n/**\r\n * Creates a new identity mat2d\r\n *\r\n * @returns {mat2d} a new 2x3 matrix\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(6);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[4] = 0;\n    out[5] = 0;\n  }\n\n  out[0] = 1;\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat2d initialized with values from an existing matrix\r\n *\r\n * @param {mat2d} a matrix to clone\r\n * @returns {mat2d} a new 2x3 matrix\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(6);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  return out;\n}\n/**\r\n * Copy the values from one mat2d to another\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the source matrix\r\n * @returns {mat2d} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  return out;\n}\n/**\r\n * Set a mat2d to the identity matrix\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @returns {mat2d} out\r\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\r\n * Create a new mat2d with the given values\r\n *\r\n * @param {Number} a Component A (index 0)\r\n * @param {Number} b Component B (index 1)\r\n * @param {Number} c Component C (index 2)\r\n * @param {Number} d Component D (index 3)\r\n * @param {Number} tx Component TX (index 4)\r\n * @param {Number} ty Component TY (index 5)\r\n * @returns {mat2d} A new mat2d\r\n */\n\nexport function fromValues(a, b, c, d, tx, ty) {\n  var out = new glMatrix.ARRAY_TYPE(6);\n  out[0] = a;\n  out[1] = b;\n  out[2] = c;\n  out[3] = d;\n  out[4] = tx;\n  out[5] = ty;\n  return out;\n}\n/**\r\n * Set the components of a mat2d to the given values\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {Number} a Component A (index 0)\r\n * @param {Number} b Component B (index 1)\r\n * @param {Number} c Component C (index 2)\r\n * @param {Number} d Component D (index 3)\r\n * @param {Number} tx Component TX (index 4)\r\n * @param {Number} ty Component TY (index 5)\r\n * @returns {mat2d} out\r\n */\n\nexport function set(out, a, b, c, d, tx, ty) {\n  out[0] = a;\n  out[1] = b;\n  out[2] = c;\n  out[3] = d;\n  out[4] = tx;\n  out[5] = ty;\n  return out;\n}\n/**\r\n * Inverts a mat2d\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the source matrix\r\n * @returns {mat2d} out\r\n */\n\nexport function invert(out, a) {\n  var aa = a[0],\n      ab = a[1],\n      ac = a[2],\n      ad = a[3];\n  var atx = a[4],\n      aty = a[5];\n  var det = aa * ad - ab * ac;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = ad * det;\n  out[1] = -ab * det;\n  out[2] = -ac * det;\n  out[3] = aa * det;\n  out[4] = (ac * aty - ad * atx) * det;\n  out[5] = (ab * atx - aa * aty) * det;\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat2d\r\n *\r\n * @param {mat2d} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\nexport function determinant(a) {\n  return a[0] * a[3] - a[1] * a[2];\n}\n/**\r\n * Multiplies two mat2d's\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the first operand\r\n * @param {mat2d} b the second operand\r\n * @returns {mat2d} out\r\n */\n\nexport function multiply(out, a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5];\n  out[0] = a0 * b0 + a2 * b1;\n  out[1] = a1 * b0 + a3 * b1;\n  out[2] = a0 * b2 + a2 * b3;\n  out[3] = a1 * b2 + a3 * b3;\n  out[4] = a0 * b4 + a2 * b5 + a4;\n  out[5] = a1 * b4 + a3 * b5 + a5;\n  return out;\n}\n/**\r\n * Rotates a mat2d by the given angle\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2d} out\r\n */\n\nexport function rotate(out, a, rad) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  out[0] = a0 * c + a2 * s;\n  out[1] = a1 * c + a3 * s;\n  out[2] = a0 * -s + a2 * c;\n  out[3] = a1 * -s + a3 * c;\n  out[4] = a4;\n  out[5] = a5;\n  return out;\n}\n/**\r\n * Scales the mat2d by the dimensions in the given vec2\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the matrix to translate\r\n * @param {vec2} v the vec2 to scale the matrix by\r\n * @returns {mat2d} out\r\n **/\n\nexport function scale(out, a, v) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var v0 = v[0],\n      v1 = v[1];\n  out[0] = a0 * v0;\n  out[1] = a1 * v0;\n  out[2] = a2 * v1;\n  out[3] = a3 * v1;\n  out[4] = a4;\n  out[5] = a5;\n  return out;\n}\n/**\r\n * Translates the mat2d by the dimensions in the given vec2\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the matrix to translate\r\n * @param {vec2} v the vec2 to translate the matrix by\r\n * @returns {mat2d} out\r\n **/\n\nexport function translate(out, a, v) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var v0 = v[0],\n      v1 = v[1];\n  out[0] = a0;\n  out[1] = a1;\n  out[2] = a2;\n  out[3] = a3;\n  out[4] = a0 * v0 + a2 * v1 + a4;\n  out[5] = a1 * v0 + a3 * v1 + a5;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2d.identity(dest);\r\n *     mat2d.rotate(dest, dest, rad);\r\n *\r\n * @param {mat2d} out mat2d receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2d} out\r\n */\n\nexport function fromRotation(out, rad) {\n  var s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = -s;\n  out[3] = c;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2d.identity(dest);\r\n *     mat2d.scale(dest, dest, vec);\r\n *\r\n * @param {mat2d} out mat2d receiving operation result\r\n * @param {vec2} v Scaling vector\r\n * @returns {mat2d} out\r\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = v[1];\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2d.identity(dest);\r\n *     mat2d.translate(dest, dest, vec);\r\n *\r\n * @param {mat2d} out mat2d receiving operation result\r\n * @param {vec2} v Translation vector\r\n * @returns {mat2d} out\r\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = v[0];\n  out[5] = v[1];\n  return out;\n}\n/**\r\n * Returns a string representation of a mat2d\r\n *\r\n * @param {mat2d} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\nexport function str(a) {\n  return 'mat2d(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ')';\n}\n/**\r\n * Returns Frobenius norm of a mat2d\r\n *\r\n * @param {mat2d} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\nexport function frob(a) {\n  return Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + 1);\n}\n/**\r\n * Adds two mat2d's\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the first operand\r\n * @param {mat2d} b the second operand\r\n * @returns {mat2d} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the first operand\r\n * @param {mat2d} b the second operand\r\n * @returns {mat2d} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  return out;\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat2d} out\r\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  return out;\n}\n/**\r\n * Adds two mat2d's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat2d} out the receiving vector\r\n * @param {mat2d} a the first operand\r\n * @param {mat2d} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat2d} out\r\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {mat2d} a The first matrix.\r\n * @param {mat2d} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {mat2d} a The first matrix.\r\n * @param {mat2d} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5));\n}\n/**\r\n * Alias for {@link mat2d.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link mat2d.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\n/**\r\n * 3x3 Matrix\r\n * @module mat3\r\n */\n\n/**\r\n * Creates a new identity mat3\r\n *\r\n * @returns {mat3} a new 3x3 matrix\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(9);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n  }\n\n  out[0] = 1;\n  out[4] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Copies the upper-left 3x3 values into the given mat3.\r\n *\r\n * @param {mat3} out the receiving 3x3 matrix\r\n * @param {mat4} a   the source 4x4 matrix\r\n * @returns {mat3} out\r\n */\n\nexport function fromMat4(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[4];\n  out[4] = a[5];\n  out[5] = a[6];\n  out[6] = a[8];\n  out[7] = a[9];\n  out[8] = a[10];\n  return out;\n}\n/**\r\n * Creates a new mat3 initialized with values from an existing matrix\r\n *\r\n * @param {mat3} a matrix to clone\r\n * @returns {mat3} a new 3x3 matrix\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\r\n * Copy the values from one mat3 to another\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\r\n * Create a new mat3 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\r\n * @returns {mat3} A new mat3\r\n */\n\nexport function fromValues(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\r\n * Set the components of a mat3 to the given values\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\r\n * @returns {mat3} out\r\n */\n\nexport function set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\r\n * Set a mat3 to the identity matrix\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @returns {mat3} out\r\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Transpose the values of a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a12 = a[5];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a01;\n    out[5] = a[7];\n    out[6] = a02;\n    out[7] = a12;\n  } else {\n    out[0] = a[0];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a[1];\n    out[4] = a[4];\n    out[5] = a[7];\n    out[6] = a[2];\n    out[7] = a[5];\n    out[8] = a[8];\n  }\n\n  return out;\n}\n/**\r\n * Inverts a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b01 = a22 * a11 - a12 * a21;\n  var b11 = -a22 * a10 + a12 * a20;\n  var b21 = a21 * a10 - a11 * a20; // Calculate the determinant\n\n  var det = a00 * b01 + a01 * b11 + a02 * b21;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = b01 * det;\n  out[1] = (-a22 * a01 + a02 * a21) * det;\n  out[2] = (a12 * a01 - a02 * a11) * det;\n  out[3] = b11 * det;\n  out[4] = (a22 * a00 - a02 * a20) * det;\n  out[5] = (-a12 * a00 + a02 * a10) * det;\n  out[6] = b21 * det;\n  out[7] = (-a21 * a00 + a01 * a20) * det;\n  out[8] = (a11 * a00 - a01 * a10) * det;\n  return out;\n}\n/**\r\n * Calculates the adjugate of a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  out[0] = a11 * a22 - a12 * a21;\n  out[1] = a02 * a21 - a01 * a22;\n  out[2] = a01 * a12 - a02 * a11;\n  out[3] = a12 * a20 - a10 * a22;\n  out[4] = a00 * a22 - a02 * a20;\n  out[5] = a02 * a10 - a00 * a12;\n  out[6] = a10 * a21 - a11 * a20;\n  out[7] = a01 * a20 - a00 * a21;\n  out[8] = a00 * a11 - a01 * a10;\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat3\r\n *\r\n * @param {mat3} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n}\n/**\r\n * Multiplies two mat3's\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @returns {mat3} out\r\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b00 = b[0],\n      b01 = b[1],\n      b02 = b[2];\n  var b10 = b[3],\n      b11 = b[4],\n      b12 = b[5];\n  var b20 = b[6],\n      b21 = b[7],\n      b22 = b[8];\n  out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n  out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n  out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n  out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n  out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n  out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n  out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n  out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n  out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n  return out;\n}\n/**\r\n * Translate a mat3 by the given vector\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to translate\r\n * @param {vec2} v vector to translate by\r\n * @returns {mat3} out\r\n */\n\nexport function translate(out, a, v) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      x = v[0],\n      y = v[1];\n  out[0] = a00;\n  out[1] = a01;\n  out[2] = a02;\n  out[3] = a10;\n  out[4] = a11;\n  out[5] = a12;\n  out[6] = x * a00 + y * a10 + a20;\n  out[7] = x * a01 + y * a11 + a21;\n  out[8] = x * a02 + y * a12 + a22;\n  return out;\n}\n/**\r\n * Rotates a mat3 by the given angle\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat3} out\r\n */\n\nexport function rotate(out, a, rad) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c * a00 + s * a10;\n  out[1] = c * a01 + s * a11;\n  out[2] = c * a02 + s * a12;\n  out[3] = c * a10 - s * a00;\n  out[4] = c * a11 - s * a01;\n  out[5] = c * a12 - s * a02;\n  out[6] = a20;\n  out[7] = a21;\n  out[8] = a22;\n  return out;\n}\n;\n/**\r\n * Scales the mat3 by the dimensions in the given vec2\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to rotate\r\n * @param {vec2} v the vec2 to scale the matrix by\r\n * @returns {mat3} out\r\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1];\n  out[0] = x * a[0];\n  out[1] = x * a[1];\n  out[2] = x * a[2];\n  out[3] = y * a[3];\n  out[4] = y * a[4];\n  out[5] = y * a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.translate(dest, dest, vec);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {vec2} v Translation vector\r\n * @returns {mat3} out\r\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = v[0];\n  out[7] = v[1];\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.rotate(dest, dest, rad);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat3} out\r\n */\n\nexport function fromRotation(out, rad) {\n  var s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = -s;\n  out[4] = c;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.scale(dest, dest, vec);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {vec2} v Scaling vector\r\n * @returns {mat3} out\r\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = v[1];\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Copies the values from a mat2d into a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat2d} a the matrix to copy\r\n * @returns {mat3} out\r\n **/\n\nexport function fromMat2d(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = 0;\n  out[3] = a[2];\n  out[4] = a[3];\n  out[5] = 0;\n  out[6] = a[4];\n  out[7] = a[5];\n  out[8] = 1;\n  return out;\n}\n/**\r\n* Calculates a 3x3 matrix from the given quaternion\r\n*\r\n* @param {mat3} out mat3 receiving operation result\r\n* @param {quat} q Quaternion to create matrix from\r\n*\r\n* @returns {mat3} out\r\n*/\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[3] = yx - wz;\n  out[6] = zx + wy;\n  out[1] = yx + wz;\n  out[4] = 1 - xx - zz;\n  out[7] = zy - wx;\n  out[2] = zx - wy;\n  out[5] = zy + wx;\n  out[8] = 1 - xx - yy;\n  return out;\n}\n/**\r\n* Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\r\n*\r\n* @param {mat3} out mat3 receiving operation result\r\n* @param {mat4} a Mat4 to derive the normal matrix from\r\n*\r\n* @returns {mat3} out\r\n*/\n\nexport function normalFromMat4(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  return out;\n}\n/**\r\n * Generates a 2D projection matrix with the given bounds\r\n *\r\n * @param {mat3} out mat3 frustum matrix will be written into\r\n * @param {number} width Width of your gl context\r\n * @param {number} height Height of gl context\r\n * @returns {mat3} out\r\n */\n\nexport function projection(out, width, height) {\n  out[0] = 2 / width;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -2 / height;\n  out[5] = 0;\n  out[6] = -1;\n  out[7] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Returns a string representation of a mat3\r\n *\r\n * @param {mat3} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\nexport function str(a) {\n  return 'mat3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ', ' + a[8] + ')';\n}\n/**\r\n * Returns Frobenius norm of a mat3\r\n *\r\n * @param {mat3} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\nexport function frob(a) {\n  return Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2));\n}\n/**\r\n * Adds two mat3's\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @returns {mat3} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @returns {mat3} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  return out;\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat3} out\r\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  return out;\n}\n/**\r\n * Adds two mat3's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat3} out the receiving vector\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat3} out\r\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {mat3} a The first matrix.\r\n * @param {mat3} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {mat3} a The first matrix.\r\n * @param {mat3} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7],\n      a8 = a[8];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7],\n      b8 = b[8];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8));\n}\n/**\r\n * Alias for {@link mat3.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link mat3.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\n/**\r\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\r\n * @module mat4\r\n */\n\n/**\r\n * Creates a new identity mat4\r\n *\r\n * @returns {mat4} a new 4x4 matrix\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(16);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n  }\n\n  out[0] = 1;\n  out[5] = 1;\n  out[10] = 1;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat4 initialized with values from an existing matrix\r\n *\r\n * @param {mat4} a matrix to clone\r\n * @returns {mat4} a new 4x4 matrix\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Copy the values from one mat4 to another\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Create a new mat4 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} A new mat4\r\n */\n\nexport function fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\r\n * Set the components of a mat4 to the given values\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} out\r\n */\n\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\r\n * Set a mat4 to the identity matrix\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @returns {mat4} out\r\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Transpose the values of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    var a12 = a[6],\n        a13 = a[7];\n    var a23 = a[11];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\r\n * Inverts a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n  return out;\n}\n/**\r\n * Calculates the adjugate of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat4\r\n *\r\n * @param {mat4} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n/**\r\n * Multiplies two mat4s\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15]; // Cache only the current line of the second matrix\n\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[4];\n  b1 = b[5];\n  b2 = b[6];\n  b3 = b[7];\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[8];\n  b1 = b[9];\n  b2 = b[10];\n  b3 = b[11];\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[12];\n  b1 = b[13];\n  b2 = b[14];\n  b3 = b[15];\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  return out;\n}\n/**\r\n * Translate a mat4 by the given vector\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to translate\r\n * @param {vec3} v vector to translate by\r\n * @returns {mat4} out\r\n */\n\nexport function translate(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a03;\n    out[4] = a10;\n    out[5] = a11;\n    out[6] = a12;\n    out[7] = a13;\n    out[8] = a20;\n    out[9] = a21;\n    out[10] = a22;\n    out[11] = a23;\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n/**\r\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to scale\r\n * @param {vec3} v the vec3 to scale the matrix by\r\n * @returns {mat4} out\r\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Rotates a mat4 by the given angle around the given axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {vec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\n\nexport function rotate(out, a, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.sqrt(x * x + y * y + z * z);\n  var s, c, t;\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n  var b00, b01, b02;\n  var b10, b11, b12;\n  var b20, b21, b22;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n  a00 = a[0];\n  a01 = a[1];\n  a02 = a[2];\n  a03 = a[3];\n  a10 = a[4];\n  a11 = a[5];\n  a12 = a[6];\n  a13 = a[7];\n  a20 = a[8];\n  a21 = a[9];\n  a22 = a[10];\n  a23 = a[11]; // Construct the elements of the rotation matrix\n\n  b00 = x * x * t + c;\n  b01 = y * x * t + z * s;\n  b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s;\n  b11 = y * y * t + c;\n  b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s;\n  b21 = y * z * t - x * s;\n  b22 = z * z * t + c; // Perform rotation-specific matrix multiplication\n\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the X axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateX(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the Y axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateY(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the Z axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateZ(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {vec3} v Translation vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.scale(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {vec3} v Scaling vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle around a given axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotate(dest, dest, rad, axis);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {vec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotation(out, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.sqrt(x * x + y * y + z * z);\n  var s, c, t;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c; // Perform rotation-specific matrix multiplication\n\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the X axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateX(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromXRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the Y axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateY(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromYRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = 0;\n  out[2] = -s;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the Z axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateZ(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromZRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation and vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {vec3} v Translation vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat4 from a dual quat.\r\n *\r\n * @param {mat4} out Matrix\r\n * @param {quat2} a Dual Quaternion\r\n * @returns {mat4} mat4 receiving operation result\r\n */\n\nexport function fromQuat2(out, a) {\n  var translation = new glMatrix.ARRAY_TYPE(3);\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw; //Only scale if it makes sense\n\n  if (magnitude > 0) {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\n  } else {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  }\n\n  fromRotationTranslation(out, a, translation);\n  return out;\n}\n/**\r\n * Returns the translation vector component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslation,\r\n *  the returned vector will be the same as the translation vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive translation component\r\n * @param  {mat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\n\nexport function getTranslation(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n  return out;\n}\n/**\r\n * Returns the scaling factor component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslationScale\r\n *  with a normalized Quaternion paramter, the returned vector will be\r\n *  the same as the scaling vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive scaling factor component\r\n * @param  {mat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\n\nexport function getScaling(out, mat) {\n  var m11 = mat[0];\n  var m12 = mat[1];\n  var m13 = mat[2];\n  var m21 = mat[4];\n  var m22 = mat[5];\n  var m23 = mat[6];\n  var m31 = mat[8];\n  var m32 = mat[9];\n  var m33 = mat[10];\n  out[0] = Math.sqrt(m11 * m11 + m12 * m12 + m13 * m13);\n  out[1] = Math.sqrt(m21 * m21 + m22 * m22 + m23 * m23);\n  out[2] = Math.sqrt(m31 * m31 + m32 * m32 + m33 * m33);\n  return out;\n}\n/**\r\n * Returns a quaternion representing the rotational component\r\n *  of a transformation matrix. If a matrix is built with\r\n *  fromRotationTranslation, the returned quaternion will be the\r\n *  same as the quaternion originally supplied.\r\n * @param {quat} out Quaternion to receive the rotation component\r\n * @param {mat4} mat Matrix to be decomposed (input)\r\n * @return {quat} out\r\n */\n\nexport function getRotation(out, mat) {\n  // Algorithm taken from http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n  var trace = mat[0] + mat[5] + mat[10];\n  var S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (mat[6] - mat[9]) / S;\n    out[1] = (mat[8] - mat[2]) / S;\n    out[2] = (mat[1] - mat[4]) / S;\n  } else if (mat[0] > mat[5] && mat[0] > mat[10]) {\n    S = Math.sqrt(1.0 + mat[0] - mat[5] - mat[10]) * 2;\n    out[3] = (mat[6] - mat[9]) / S;\n    out[0] = 0.25 * S;\n    out[1] = (mat[1] + mat[4]) / S;\n    out[2] = (mat[8] + mat[2]) / S;\n  } else if (mat[5] > mat[10]) {\n    S = Math.sqrt(1.0 + mat[5] - mat[0] - mat[10]) * 2;\n    out[3] = (mat[8] - mat[2]) / S;\n    out[0] = (mat[1] + mat[4]) / S;\n    out[1] = 0.25 * S;\n    out[2] = (mat[6] + mat[9]) / S;\n  } else {\n    S = Math.sqrt(1.0 + mat[10] - mat[0] - mat[5]) * 2;\n    out[3] = (mat[1] - mat[4]) / S;\n    out[0] = (mat[8] + mat[2]) / S;\n    out[1] = (mat[6] + mat[9]) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {vec3} v Translation vector\r\n * @param {vec3} s Scaling vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     mat4.translate(dest, origin);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *     mat4.translate(dest, negativeOrigin);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {vec3} v Translation vector\r\n * @param {vec3} s Scaling vector\r\n * @param {vec3} o The origin vector around which to scale and rotate\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  var ox = o[0];\n  var oy = o[1];\n  var oz = o[2];\n  var out0 = (1 - (yy + zz)) * sx;\n  var out1 = (xy + wz) * sx;\n  var out2 = (xz - wy) * sx;\n  var out4 = (xy - wz) * sy;\n  var out5 = (1 - (xx + zz)) * sy;\n  var out6 = (yz + wx) * sy;\n  var out8 = (xz + wy) * sz;\n  var out9 = (yz - wx) * sz;\n  var out10 = (1 - (xx + yy)) * sz;\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = 0;\n  out[4] = out4;\n  out[5] = out5;\n  out[6] = out6;\n  out[7] = 0;\n  out[8] = out8;\n  out[9] = out9;\n  out[10] = out10;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Calculates a 4x4 matrix from the given quaternion\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat} q Quaternion to create matrix from\r\n *\r\n * @returns {mat4} out\r\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a frustum matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Number} left Left bound of the frustum\r\n * @param {Number} right Right bound of the frustum\r\n * @param {Number} bottom Bottom bound of the frustum\r\n * @param {Number} top Top bound of the frustum\r\n * @param {Number} near Near bound of the frustum\r\n * @param {Number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function frustum(out, left, right, bottom, top, near, far) {\n  var rl = 1 / (right - left);\n  var tb = 1 / (top - bottom);\n  var nf = 1 / (near - far);\n  out[0] = near * 2 * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = near * 2 * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = far * near * 2 * nf;\n  out[15] = 0;\n  return out;\n}\n/**\r\n * Generates a perspective projection matrix with the given bounds.\r\n * Passing null/undefined/no value for far will generate infinite projection matrix.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} fovy Vertical field of view in radians\r\n * @param {number} aspect Aspect ratio. typically viewport width/height\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum, can be null or Infinity\r\n * @returns {mat4} out\r\n */\n\nexport function perspective(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = (far + near) * nf;\n    out[14] = 2 * far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -2 * near;\n  }\n\n  return out;\n}\n/**\r\n * Generates a perspective projection matrix with the given field of view.\r\n * This is primarily useful for generating projection matrices to be used\r\n * with the still experiemental WebVR API.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function perspectiveFromFieldOfView(out, fov, near, far) {\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\n  var xScale = 2.0 / (leftTan + rightTan);\n  var yScale = 2.0 / (upTan + downTan);\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = (upTan - downTan) * yScale * 0.5;\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = far * near / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n/**\r\n * Generates a orthogonal projection matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} left Left bound of the frustum\r\n * @param {number} right Right bound of the frustum\r\n * @param {number} bottom Bottom bound of the frustum\r\n * @param {number} top Top bound of the frustum\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function ortho(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\r\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {vec3} eye Position of the viewer\r\n * @param {vec3} center Point the viewer is looking at\r\n * @param {vec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\n\nexport function lookAt(out, eye, center, up) {\n  var x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n  var eyex = eye[0];\n  var eyey = eye[1];\n  var eyez = eye[2];\n  var upx = up[0];\n  var upy = up[1];\n  var upz = up[2];\n  var centerx = center[0];\n  var centery = center[1];\n  var centerz = center[2];\n\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON && Math.abs(eyey - centery) < glMatrix.EPSILON && Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n    return identity(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n  len = 1 / Math.sqrt(z0 * z0 + z1 * z1 + z2 * z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.sqrt(x0 * x0 + x1 * x1 + x2 * x2);\n\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n  len = Math.sqrt(y0 * y0 + y1 * y1 + y2 * y2);\n\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a matrix that makes something look at something else.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {vec3} eye Position of the viewer\r\n * @param {vec3} center Point the viewer is looking at\r\n * @param {vec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\n\nexport function targetTo(out, eye, target, up) {\n  var eyex = eye[0],\n      eyey = eye[1],\n      eyez = eye[2],\n      upx = up[0],\n      upy = up[1],\n      upz = up[2];\n  var z0 = eyex - target[0],\n      z1 = eyey - target[1],\n      z2 = eyez - target[2];\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  var x0 = upy * z2 - upz * z1,\n      x1 = upz * z0 - upx * z2,\n      x2 = upx * z1 - upy * z0;\n  len = x0 * x0 + x1 * x1 + x2 * x2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n}\n;\n/**\r\n * Returns a string representation of a mat4\r\n *\r\n * @param {mat4} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\nexport function str(a) {\n  return 'mat4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ', ' + a[8] + ', ' + a[9] + ', ' + a[10] + ', ' + a[11] + ', ' + a[12] + ', ' + a[13] + ', ' + a[14] + ', ' + a[15] + ')';\n}\n/**\r\n * Returns Frobenius norm of a mat4\r\n *\r\n * @param {mat4} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\nexport function frob(a) {\n  return Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2) + Math.pow(a[9], 2) + Math.pow(a[10], 2) + Math.pow(a[11], 2) + Math.pow(a[12], 2) + Math.pow(a[13], 2) + Math.pow(a[14], 2) + Math.pow(a[15], 2));\n}\n/**\r\n * Adds two mat4's\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat4} out\r\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n/**\r\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat4} out the receiving vector\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat4} out\r\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  out[9] = a[9] + b[9] * scale;\n  out[10] = a[10] + b[10] * scale;\n  out[11] = a[11] + b[11] * scale;\n  out[12] = a[12] + b[12] * scale;\n  out[13] = a[13] + b[13] * scale;\n  out[14] = a[14] + b[14] * scale;\n  out[15] = a[15] + b[15] * scale;\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {mat4} a The first matrix.\r\n * @param {mat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {mat4} a The first matrix.\r\n * @param {mat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var a8 = a[8],\n      a9 = a[9],\n      a10 = a[10],\n      a11 = a[11];\n  var a12 = a[12],\n      a13 = a[13],\n      a14 = a[14],\n      a15 = a[15];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  var b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  var b8 = b[8],\n      b9 = b[9],\n      b10 = b[10],\n      b11 = b[11];\n  var b12 = b[12],\n      b13 = b[13],\n      b14 = b[14],\n      b15 = b[15];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\n}\n/**\r\n * Alias for {@link mat4.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link mat4.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\n/**\r\n * 3 Dimensional Vector\r\n * @module vec3\r\n */\n\n/**\r\n * Creates a new, empty vec3\r\n *\r\n * @returns {vec3} a new 3D vector\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(3);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  return out;\n}\n/**\r\n * Creates a new vec3 initialized with values from an existing vector\r\n *\r\n * @param {vec3} a vector to clone\r\n * @returns {vec3} a new 3D vector\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\r\n * Calculates the length of a vec3\r\n *\r\n * @param {vec3} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return Math.sqrt(x * x + y * y + z * z);\n}\n/**\r\n * Creates a new vec3 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} a new 3D vector\r\n */\n\nexport function fromValues(x, y, z) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Copy the values from one vec3 to another\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the source vector\r\n * @returns {vec3} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\r\n * Set the components of a vec3 to the given values\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} out\r\n */\n\nexport function set(out, x, y, z) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Adds two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\n/**\r\n * Multiplies two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n}\n/**\r\n * Divides two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  return out;\n}\n/**\r\n * Math.ceil the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to ceil\r\n * @returns {vec3} out\r\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  return out;\n}\n/**\r\n * Math.floor the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to floor\r\n * @returns {vec3} out\r\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  return out;\n}\n/**\r\n * Returns the minimum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  return out;\n}\n/**\r\n * Returns the maximum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  return out;\n}\n/**\r\n * Math.round the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to round\r\n * @returns {vec3} out\r\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  return out;\n}\n/**\r\n * Scales a vec3 by a scalar number\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec3} out\r\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  return out;\n}\n/**\r\n * Adds two vec3's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec3} out\r\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  return out;\n}\n/**\r\n * Calculates the euclidian distance between two vec3's\r\n *\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return Math.sqrt(x * x + y * y + z * z);\n}\n/**\r\n * Calculates the squared euclidian distance between two vec3's\r\n *\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return x * x + y * y + z * z;\n}\n/**\r\n * Calculates the squared length of a vec3\r\n *\r\n * @param {vec3} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return x * x + y * y + z * z;\n}\n/**\r\n * Negates the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to negate\r\n * @returns {vec3} out\r\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  return out;\n}\n/**\r\n * Returns the inverse of the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to invert\r\n * @returns {vec3} out\r\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n}\n/**\r\n * Normalize a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to normalize\r\n * @returns {vec3} out\r\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var len = x * x + y * y + z * z;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  out[2] = a[2] * len;\n  return out;\n}\n/**\r\n * Calculates the dot product of two vec3's\r\n *\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n/**\r\n * Computes the cross product of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function cross(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2];\n  out[0] = ay * bz - az * by;\n  out[1] = az * bx - ax * bz;\n  out[2] = ax * by - ay * bx;\n  return out;\n}\n/**\r\n * Performs a linear interpolation between two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  return out;\n}\n/**\r\n * Performs a hermite interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {vec3} c the third operand\r\n * @param {vec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nexport function hermite(out, a, b, c, d, t) {\n  var factorTimes2 = t * t;\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\n  var factor2 = factorTimes2 * (t - 2) + t;\n  var factor3 = factorTimes2 * (t - 1);\n  var factor4 = factorTimes2 * (3 - 2 * t);\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\r\n * Performs a bezier interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {vec3} c the third operand\r\n * @param {vec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nexport function bezier(out, a, b, c, d, t) {\n  var inverseFactor = 1 - t;\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  var factorTimes2 = t * t;\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\n  var factor2 = 3 * t * inverseFactorTimesTwo;\n  var factor3 = 3 * factorTimes2 * inverseFactor;\n  var factor4 = factorTimes2 * t;\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec3} out\r\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  var z = glMatrix.RANDOM() * 2.0 - 1.0;\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\n  out[0] = Math.cos(r) * zScale;\n  out[1] = Math.sin(r) * zScale;\n  out[2] = z * scale;\n  return out;\n}\n/**\r\n * Transforms the vec3 with a mat4.\r\n * 4th vector component is implicitly '1'\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to transform\r\n * @param {mat4} m matrix to transform with\r\n * @returns {vec3} out\r\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n}\n/**\r\n * Transforms the vec3 with a mat3.\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to transform\r\n * @param {mat3} m the 3x3 matrix to transform with\r\n * @returns {vec3} out\r\n */\n\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x * m[0] + y * m[3] + z * m[6];\n  out[1] = x * m[1] + y * m[4] + z * m[7];\n  out[2] = x * m[2] + y * m[5] + z * m[8];\n  return out;\n}\n/**\r\n * Transforms the vec3 with a quat\r\n * Can also be used for dual quaternions. (Multiply it with the real part)\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to transform\r\n * @param {quat} q quaternion to transform with\r\n * @returns {vec3} out\r\n */\n\nexport function transformQuat(out, a, q) {\n  // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3];\n  var x = a[0],\n      y = a[1],\n      z = a[2]; // var qvec = [qx, qy, qz];\n  // var uv = vec3.cross([], qvec, a);\n\n  var uvx = qy * z - qz * y,\n      uvy = qz * x - qx * z,\n      uvz = qx * y - qy * x; // var uuv = vec3.cross([], qvec, uv);\n\n  var uuvx = qy * uvz - qz * uvy,\n      uuvy = qz * uvx - qx * uvz,\n      uuvz = qx * uvy - qy * uvx; // vec3.scale(uv, uv, 2 * w);\n\n  var w2 = qw * 2;\n  uvx *= w2;\n  uvy *= w2;\n  uvz *= w2; // vec3.scale(uuv, uuv, 2);\n\n  uuvx *= 2;\n  uuvy *= 2;\n  uuvz *= 2; // return vec3.add(out, a, vec3.add(out, uv, uuv));\n\n  out[0] = x + uvx + uuvx;\n  out[1] = y + uvy + uuvy;\n  out[2] = z + uvz + uuvz;\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the x-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {vec3} a The vec3 point to rotate\r\n * @param {vec3} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec3} out\r\n */\n\nexport function rotateX(out, a, b, c) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0];\n  r[1] = p[1] * Math.cos(c) - p[2] * Math.sin(c);\n  r[2] = p[1] * Math.sin(c) + p[2] * Math.cos(c); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the y-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {vec3} a The vec3 point to rotate\r\n * @param {vec3} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec3} out\r\n */\n\nexport function rotateY(out, a, b, c) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[2] * Math.sin(c) + p[0] * Math.cos(c);\n  r[1] = p[1];\n  r[2] = p[2] * Math.cos(c) - p[0] * Math.sin(c); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the z-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {vec3} a The vec3 point to rotate\r\n * @param {vec3} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec3} out\r\n */\n\nexport function rotateZ(out, a, b, c) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0] * Math.cos(c) - p[1] * Math.sin(c);\n  r[1] = p[0] * Math.sin(c) + p[1] * Math.cos(c);\n  r[2] = p[2]; //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Get the angle between two 3D vectors\r\n * @param {vec3} a The first operand\r\n * @param {vec3} b The second operand\r\n * @returns {Number} The angle in radians\r\n */\n\nexport function angle(a, b) {\n  var tempA = fromValues(a[0], a[1], a[2]);\n  var tempB = fromValues(b[0], b[1], b[2]);\n  normalize(tempA, tempA);\n  normalize(tempB, tempB);\n  var cosine = dot(tempA, tempB);\n\n  if (cosine > 1.0) {\n    return 0;\n  } else if (cosine < -1.0) {\n    return Math.PI;\n  } else {\n    return Math.acos(cosine);\n  }\n}\n/**\r\n * Set the components of a vec3 to zero\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @returns {vec3} out\r\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  return out;\n}\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {vec3} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nexport function str(a) {\n  return 'vec3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ')';\n}\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {vec3} a The first vector.\r\n * @param {vec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {vec3} a The first vector.\r\n * @param {vec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\n}\n/**\r\n * Alias for {@link vec3.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;\n/**\r\n * Alias for {@link vec3.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link vec3.divide}\r\n * @function\r\n */\n\nexport var div = divide;\n/**\r\n * Alias for {@link vec3.distance}\r\n * @function\r\n */\n\nexport var dist = distance;\n/**\r\n * Alias for {@link vec3.squaredDistance}\r\n * @function\r\n */\n\nexport var sqrDist = squaredDistance;\n/**\r\n * Alias for {@link vec3.length}\r\n * @function\r\n */\n\nexport var len = length;\n/**\r\n * Alias for {@link vec3.squaredLength}\r\n * @function\r\n */\n\nexport var sqrLen = squaredLength;\n/**\r\n * Perform some operation over an array of vec3s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 3;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n    }\n\n    return a;\n  };\n}();","import * as glMatrix from \"./common.js\";\n/**\r\n * 4 Dimensional Vector\r\n * @module vec4\r\n */\n\n/**\r\n * Creates a new, empty vec4\r\n *\r\n * @returns {vec4} a new 4D vector\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n  }\n\n  return out;\n}\n/**\r\n * Creates a new vec4 initialized with values from an existing vector\r\n *\r\n * @param {vec4} a vector to clone\r\n * @returns {vec4} a new 4D vector\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Creates a new vec4 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {vec4} a new 4D vector\r\n */\n\nexport function fromValues(x, y, z, w) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\r\n * Copy the values from one vec4 to another\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the source vector\r\n * @returns {vec4} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Set the components of a vec4 to the given values\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {vec4} out\r\n */\n\nexport function set(out, x, y, z, w) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\r\n * Adds two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n/**\r\n * Multiplies two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  out[3] = a[3] * b[3];\n  return out;\n}\n/**\r\n * Divides two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  out[3] = a[3] / b[3];\n  return out;\n}\n/**\r\n * Math.ceil the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to ceil\r\n * @returns {vec4} out\r\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  out[3] = Math.ceil(a[3]);\n  return out;\n}\n/**\r\n * Math.floor the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to floor\r\n * @returns {vec4} out\r\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  out[3] = Math.floor(a[3]);\n  return out;\n}\n/**\r\n * Returns the minimum of two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  out[3] = Math.min(a[3], b[3]);\n  return out;\n}\n/**\r\n * Returns the maximum of two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  out[3] = Math.max(a[3], b[3]);\n  return out;\n}\n/**\r\n * Math.round the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to round\r\n * @returns {vec4} out\r\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  out[3] = Math.round(a[3]);\n  return out;\n}\n/**\r\n * Scales a vec4 by a scalar number\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec4} out\r\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n/**\r\n * Adds two vec4's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec4} out\r\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  return out;\n}\n/**\r\n * Calculates the euclidian distance between two vec4's\r\n *\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return Math.sqrt(x * x + y * y + z * z + w * w);\n}\n/**\r\n * Calculates the squared euclidian distance between two vec4's\r\n *\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\r\n * Calculates the length of a vec4\r\n *\r\n * @param {vec4} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return Math.sqrt(x * x + y * y + z * z + w * w);\n}\n/**\r\n * Calculates the squared length of a vec4\r\n *\r\n * @param {vec4} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\r\n * Negates the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to negate\r\n * @returns {vec4} out\r\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = -a[3];\n  return out;\n}\n/**\r\n * Returns the inverse of the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to invert\r\n * @returns {vec4} out\r\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  out[3] = 1.0 / a[3];\n  return out;\n}\n/**\r\n * Normalize a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to normalize\r\n * @returns {vec4} out\r\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  var len = x * x + y * y + z * z + w * w;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = x * len;\n  out[1] = y * len;\n  out[2] = z * len;\n  out[3] = w * len;\n  return out;\n}\n/**\r\n * Calculates the dot product of two vec4's\r\n *\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n}\n/**\r\n * Returns the cross-product of three vectors in a 4-dimensional space\r\n *\r\n * @param {vec4} result the receiving vector\r\n * @param {vec4} U the first vector\r\n * @param {vec4} V the second vector\r\n * @param {vec4} W the third vector\r\n * @returns {vec4} result\r\n */\n\nexport function cross(out, u, v, w) {\n  var A = v[0] * w[1] - v[1] * w[0],\n      B = v[0] * w[2] - v[2] * w[0],\n      C = v[0] * w[3] - v[3] * w[0],\n      D = v[1] * w[2] - v[2] * w[1],\n      E = v[1] * w[3] - v[3] * w[1],\n      F = v[2] * w[3] - v[3] * w[2];\n  var G = u[0];\n  var H = u[1];\n  var I = u[2];\n  var J = u[3];\n  out[0] = H * F - I * E + J * D;\n  out[1] = -(G * F) + I * C - J * B;\n  out[2] = G * E - H * C + J * A;\n  out[3] = -(G * D) + H * B - I * A;\n  return out;\n}\n;\n/**\r\n * Performs a linear interpolation between two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec4} out\r\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  var aw = a[3];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  out[3] = aw + t * (b[3] - aw);\n  return out;\n}\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec4} out\r\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0; // Marsaglia, George. Choosing a Point from the Surface of a\n  // Sphere. Ann. Math. Statist. 43 (1972), no. 2, 645--646.\n  // http://projecteuclid.org/euclid.aoms/1177692644;\n\n  var v1, v2, v3, v4;\n  var s1, s2;\n\n  do {\n    v1 = glMatrix.RANDOM() * 2 - 1;\n    v2 = glMatrix.RANDOM() * 2 - 1;\n    s1 = v1 * v1 + v2 * v2;\n  } while (s1 >= 1);\n\n  do {\n    v3 = glMatrix.RANDOM() * 2 - 1;\n    v4 = glMatrix.RANDOM() * 2 - 1;\n    s2 = v3 * v3 + v4 * v4;\n  } while (s2 >= 1);\n\n  var d = Math.sqrt((1 - s1) / s2);\n  out[0] = scale * v1;\n  out[1] = scale * v2;\n  out[2] = scale * v3 * d;\n  out[3] = scale * v4 * d;\n  return out;\n}\n/**\r\n * Transforms the vec4 with a mat4.\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the vector to transform\r\n * @param {mat4} m matrix to transform with\r\n * @returns {vec4} out\r\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n  return out;\n}\n/**\r\n * Transforms the vec4 with a quat\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the vector to transform\r\n * @param {quat} q quaternion to transform with\r\n * @returns {vec4} out\r\n */\n\nexport function transformQuat(out, a, q) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3]; // calculate quat * vec\n\n  var ix = qw * x + qy * z - qz * y;\n  var iy = qw * y + qz * x - qx * z;\n  var iz = qw * z + qx * y - qy * x;\n  var iw = -qx * x - qy * y - qz * z; // calculate result * inverse quat\n\n  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Set the components of a vec4 to zero\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @returns {vec4} out\r\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  return out;\n}\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {vec4} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nexport function str(a) {\n  return 'vec4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n}\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {vec4} a The first vector.\r\n * @param {vec4} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {vec4} a The first vector.\r\n * @param {vec4} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n}\n/**\r\n * Alias for {@link vec4.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;\n/**\r\n * Alias for {@link vec4.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link vec4.divide}\r\n * @function\r\n */\n\nexport var div = divide;\n/**\r\n * Alias for {@link vec4.distance}\r\n * @function\r\n */\n\nexport var dist = distance;\n/**\r\n * Alias for {@link vec4.squaredDistance}\r\n * @function\r\n */\n\nexport var sqrDist = squaredDistance;\n/**\r\n * Alias for {@link vec4.length}\r\n * @function\r\n */\n\nexport var len = length;\n/**\r\n * Alias for {@link vec4.squaredLength}\r\n * @function\r\n */\n\nexport var sqrLen = squaredLength;\n/**\r\n * Perform some operation over an array of vec4s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 4;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      vec[3] = a[i + 3];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n      a[i + 3] = vec[3];\n    }\n\n    return a;\n  };\n}();","import * as glMatrix from \"./common.js\";\nimport * as mat3 from \"./mat3.js\";\nimport * as vec3 from \"./vec3.js\";\nimport * as vec4 from \"./vec4.js\";\n/**\r\n * Quaternion\r\n * @module quat\r\n */\n\n/**\r\n * Creates a new identity quat\r\n *\r\n * @returns {quat} a new quaternion\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Set a quat to the identity quaternion\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @returns {quat} out\r\n */\n\nexport function identity(out) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Sets a quat from the given angle and rotation axis,\r\n * then returns it.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {vec3} axis the axis around which to rotate\r\n * @param {Number} rad the angle in radians\r\n * @returns {quat} out\r\n **/\n\nexport function setAxisAngle(out, axis, rad) {\n  rad = rad * 0.5;\n  var s = Math.sin(rad);\n  out[0] = s * axis[0];\n  out[1] = s * axis[1];\n  out[2] = s * axis[2];\n  out[3] = Math.cos(rad);\n  return out;\n}\n/**\r\n * Gets the rotation axis and angle for a given\r\n *  quaternion. If a quaternion is created with\r\n *  setAxisAngle, this method will return the same\r\n *  values as providied in the original parameter list\r\n *  OR functionally equivalent values.\r\n * Example: The quaternion formed by axis [0, 0, 1] and\r\n *  angle -90 is the same as the quaternion formed by\r\n *  [0, 0, 1] and 270. This method favors the latter.\r\n * @param  {vec3} out_axis  Vector receiving the axis of rotation\r\n * @param  {quat} q     Quaternion to be decomposed\r\n * @return {Number}     Angle, in radians, of the rotation\r\n */\n\nexport function getAxisAngle(out_axis, q) {\n  var rad = Math.acos(q[3]) * 2.0;\n  var s = Math.sin(rad / 2.0);\n\n  if (s > glMatrix.EPSILON) {\n    out_axis[0] = q[0] / s;\n    out_axis[1] = q[1] / s;\n    out_axis[2] = q[2] / s;\n  } else {\n    // If s is zero, return any axis (no rotation - axis does not matter)\n    out_axis[0] = 1;\n    out_axis[1] = 0;\n    out_axis[2] = 0;\n  }\n\n  return rad;\n}\n/**\r\n * Multiplies two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @returns {quat} out\r\n */\n\nexport function multiply(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n  out[0] = ax * bw + aw * bx + ay * bz - az * by;\n  out[1] = ay * bw + aw * by + az * bx - ax * bz;\n  out[2] = az * bw + aw * bz + ax * by - ay * bx;\n  out[3] = aw * bw - ax * bx - ay * by - az * bz;\n  return out;\n}\n/**\r\n * Rotates a quaternion by the given angle about the X axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {quat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\n\nexport function rotateX(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw + aw * bx;\n  out[1] = ay * bw + az * bx;\n  out[2] = az * bw - ay * bx;\n  out[3] = aw * bw - ax * bx;\n  return out;\n}\n/**\r\n * Rotates a quaternion by the given angle about the Y axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {quat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\n\nexport function rotateY(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var by = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw - az * by;\n  out[1] = ay * bw + aw * by;\n  out[2] = az * bw + ax * by;\n  out[3] = aw * bw - ay * by;\n  return out;\n}\n/**\r\n * Rotates a quaternion by the given angle about the Z axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {quat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\n\nexport function rotateZ(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bz = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw + ay * bz;\n  out[1] = ay * bw - ax * bz;\n  out[2] = az * bw + aw * bz;\n  out[3] = aw * bw - az * bz;\n  return out;\n}\n/**\r\n * Calculates the W component of a quat from the X, Y, and Z components.\r\n * Assumes that quaternion is 1 unit in length.\r\n * Any existing W component will be ignored.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quat to calculate W component of\r\n * @returns {quat} out\r\n */\n\nexport function calculateW(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));\n  return out;\n}\n/**\r\n * Performs a spherical linear interpolation between two quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n */\n\nexport function slerp(out, a, b, t) {\n  // benchmarks:\n  //    http://jsperf.com/quaternion-slerp-implementations\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n  var omega, cosom, sinom, scale0, scale1; // calc cosine\n\n  cosom = ax * bx + ay * by + az * bz + aw * bw; // adjust signs (if necessary)\n\n  if (cosom < 0.0) {\n    cosom = -cosom;\n    bx = -bx;\n    by = -by;\n    bz = -bz;\n    bw = -bw;\n  } // calculate coefficients\n\n\n  if (1.0 - cosom > glMatrix.EPSILON) {\n    // standard case (slerp)\n    omega = Math.acos(cosom);\n    sinom = Math.sin(omega);\n    scale0 = Math.sin((1.0 - t) * omega) / sinom;\n    scale1 = Math.sin(t * omega) / sinom;\n  } else {\n    // \"from\" and \"to\" quaternions are very close\n    //  ... so we can do a linear interpolation\n    scale0 = 1.0 - t;\n    scale1 = t;\n  } // calculate final values\n\n\n  out[0] = scale0 * ax + scale1 * bx;\n  out[1] = scale0 * ay + scale1 * by;\n  out[2] = scale0 * az + scale1 * bz;\n  out[3] = scale0 * aw + scale1 * bw;\n  return out;\n}\n/**\r\n * Generates a random quaternion\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @returns {quat} out\r\n */\n\nexport function random(out) {\n  // Implementation of http://planning.cs.uiuc.edu/node198.html\n  // TODO: Calling random 3 times is probably not the fastest solution\n  var u1 = glMatrix.RANDOM();\n  var u2 = glMatrix.RANDOM();\n  var u3 = glMatrix.RANDOM();\n  var sqrt1MinusU1 = Math.sqrt(1 - u1);\n  var sqrtU1 = Math.sqrt(u1);\n  out[0] = sqrt1MinusU1 * Math.sin(2.0 * Math.PI * u2);\n  out[1] = sqrt1MinusU1 * Math.cos(2.0 * Math.PI * u2);\n  out[2] = sqrtU1 * Math.sin(2.0 * Math.PI * u3);\n  out[3] = sqrtU1 * Math.cos(2.0 * Math.PI * u3);\n  return out;\n}\n/**\r\n * Calculates the inverse of a quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quat to calculate inverse of\r\n * @returns {quat} out\r\n */\n\nexport function invert(out, a) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\n  var invDot = dot ? 1.0 / dot : 0; // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\n\n  out[0] = -a0 * invDot;\n  out[1] = -a1 * invDot;\n  out[2] = -a2 * invDot;\n  out[3] = a3 * invDot;\n  return out;\n}\n/**\r\n * Calculates the conjugate of a quat\r\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quat to calculate conjugate of\r\n * @returns {quat} out\r\n */\n\nexport function conjugate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Creates a quaternion from the given 3x3 rotation matrix.\r\n *\r\n * NOTE: The resultant quaternion is not normalized, so you should be sure\r\n * to renormalize the quaternion yourself where necessary.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {mat3} m rotation matrix\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport function fromMat3(out, m) {\n  // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n  // article \"Quaternion Calculus and Fast Animation\".\n  var fTrace = m[0] + m[4] + m[8];\n  var fRoot;\n\n  if (fTrace > 0.0) {\n    // |w| > 1/2, may as well choose w > 1/2\n    fRoot = Math.sqrt(fTrace + 1.0); // 2w\n\n    out[3] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot; // 1/(4w)\n\n    out[0] = (m[5] - m[7]) * fRoot;\n    out[1] = (m[6] - m[2]) * fRoot;\n    out[2] = (m[1] - m[3]) * fRoot;\n  } else {\n    // |w| <= 1/2\n    var i = 0;\n    if (m[4] > m[0]) i = 1;\n    if (m[8] > m[i * 3 + i]) i = 2;\n    var j = (i + 1) % 3;\n    var k = (i + 2) % 3;\n    fRoot = Math.sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1.0);\n    out[i] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot;\n    out[3] = (m[j * 3 + k] - m[k * 3 + j]) * fRoot;\n    out[j] = (m[j * 3 + i] + m[i * 3 + j]) * fRoot;\n    out[k] = (m[k * 3 + i] + m[i * 3 + k]) * fRoot;\n  }\n\n  return out;\n}\n/**\r\n * Creates a quaternion from the given euler angle x, y, z.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {x} Angle to rotate around X axis in degrees.\r\n * @param {y} Angle to rotate around Y axis in degrees.\r\n * @param {z} Angle to rotate around Z axis in degrees.\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport function fromEuler(out, x, y, z) {\n  var halfToRad = 0.5 * Math.PI / 180.0;\n  x *= halfToRad;\n  y *= halfToRad;\n  z *= halfToRad;\n  var sx = Math.sin(x);\n  var cx = Math.cos(x);\n  var sy = Math.sin(y);\n  var cy = Math.cos(y);\n  var sz = Math.sin(z);\n  var cz = Math.cos(z);\n  out[0] = sx * cy * cz - cx * sy * sz;\n  out[1] = cx * sy * cz + sx * cy * sz;\n  out[2] = cx * cy * sz - sx * sy * cz;\n  out[3] = cx * cy * cz + sx * sy * sz;\n  return out;\n}\n/**\r\n * Returns a string representation of a quatenion\r\n *\r\n * @param {quat} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nexport function str(a) {\n  return 'quat(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n}\n/**\r\n * Creates a new quat initialized with values from an existing quaternion\r\n *\r\n * @param {quat} a quaternion to clone\r\n * @returns {quat} a new quaternion\r\n * @function\r\n */\n\nexport var clone = vec4.clone;\n/**\r\n * Creates a new quat initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {quat} a new quaternion\r\n * @function\r\n */\n\nexport var fromValues = vec4.fromValues;\n/**\r\n * Copy the values from one quat to another\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the source quaternion\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var copy = vec4.copy;\n/**\r\n * Set the components of a quat to the given values\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var set = vec4.set;\n/**\r\n * Adds two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var add = vec4.add;\n/**\r\n * Alias for {@link quat.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Scales a quat by a scalar number\r\n *\r\n * @param {quat} out the receiving vector\r\n * @param {quat} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var scale = vec4.scale;\n/**\r\n * Calculates the dot product of two quat's\r\n *\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @returns {Number} dot product of a and b\r\n * @function\r\n */\n\nexport var dot = vec4.dot;\n/**\r\n * Performs a linear interpolation between two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var lerp = vec4.lerp;\n/**\r\n * Calculates the length of a quat\r\n *\r\n * @param {quat} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nexport var length = vec4.length;\n/**\r\n * Alias for {@link quat.length}\r\n * @function\r\n */\n\nexport var len = length;\n/**\r\n * Calculates the squared length of a quat\r\n *\r\n * @param {quat} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n * @function\r\n */\n\nexport var squaredLength = vec4.squaredLength;\n/**\r\n * Alias for {@link quat.squaredLength}\r\n * @function\r\n */\n\nexport var sqrLen = squaredLength;\n/**\r\n * Normalize a quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quaternion to normalize\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var normalize = vec4.normalize;\n/**\r\n * Returns whether or not the quaternions have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {quat} a The first quaternion.\r\n * @param {quat} b The second quaternion.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport var exactEquals = vec4.exactEquals;\n/**\r\n * Returns whether or not the quaternions have approximately the same elements in the same position.\r\n *\r\n * @param {quat} a The first vector.\r\n * @param {quat} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport var equals = vec4.equals;\n/**\r\n * Sets a quaternion to represent the shortest rotation from one\r\n * vector to another.\r\n *\r\n * Both vectors are assumed to be unit length.\r\n *\r\n * @param {quat} out the receiving quaternion.\r\n * @param {vec3} a the initial vector\r\n * @param {vec3} b the destination vector\r\n * @returns {quat} out\r\n */\n\nexport var rotationTo = function () {\n  var tmpvec3 = vec3.create();\n  var xUnitVec3 = vec3.fromValues(1, 0, 0);\n  var yUnitVec3 = vec3.fromValues(0, 1, 0);\n  return function (out, a, b) {\n    var dot = vec3.dot(a, b);\n\n    if (dot < -0.999999) {\n      vec3.cross(tmpvec3, xUnitVec3, a);\n      if (vec3.len(tmpvec3) < 0.000001) vec3.cross(tmpvec3, yUnitVec3, a);\n      vec3.normalize(tmpvec3, tmpvec3);\n      setAxisAngle(out, tmpvec3, Math.PI);\n      return out;\n    } else if (dot > 0.999999) {\n      out[0] = 0;\n      out[1] = 0;\n      out[2] = 0;\n      out[3] = 1;\n      return out;\n    } else {\n      vec3.cross(tmpvec3, a, b);\n      out[0] = tmpvec3[0];\n      out[1] = tmpvec3[1];\n      out[2] = tmpvec3[2];\n      out[3] = 1 + dot;\n      return normalize(out, out);\n    }\n  };\n}();\n/**\r\n * Performs a spherical linear interpolation with two control points\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @param {quat} c the third operand\r\n * @param {quat} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n */\n\nexport var sqlerp = function () {\n  var temp1 = create();\n  var temp2 = create();\n  return function (out, a, b, c, d, t) {\n    slerp(temp1, a, d, t);\n    slerp(temp2, b, c, t);\n    slerp(out, temp1, temp2, 2 * t * (1 - t));\n    return out;\n  };\n}();\n/**\r\n * Sets the specified quaternion with values corresponding to the given\r\n * axes. Each axis is a vec3 and is expected to be unit length and\r\n * perpendicular to all other specified axes.\r\n *\r\n * @param {vec3} view  the vector representing the viewing direction\r\n * @param {vec3} right the vector representing the local \"right\" direction\r\n * @param {vec3} up    the vector representing the local \"up\" direction\r\n * @returns {quat} out\r\n */\n\nexport var setAxes = function () {\n  var matr = mat3.create();\n  return function (out, view, right, up) {\n    matr[0] = right[0];\n    matr[3] = right[1];\n    matr[6] = right[2];\n    matr[1] = up[0];\n    matr[4] = up[1];\n    matr[7] = up[2];\n    matr[2] = -view[0];\n    matr[5] = -view[1];\n    matr[8] = -view[2];\n    return normalize(out, fromMat3(out, matr));\n  };\n}();","import * as glMatrix from \"./common.js\";\nimport * as quat from \"./quat.js\";\nimport * as mat4 from \"./mat4.js\";\n/**\r\n * Dual Quaternion<br>\r\n * Format: [real, dual]<br>\r\n * Quaternion format: XYZW<br>\r\n * Make sure to have normalized dual quaternions, otherwise the functions may not work as intended.<br>\r\n * @module quat2\r\n */\n\n/**\r\n * Creates a new identity dual quat\r\n *\r\n * @returns {quat2} a new dual quaternion [real -> rotation, dual -> translation]\r\n */\n\nexport function create() {\n  var dq = new glMatrix.ARRAY_TYPE(8);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    dq[0] = 0;\n    dq[1] = 0;\n    dq[2] = 0;\n    dq[4] = 0;\n    dq[5] = 0;\n    dq[6] = 0;\n    dq[7] = 0;\n  }\n\n  dq[3] = 1;\n  return dq;\n}\n/**\r\n * Creates a new quat initialized with values from an existing quaternion\r\n *\r\n * @param {quat2} a dual quaternion to clone\r\n * @returns {quat2} new dual quaternion\r\n * @function\r\n */\n\nexport function clone(a) {\n  var dq = new glMatrix.ARRAY_TYPE(8);\n  dq[0] = a[0];\n  dq[1] = a[1];\n  dq[2] = a[2];\n  dq[3] = a[3];\n  dq[4] = a[4];\n  dq[5] = a[5];\n  dq[6] = a[6];\n  dq[7] = a[7];\n  return dq;\n}\n/**\r\n * Creates a new dual quat initialized with the given values\r\n *\r\n * @param {Number} x1 X component\r\n * @param {Number} y1 Y component\r\n * @param {Number} z1 Z component\r\n * @param {Number} w1 W component\r\n * @param {Number} x2 X component\r\n * @param {Number} y2 Y component\r\n * @param {Number} z2 Z component\r\n * @param {Number} w2 W component\r\n * @returns {quat2} new dual quaternion\r\n * @function\r\n */\n\nexport function fromValues(x1, y1, z1, w1, x2, y2, z2, w2) {\n  var dq = new glMatrix.ARRAY_TYPE(8);\n  dq[0] = x1;\n  dq[1] = y1;\n  dq[2] = z1;\n  dq[3] = w1;\n  dq[4] = x2;\n  dq[5] = y2;\n  dq[6] = z2;\n  dq[7] = w2;\n  return dq;\n}\n/**\r\n * Creates a new dual quat from the given values (quat and translation)\r\n *\r\n * @param {Number} x1 X component\r\n * @param {Number} y1 Y component\r\n * @param {Number} z1 Z component\r\n * @param {Number} w1 W component\r\n * @param {Number} x2 X component (translation)\r\n * @param {Number} y2 Y component (translation)\r\n * @param {Number} z2 Z component (translation)\r\n * @returns {quat2} new dual quaternion\r\n * @function\r\n */\n\nexport function fromRotationTranslationValues(x1, y1, z1, w1, x2, y2, z2) {\n  var dq = new glMatrix.ARRAY_TYPE(8);\n  dq[0] = x1;\n  dq[1] = y1;\n  dq[2] = z1;\n  dq[3] = w1;\n  var ax = x2 * 0.5,\n      ay = y2 * 0.5,\n      az = z2 * 0.5;\n  dq[4] = ax * w1 + ay * z1 - az * y1;\n  dq[5] = ay * w1 + az * x1 - ax * z1;\n  dq[6] = az * w1 + ax * y1 - ay * x1;\n  dq[7] = -ax * x1 - ay * y1 - az * z1;\n  return dq;\n}\n/**\r\n * Creates a dual quat from a quaternion and a translation\r\n *\r\n * @param {quat2} dual quaternion receiving operation result\r\n * @param {quat} q quaternion\r\n * @param {vec3} t tranlation vector\r\n * @returns {quat2} dual quaternion receiving operation result\r\n * @function\r\n */\n\nexport function fromRotationTranslation(out, q, t) {\n  var ax = t[0] * 0.5,\n      ay = t[1] * 0.5,\n      az = t[2] * 0.5,\n      bx = q[0],\n      by = q[1],\n      bz = q[2],\n      bw = q[3];\n  out[0] = bx;\n  out[1] = by;\n  out[2] = bz;\n  out[3] = bw;\n  out[4] = ax * bw + ay * bz - az * by;\n  out[5] = ay * bw + az * bx - ax * bz;\n  out[6] = az * bw + ax * by - ay * bx;\n  out[7] = -ax * bx - ay * by - az * bz;\n  return out;\n}\n/**\r\n * Creates a dual quat from a translation\r\n *\r\n * @param {quat2} dual quaternion receiving operation result\r\n * @param {vec3} t translation vector\r\n * @returns {quat2} dual quaternion receiving operation result\r\n * @function\r\n */\n\nexport function fromTranslation(out, t) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = t[0] * 0.5;\n  out[5] = t[1] * 0.5;\n  out[6] = t[2] * 0.5;\n  out[7] = 0;\n  return out;\n}\n/**\r\n * Creates a dual quat from a quaternion\r\n *\r\n * @param {quat2} dual quaternion receiving operation result\r\n * @param {quat} q the quaternion\r\n * @returns {quat2} dual quaternion receiving operation result\r\n * @function\r\n */\n\nexport function fromRotation(out, q) {\n  out[0] = q[0];\n  out[1] = q[1];\n  out[2] = q[2];\n  out[3] = q[3];\n  out[4] = 0;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  return out;\n}\n/**\r\n * Creates a new dual quat from a matrix (4x4)\r\n *\r\n * @param {quat2} out the dual quaternion\r\n * @param {mat4} a the matrix\r\n * @returns {quat2} dual quat receiving operation result\r\n * @function\r\n */\n\nexport function fromMat4(out, a) {\n  //TODO Optimize this\n  var outer = quat.create();\n  mat4.getRotation(outer, a);\n  var t = new glMatrix.ARRAY_TYPE(3);\n  mat4.getTranslation(t, a);\n  fromRotationTranslation(out, outer, t);\n  return out;\n}\n/**\r\n * Copy the values from one dual quat to another\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the source dual quaternion\r\n * @returns {quat2} out\r\n * @function\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  return out;\n}\n/**\r\n * Set a dual quat to the identity dual quaternion\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @returns {quat2} out\r\n */\n\nexport function identity(out) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  return out;\n}\n/**\r\n * Set the components of a dual quat to the given values\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {Number} x1 X component\r\n * @param {Number} y1 Y component\r\n * @param {Number} z1 Z component\r\n * @param {Number} w1 W component\r\n * @param {Number} x2 X component\r\n * @param {Number} y2 Y component\r\n * @param {Number} z2 Z component\r\n * @param {Number} w2 W component\r\n * @returns {quat2} out\r\n * @function\r\n */\n\nexport function set(out, x1, y1, z1, w1, x2, y2, z2, w2) {\n  out[0] = x1;\n  out[1] = y1;\n  out[2] = z1;\n  out[3] = w1;\n  out[4] = x2;\n  out[5] = y2;\n  out[6] = z2;\n  out[7] = w2;\n  return out;\n}\n/**\r\n * Gets the real part of a dual quat\r\n * @param  {quat} out real part\r\n * @param  {quat2} a Dual Quaternion\r\n * @return {quat} real part\r\n */\n\nexport var getReal = quat.copy;\n/**\r\n * Gets the dual part of a dual quat\r\n * @param  {quat} out dual part\r\n * @param  {quat2} a Dual Quaternion\r\n * @return {quat} dual part\r\n */\n\nexport function getDual(out, a) {\n  out[0] = a[4];\n  out[1] = a[5];\n  out[2] = a[6];\n  out[3] = a[7];\n  return out;\n}\n/**\r\n * Set the real component of a dual quat to the given quaternion\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {quat} q a quaternion representing the real part\r\n * @returns {quat2} out\r\n * @function\r\n */\n\nexport var setReal = quat.copy;\n/**\r\n * Set the dual component of a dual quat to the given quaternion\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {quat} q a quaternion representing the dual part\r\n * @returns {quat2} out\r\n * @function\r\n */\n\nexport function setDual(out, q) {\n  out[4] = q[0];\n  out[5] = q[1];\n  out[6] = q[2];\n  out[7] = q[3];\n  return out;\n}\n/**\r\n * Gets the translation of a normalized dual quat\r\n * @param  {vec3} out translation\r\n * @param  {quat2} a Dual Quaternion to be decomposed\r\n * @return {vec3} translation\r\n */\n\nexport function getTranslation(out, a) {\n  var ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3];\n  out[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n  out[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n  out[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  return out;\n}\n/**\r\n * Translates a dual quat by the given vector\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to translate\r\n * @param {vec3} v vector to translate by\r\n * @returns {quat2} out\r\n */\n\nexport function translate(out, a, v) {\n  var ax1 = a[0],\n      ay1 = a[1],\n      az1 = a[2],\n      aw1 = a[3],\n      bx1 = v[0] * 0.5,\n      by1 = v[1] * 0.5,\n      bz1 = v[2] * 0.5,\n      ax2 = a[4],\n      ay2 = a[5],\n      az2 = a[6],\n      aw2 = a[7];\n  out[0] = ax1;\n  out[1] = ay1;\n  out[2] = az1;\n  out[3] = aw1;\n  out[4] = aw1 * bx1 + ay1 * bz1 - az1 * by1 + ax2;\n  out[5] = aw1 * by1 + az1 * bx1 - ax1 * bz1 + ay2;\n  out[6] = aw1 * bz1 + ax1 * by1 - ay1 * bx1 + az2;\n  out[7] = -ax1 * bx1 - ay1 * by1 - az1 * bz1 + aw2;\n  return out;\n}\n/**\r\n * Rotates a dual quat around the X axis\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @param {number} rad how far should the rotation be\r\n * @returns {quat2} out\r\n */\n\nexport function rotateX(out, a, rad) {\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\n  quat.rotateX(out, a, rad);\n  bx = out[0];\n  by = out[1];\n  bz = out[2];\n  bw = out[3];\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  return out;\n}\n/**\r\n * Rotates a dual quat around the Y axis\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @param {number} rad how far should the rotation be\r\n * @returns {quat2} out\r\n */\n\nexport function rotateY(out, a, rad) {\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\n  quat.rotateY(out, a, rad);\n  bx = out[0];\n  by = out[1];\n  bz = out[2];\n  bw = out[3];\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  return out;\n}\n/**\r\n * Rotates a dual quat around the Z axis\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @param {number} rad how far should the rotation be\r\n * @returns {quat2} out\r\n */\n\nexport function rotateZ(out, a, rad) {\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\n  quat.rotateZ(out, a, rad);\n  bx = out[0];\n  by = out[1];\n  bz = out[2];\n  bw = out[3];\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  return out;\n}\n/**\r\n * Rotates a dual quat by a given quaternion (a * q)\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @param {quat} q quaternion to rotate by\r\n * @returns {quat2} out\r\n */\n\nexport function rotateByQuatAppend(out, a, q) {\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3],\n      ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  out[0] = ax * qw + aw * qx + ay * qz - az * qy;\n  out[1] = ay * qw + aw * qy + az * qx - ax * qz;\n  out[2] = az * qw + aw * qz + ax * qy - ay * qx;\n  out[3] = aw * qw - ax * qx - ay * qy - az * qz;\n  ax = a[4];\n  ay = a[5];\n  az = a[6];\n  aw = a[7];\n  out[4] = ax * qw + aw * qx + ay * qz - az * qy;\n  out[5] = ay * qw + aw * qy + az * qx - ax * qz;\n  out[6] = az * qw + aw * qz + ax * qy - ay * qx;\n  out[7] = aw * qw - ax * qx - ay * qy - az * qz;\n  return out;\n}\n/**\r\n * Rotates a dual quat by a given quaternion (q * a)\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat} q quaternion to rotate by\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @returns {quat2} out\r\n */\n\nexport function rotateByQuatPrepend(out, q, a) {\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3],\n      bx = a[0],\n      by = a[1],\n      bz = a[2],\n      bw = a[3];\n  out[0] = qx * bw + qw * bx + qy * bz - qz * by;\n  out[1] = qy * bw + qw * by + qz * bx - qx * bz;\n  out[2] = qz * bw + qw * bz + qx * by - qy * bx;\n  out[3] = qw * bw - qx * bx - qy * by - qz * bz;\n  bx = a[4];\n  by = a[5];\n  bz = a[6];\n  bw = a[7];\n  out[4] = qx * bw + qw * bx + qy * bz - qz * by;\n  out[5] = qy * bw + qw * by + qz * bx - qx * bz;\n  out[6] = qz * bw + qw * bz + qx * by - qy * bx;\n  out[7] = qw * bw - qx * bx - qy * by - qz * bz;\n  return out;\n}\n/**\r\n * Rotates a dual quat around a given axis. Does the normalisation automatically\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @param {vec3} axis the axis to rotate around\r\n * @param {Number} rad how far the rotation should be\r\n * @returns {quat2} out\r\n */\n\nexport function rotateAroundAxis(out, a, axis, rad) {\n  //Special case for rad = 0\n  if (Math.abs(rad) < glMatrix.EPSILON) {\n    return copy(out, a);\n  }\n\n  var axisLength = Math.sqrt(axis[0] * axis[0] + axis[1] * axis[1] + axis[2] * axis[2]);\n  rad = rad * 0.5;\n  var s = Math.sin(rad);\n  var bx = s * axis[0] / axisLength;\n  var by = s * axis[1] / axisLength;\n  var bz = s * axis[2] / axisLength;\n  var bw = Math.cos(rad);\n  var ax1 = a[0],\n      ay1 = a[1],\n      az1 = a[2],\n      aw1 = a[3];\n  out[0] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[1] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[2] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[3] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  var ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  out[4] = ax * bw + aw * bx + ay * bz - az * by;\n  out[5] = ay * bw + aw * by + az * bx - ax * bz;\n  out[6] = az * bw + aw * bz + ax * by - ay * bx;\n  out[7] = aw * bw - ax * bx - ay * by - az * bz;\n  return out;\n}\n/**\r\n * Adds two dual quat's\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the first operand\r\n * @param {quat2} b the second operand\r\n * @returns {quat2} out\r\n * @function\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  return out;\n}\n/**\r\n * Multiplies two dual quat's\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the first operand\r\n * @param {quat2} b the second operand\r\n * @returns {quat2} out\r\n */\n\nexport function multiply(out, a, b) {\n  var ax0 = a[0],\n      ay0 = a[1],\n      az0 = a[2],\n      aw0 = a[3],\n      bx1 = b[4],\n      by1 = b[5],\n      bz1 = b[6],\n      bw1 = b[7],\n      ax1 = a[4],\n      ay1 = a[5],\n      az1 = a[6],\n      aw1 = a[7],\n      bx0 = b[0],\n      by0 = b[1],\n      bz0 = b[2],\n      bw0 = b[3];\n  out[0] = ax0 * bw0 + aw0 * bx0 + ay0 * bz0 - az0 * by0;\n  out[1] = ay0 * bw0 + aw0 * by0 + az0 * bx0 - ax0 * bz0;\n  out[2] = az0 * bw0 + aw0 * bz0 + ax0 * by0 - ay0 * bx0;\n  out[3] = aw0 * bw0 - ax0 * bx0 - ay0 * by0 - az0 * bz0;\n  out[4] = ax0 * bw1 + aw0 * bx1 + ay0 * bz1 - az0 * by1 + ax1 * bw0 + aw1 * bx0 + ay1 * bz0 - az1 * by0;\n  out[5] = ay0 * bw1 + aw0 * by1 + az0 * bx1 - ax0 * bz1 + ay1 * bw0 + aw1 * by0 + az1 * bx0 - ax1 * bz0;\n  out[6] = az0 * bw1 + aw0 * bz1 + ax0 * by1 - ay0 * bx1 + az1 * bw0 + aw1 * bz0 + ax1 * by0 - ay1 * bx0;\n  out[7] = aw0 * bw1 - ax0 * bx1 - ay0 * by1 - az0 * bz1 + aw1 * bw0 - ax1 * bx0 - ay1 * by0 - az1 * bz0;\n  return out;\n}\n/**\r\n * Alias for {@link quat2.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Scales a dual quat by a scalar number\r\n *\r\n * @param {quat2} out the receiving dual quat\r\n * @param {quat2} a the dual quat to scale\r\n * @param {Number} b amount to scale the dual quat by\r\n * @returns {quat2} out\r\n * @function\r\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  return out;\n}\n/**\r\n * Calculates the dot product of two dual quat's (The dot product of the real parts)\r\n *\r\n * @param {quat2} a the first operand\r\n * @param {quat2} b the second operand\r\n * @returns {Number} dot product of a and b\r\n * @function\r\n */\n\nexport var dot = quat.dot;\n/**\r\n * Performs a linear interpolation between two dual quats's\r\n * NOTE: The resulting dual quaternions won't always be normalized (The error is most noticeable when t = 0.5)\r\n *\r\n * @param {quat2} out the receiving dual quat\r\n * @param {quat2} a the first operand\r\n * @param {quat2} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat2} out\r\n */\n\nexport function lerp(out, a, b, t) {\n  var mt = 1 - t;\n  if (dot(a, b) < 0) t = -t;\n  out[0] = a[0] * mt + b[0] * t;\n  out[1] = a[1] * mt + b[1] * t;\n  out[2] = a[2] * mt + b[2] * t;\n  out[3] = a[3] * mt + b[3] * t;\n  out[4] = a[4] * mt + b[4] * t;\n  out[5] = a[5] * mt + b[5] * t;\n  out[6] = a[6] * mt + b[6] * t;\n  out[7] = a[7] * mt + b[7] * t;\n  return out;\n}\n/**\r\n * Calculates the inverse of a dual quat. If they are normalized, conjugate is cheaper\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a dual quat to calculate inverse of\r\n * @returns {quat2} out\r\n */\n\nexport function invert(out, a) {\n  var sqlen = squaredLength(a);\n  out[0] = -a[0] / sqlen;\n  out[1] = -a[1] / sqlen;\n  out[2] = -a[2] / sqlen;\n  out[3] = a[3] / sqlen;\n  out[4] = -a[4] / sqlen;\n  out[5] = -a[5] / sqlen;\n  out[6] = -a[6] / sqlen;\n  out[7] = a[7] / sqlen;\n  return out;\n}\n/**\r\n * Calculates the conjugate of a dual quat\r\n * If the dual quaternion is normalized, this function is faster than quat2.inverse and produces the same result.\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {quat2} a quat to calculate conjugate of\r\n * @returns {quat2} out\r\n */\n\nexport function conjugate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a[3];\n  out[4] = -a[4];\n  out[5] = -a[5];\n  out[6] = -a[6];\n  out[7] = a[7];\n  return out;\n}\n/**\r\n * Calculates the length of a dual quat\r\n *\r\n * @param {quat2} a dual quat to calculate length of\r\n * @returns {Number} length of a\r\n * @function\r\n */\n\nexport var length = quat.length;\n/**\r\n * Alias for {@link quat2.length}\r\n * @function\r\n */\n\nexport var len = length;\n/**\r\n * Calculates the squared length of a dual quat\r\n *\r\n * @param {quat2} a dual quat to calculate squared length of\r\n * @returns {Number} squared length of a\r\n * @function\r\n */\n\nexport var squaredLength = quat.squaredLength;\n/**\r\n * Alias for {@link quat2.squaredLength}\r\n * @function\r\n */\n\nexport var sqrLen = squaredLength;\n/**\r\n * Normalize a dual quat\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a dual quaternion to normalize\r\n * @returns {quat2} out\r\n * @function\r\n */\n\nexport function normalize(out, a) {\n  var magnitude = squaredLength(a);\n\n  if (magnitude > 0) {\n    magnitude = Math.sqrt(magnitude);\n    var a0 = a[0] / magnitude;\n    var a1 = a[1] / magnitude;\n    var a2 = a[2] / magnitude;\n    var a3 = a[3] / magnitude;\n    var b0 = a[4];\n    var b1 = a[5];\n    var b2 = a[6];\n    var b3 = a[7];\n    var a_dot_b = a0 * b0 + a1 * b1 + a2 * b2 + a3 * b3;\n    out[0] = a0;\n    out[1] = a1;\n    out[2] = a2;\n    out[3] = a3;\n    out[4] = (b0 - a0 * a_dot_b) / magnitude;\n    out[5] = (b1 - a1 * a_dot_b) / magnitude;\n    out[6] = (b2 - a2 * a_dot_b) / magnitude;\n    out[7] = (b3 - a3 * a_dot_b) / magnitude;\n  }\n\n  return out;\n}\n/**\r\n * Returns a string representation of a dual quatenion\r\n *\r\n * @param {quat2} a dual quaternion to represent as a string\r\n * @returns {String} string representation of the dual quat\r\n */\n\nexport function str(a) {\n  return 'quat2(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ')';\n}\n/**\r\n * Returns whether or not the dual quaternions have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {quat2} a the first dual quaternion.\r\n * @param {quat2} b the second dual quaternion.\r\n * @returns {Boolean} true if the dual quaternions are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7];\n}\n/**\r\n * Returns whether or not the dual quaternions have approximately the same elements in the same position.\r\n *\r\n * @param {quat2} a the first dual quat.\r\n * @param {quat2} b the second dual quat.\r\n * @returns {Boolean} true if the dual quats are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7));\n}","import * as glMatrix from \"./common.js\";\n/**\r\n * 2 Dimensional Vector\r\n * @module vec2\r\n */\n\n/**\r\n * Creates a new, empty vec2\r\n *\r\n * @returns {vec2} a new 2D vector\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(2);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n  }\n\n  return out;\n}\n/**\r\n * Creates a new vec2 initialized with values from an existing vector\r\n *\r\n * @param {vec2} a vector to clone\r\n * @returns {vec2} a new 2D vector\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\r\n * Creates a new vec2 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @returns {vec2} a new 2D vector\r\n */\n\nexport function fromValues(x, y) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\r\n * Copy the values from one vec2 to another\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the source vector\r\n * @returns {vec2} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\r\n * Set the components of a vec2 to the given values\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @returns {vec2} out\r\n */\n\nexport function set(out, x, y) {\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\r\n * Adds two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  return out;\n}\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  return out;\n}\n/**\r\n * Multiplies two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  return out;\n}\n/**\r\n * Divides two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  return out;\n}\n/**\r\n * Math.ceil the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to ceil\r\n * @returns {vec2} out\r\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  return out;\n}\n/**\r\n * Math.floor the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to floor\r\n * @returns {vec2} out\r\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  return out;\n}\n/**\r\n * Returns the minimum of two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  return out;\n}\n/**\r\n * Returns the maximum of two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  return out;\n}\n/**\r\n * Math.round the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to round\r\n * @returns {vec2} out\r\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  return out;\n}\n/**\r\n * Scales a vec2 by a scalar number\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec2} out\r\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  return out;\n}\n/**\r\n * Adds two vec2's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec2} out\r\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  return out;\n}\n/**\r\n * Calculates the euclidian distance between two vec2's\r\n *\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return Math.sqrt(x * x + y * y);\n}\n/**\r\n * Calculates the squared euclidian distance between two vec2's\r\n *\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return x * x + y * y;\n}\n/**\r\n * Calculates the length of a vec2\r\n *\r\n * @param {vec2} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nexport function length(a) {\n  var x = a[0],\n      y = a[1];\n  return Math.sqrt(x * x + y * y);\n}\n/**\r\n * Calculates the squared length of a vec2\r\n *\r\n * @param {vec2} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\n\nexport function squaredLength(a) {\n  var x = a[0],\n      y = a[1];\n  return x * x + y * y;\n}\n/**\r\n * Negates the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to negate\r\n * @returns {vec2} out\r\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  return out;\n}\n/**\r\n * Returns the inverse of the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to invert\r\n * @returns {vec2} out\r\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  return out;\n}\n/**\r\n * Normalize a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to normalize\r\n * @returns {vec2} out\r\n */\n\nexport function normalize(out, a) {\n  var x = a[0],\n      y = a[1];\n  var len = x * x + y * y;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  return out;\n}\n/**\r\n * Calculates the dot product of two vec2's\r\n *\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1];\n}\n/**\r\n * Computes the cross product of two vec2's\r\n * Note that the cross product must by definition produce a 3D vector\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function cross(out, a, b) {\n  var z = a[0] * b[1] - a[1] * b[0];\n  out[0] = out[1] = 0;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Performs a linear interpolation between two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec2} out\r\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0],\n      ay = a[1];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  return out;\n}\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec2} out\r\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  out[0] = Math.cos(r) * scale;\n  out[1] = Math.sin(r) * scale;\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to transform\r\n * @param {mat2} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\nexport function transformMat2(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y;\n  out[1] = m[1] * x + m[3] * y;\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat2d\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to transform\r\n * @param {mat2d} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\nexport function transformMat2d(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat3\r\n * 3rd vector component is implicitly '1'\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to transform\r\n * @param {mat3} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[3] * y + m[6];\n  out[1] = m[1] * x + m[4] * y + m[7];\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat4\r\n * 3rd vector component is implicitly '0'\r\n * 4th vector component is implicitly '1'\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to transform\r\n * @param {mat4} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0];\n  var y = a[1];\n  out[0] = m[0] * x + m[4] * y + m[12];\n  out[1] = m[1] * x + m[5] * y + m[13];\n  return out;\n}\n/**\r\n * Rotate a 2D vector\r\n * @param {vec2} out The receiving vec2\r\n * @param {vec2} a The vec2 point to rotate\r\n * @param {vec2} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec2} out\r\n */\n\nexport function rotate(out, a, b, c) {\n  //Translate point to the origin\n  var p0 = a[0] - b[0],\n      p1 = a[1] - b[1],\n      sinC = Math.sin(c),\n      cosC = Math.cos(c); //perform rotation and translate to correct position\n\n  out[0] = p0 * cosC - p1 * sinC + b[0];\n  out[1] = p0 * sinC + p1 * cosC + b[1];\n  return out;\n}\n/**\r\n * Get the angle between two 2D vectors\r\n * @param {vec2} a The first operand\r\n * @param {vec2} b The second operand\r\n * @returns {Number} The angle in radians\r\n */\n\nexport function angle(a, b) {\n  var x1 = a[0],\n      y1 = a[1],\n      x2 = b[0],\n      y2 = b[1];\n  var len1 = x1 * x1 + y1 * y1;\n\n  if (len1 > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len1 = 1 / Math.sqrt(len1);\n  }\n\n  var len2 = x2 * x2 + y2 * y2;\n\n  if (len2 > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len2 = 1 / Math.sqrt(len2);\n  }\n\n  var cosine = (x1 * x2 + y1 * y2) * len1 * len2;\n\n  if (cosine > 1.0) {\n    return 0;\n  } else if (cosine < -1.0) {\n    return Math.PI;\n  } else {\n    return Math.acos(cosine);\n  }\n}\n/**\r\n * Set the components of a vec2 to zero\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @returns {vec2} out\r\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  return out;\n}\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {vec2} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nexport function str(a) {\n  return 'vec2(' + a[0] + ', ' + a[1] + ')';\n}\n/**\r\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\r\n *\r\n * @param {vec2} a The first vector.\r\n * @param {vec2} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1];\n}\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {vec2} a The first vector.\r\n * @param {vec2} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1];\n  var b0 = b[0],\n      b1 = b[1];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1));\n}\n/**\r\n * Alias for {@link vec2.length}\r\n * @function\r\n */\n\nexport var len = length;\n/**\r\n * Alias for {@link vec2.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;\n/**\r\n * Alias for {@link vec2.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link vec2.divide}\r\n * @function\r\n */\n\nexport var div = divide;\n/**\r\n * Alias for {@link vec2.distance}\r\n * @function\r\n */\n\nexport var dist = distance;\n/**\r\n * Alias for {@link vec2.squaredDistance}\r\n * @function\r\n */\n\nexport var sqrDist = squaredDistance;\n/**\r\n * Alias for {@link vec2.squaredLength}\r\n * @function\r\n */\n\nexport var sqrLen = squaredLength;\n/**\r\n * Perform some operation over an array of vec2s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 2;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n    }\n\n    return a;\n  };\n}();","import * as glMatrix from \"./common.js\";\nimport * as mat2 from \"./mat2.js\";\nimport * as mat2d from \"./mat2d.js\";\nimport * as mat3 from \"./mat3.js\";\nimport * as mat4 from \"./mat4.js\";\nimport * as quat from \"./quat.js\";\nimport * as quat2 from \"./quat2.js\";\nimport * as vec2 from \"./vec2.js\";\nimport * as vec3 from \"./vec3.js\";\nimport * as vec4 from \"./vec4.js\";\nexport { glMatrix, mat2, mat2d, mat3, mat4, quat, quat2, vec2, vec3, vec4 };","export type Grid<T> = {\r\n    readonly width: number;\r\n    readonly height: number;\r\n    at(x: number, y: number): T;\r\n};\r\n\r\nexport type GridCallback<T> = (x: number, y: number, val: T) => void;\r\nexport type GridMapper<T,U> = (x: number, y: number, val: T) => U;\r\n\r\nexport class WriteGrid<T> implements Grid<T> {\r\n    public readonly width: number;\r\n    public readonly height: number;\r\n\r\n    private vals: T[];\r\n\r\n    constructor(width: number, height: number) {\r\n        this.width = width;\r\n        this.height = height;\r\n        this.vals = new Array(width * height);\r\n    }\r\n\r\n    write(x: number, y: number, val: T): void {\r\n        this.vals[x + y*this.width] = val;\r\n    }\r\n\r\n    at(x: number, y: number): T {\r\n        return this.vals[x + y*this.width];\r\n    }\r\n\r\n    copyFrom(grid: Grid<T>): void {\r\n        for (let x = 0; x < this.width && x < grid.width; ++x) {\r\n            for (let y = 0; y < this.height && y < grid.height; ++y) {\r\n                this.write(x, y, grid.at(x, y));\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport const safeOutOfBounds = <T>(grid: Grid<T>, oobValue: T): Grid<T> => ({\r\n    width: grid.width,\r\n    height: grid.height,\r\n    at: (x, y) => x < 0 || y < 0 || x >= grid.width || y >= grid.width ? oobValue : grid.at(x, y)\r\n});\r\n\r\nexport const Grid = {\r\n    find: <T>(grid: Grid<T>, test: GridMapper<T, boolean>): { x: number, y: number } | null => {\r\n        for (let x = 0; x < grid.width; ++x) {\r\n            for (let y = 0; y < grid.height; ++y) {\r\n                if (test(x, y, grid.at(x, y))) {\r\n                    return { x, y };\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    },\r\n\r\n    forEach: <T>(grid: Grid<T>, fn: GridCallback<T>): void => {\r\n        for (let x = 0; x < grid.width; ++x) {\r\n            for (let y = 0; y < grid.height; ++y) {\r\n                fn(x, y, grid.at(x, y));\r\n            }\r\n        }\r\n    },\r\n\r\n    map: <T, U>(grid: Grid<T>, fn: GridMapper<T, U>): WriteGrid<U> => {\r\n        const result = new WriteGrid<U>(grid.width, grid.height);\r\n\r\n        for (let x = 0; x < grid.width; ++x) {\r\n            for (let y = 0; y < grid.height; ++y) {\r\n                result.write(x, y, fn(x, y, grid.at(x, y)));\r\n            }\r\n        }\r\n\r\n        return result;\r\n    },\r\n};","//foreach_shader import * as $ from './$.glsl';\nimport * as bufferCopy from './bufferCopy.glsl';//_generated\nimport * as cave from './cave.glsl';//_generated\nimport * as caveDemo from './caveDemo.glsl';//_generated\nimport * as flatWhite from './flatWhite.glsl';//_generated\nimport * as gaussianBlur from './gaussianBlur.glsl';//_generated\nimport * as normals from './normals.glsl';//_generated\nimport * as ship from './ship.glsl';//_generated\n\ntype ShaderCollection = {\n    //foreach_shader readonly $: WebGLShader,\n    readonly bufferCopy: WebGLShader,//_generated\n    readonly cave: WebGLShader,//_generated\n    readonly caveDemo: WebGLShader,//_generated\n    readonly flatWhite: WebGLShader,//_generated\n    readonly gaussianBlur: WebGLShader,//_generated\n    readonly normals: WebGLShader,//_generated\n    readonly ship: WebGLShader,//_generated\n};\n\nconst buildCollection = (gl: WebGLRenderingContext): ShaderCollection => ({\n    //foreach_shader $: compileShader(gl, '$', $),\n    bufferCopy: compileShader(gl, 'bufferCopy', bufferCopy),//_generated\n    cave: compileShader(gl, 'cave', cave),//_generated\n    caveDemo: compileShader(gl, 'caveDemo', caveDemo),//_generated\n    flatWhite: compileShader(gl, 'flatWhite', flatWhite),//_generated\n    gaussianBlur: compileShader(gl, 'gaussianBlur', gaussianBlur),//_generated\n    normals: compileShader(gl, 'normals', normals),//_generated\n    ship: compileShader(gl, 'ship', ship),//_generated\n});\n\nconst compiledShaders: { [canvasId: string]: ShaderCollection } = {};\n\nexport const getShaders = (gl: WebGLRenderingContext): ShaderCollection => {\n    if (! (gl.canvas.id in compiledShaders)) {\n        compiledShaders[gl.canvas.id] = buildCollection(gl);\n    }\n\n    return compiledShaders[gl.canvas.id];\n};\n\nconst errorHTML = (kind: 'vertex' | 'fragment', name: string, log: string): string => `\n    <h1>Error in ${kind} shader in \"${name}.glsl\"</h1>\n    <code>${log.replace(/\\n/g, '<br/>')}</code>\n`;\n\nconst compileShader = (gl: WebGLRenderingContext, name: string, body: string): WebGLProgram => {\n    const vertShader = gl.createShader(gl.VERTEX_SHADER) as WebGLShader;\n    gl.shaderSource(vertShader, '#define VERTEX\\n' + body + '\\n');\n    gl.compileShader(vertShader);\n\n    const vertLog = gl.getShaderInfoLog(vertShader);\n    if (vertLog === null || vertLog.length > 0) {\n        document.body.innerHTML = errorHTML('vertex', name, vertLog as string);\n        throw new Error('Error compiling shader: ' + name);\n    }\n\n    const fragShader = gl.createShader(gl.FRAGMENT_SHADER) as WebGLShader;\n    gl.shaderSource(fragShader, '#define FRAGMENT\\n' + body + '\\n');\n    gl.compileShader(fragShader);\n\n    const fragLog = gl.getShaderInfoLog(fragShader);\n    if (fragLog === null || fragLog.length > 0) {\n        document.body.innerHTML = errorHTML('fragment', name, fragLog as string);\n        throw new Error('Error compiling shader: ' + name);\n    }\n\n    const prog = gl.createProgram() as WebGLProgram;\n    gl.attachShader(prog, vertShader);\n    gl.attachShader(prog, fragShader);\n    gl.linkProgram(prog);\n\n    return prog;\n};\n","import { Transform } from \"./transform\";\r\nimport { mat4, vec2, vec3, vec4 } from \"gl-matrix\";\r\nimport { Const, unconst } from \"utils/lang\";\r\n\r\nconst m4x = mat4.create();\r\nconst v4x = vec4.create();\r\nconst v3x = vec3.create();\r\nconst v3y = vec3.create();\r\nconst v3z = vec3.create();\r\n\r\nexport type Camera = {\r\n    transform: Transform,\r\n    aspectRatio: number,\r\n    fov: number,\r\n    near: number,\r\n    far: number,\r\n};\r\n\r\nexport const Camera = {\r\n    create: (): Camera => ({\r\n        transform: Transform.create(),\r\n        aspectRatio: 1,\r\n        fov: Math.PI / 2,\r\n        near: 0.01,\r\n        far: 100,\r\n    }),\r\n\r\n    getViewMatrix: (self: Const<Camera>, out: mat4): mat4 => {\r\n        Transform.toMatrix(self.transform, out);\r\n        return mat4.invert(out, out) as mat4;\r\n    },\r\n\r\n    getProjectionMatrix: (self: Const<Camera>, out: mat4): mat4 => {\r\n        return mat4.perspective(out, self.fov, self.aspectRatio, self.near, self.far);\r\n    },\r\n\r\n    updateAspectRatio: (self: Camera, screenWidth: number, screenHeight: number) => {\r\n        self.aspectRatio = screenWidth / screenHeight;\r\n    },\r\n\r\n    screenPointToWorldXYPlanePoint: (self: Const<Camera>, screenPoint: vec2, out: vec3): vec3 => {\r\n        vec4.set(v4x, 2 * screenPoint[0] - 1, 2 * screenPoint[1] - 1, -1, 1);\r\n\r\n        // v4x <- ray in view space \r\n        Camera.getProjectionMatrix(self, m4x);\r\n        mat4.invert(m4x, m4x);\r\n        vec4.transformMat4(v4x, v4x, m4x);\r\n        v4x[2] = -1;\r\n        v4x[3] =  0;\r\n\r\n        // v3x <- mouse ray in world space\r\n        Transform.toMatrix(self.transform, m4x);\r\n        vec4.transformMat4(v4x, v4x, m4x);\r\n        vec3.set(v3x, v4x[0], v4x[1], v4x[2]);\r\n\r\n        // v3y <- target plane normal\r\n        // v3z <- target plane intersect point\r\n        vec3.set(v3y, 0, 0, -1);\r\n        vec3.set(v3z, 0, 0,  0);\r\n\r\n        const t = (vec3.dot(v3y, v3z) - vec3.dot(v3y, unconst(self.transform.position))) / vec3.dot(v3y, v3x);\r\n        return vec3.scaleAndAdd(out, unconst(self.transform.position), v3x, t);\r\n    }\r\n};\r\n","import { DeepReadonly } from \"ts-essentials\";\r\n\r\nexport type Const<T> = DeepReadonly<T>;\r\nexport const unconst = <T>(x: Const<T>): T => x as T;\r\n","export type PacketWithSender<T> = {\r\n    senderId: string,\r\n    packet: T,\r\n};\r\n\r\nexport type NetConnection<Send, Receive> = {\r\n    readonly id: string,\r\n    countAvailablePackets(): number,\r\n    receivePacket(): PacketWithSender<Receive> | null,\r\n    receiveAllPackets(): PacketWithSender<Receive>[],\r\n    sendPacket(packet: Send): void,\r\n};\r\n\r\nexport type SerDe<T> = {\r\n    serialize(x: T): string,\r\n    deserialize(x: string): T,\r\n};\r\n\r\nexport const createSimpleSerializer = <T>(): SerDe<T> => ({\r\n    serialize: x => JSON.stringify(x),\r\n    deserialize: x => JSON.parse(x),\r\n});\r\n\r\nexport const TICK_LENGTH_MS = 33;\r\n\r\nexport class LocalNetwork<ToClient, ToServer> {\r\n    private readonly toClientSerDe: SerDe<ToClient>;\r\n    private readonly toServerSerDe: SerDe<ToServer>;\r\n\r\n    private readonly toServerQueue:  PacketWithSender<ToServer>[];\r\n    private readonly toClientQueues: {[clientId: string]: PacketWithSender<ToClient>[]};\r\n\r\n    readonly server: NetConnection<ToClient, ToServer>;\r\n    private readonly clients: {[clientId: string]: NetConnection<ToServer, ToClient>};\r\n\r\n    latency: number;\r\n\r\n    constructor(toClientSerDe: SerDe<ToClient>, toServerSerDe: SerDe<ToServer>) {\r\n        this.toClientSerDe = toClientSerDe;\r\n        this.toServerSerDe = toServerSerDe;\r\n\r\n        this.toServerQueue  = [];\r\n        this.toClientQueues = {};\r\n\r\n        this.clients = {};\r\n        this.latency = 100;\r\n\r\n        this.server = {\r\n            id: 'server',\r\n\r\n            countAvailablePackets: (): number => this.toServerQueue.length,\r\n\r\n            receiveAllPackets: (): PacketWithSender<ToServer>[] => {\r\n                const result = this.toServerQueue.slice();\r\n                this.toServerQueue.length = 0;\r\n                return result;\r\n            },\r\n\r\n            receivePacket: (): PacketWithSender<ToServer> | null => {\r\n                if (this.toServerQueue.length < 1) return null;\r\n\r\n                const result = this.toServerQueue[0];\r\n                this.toServerQueue.splice(0, 1);\r\n                return result;\r\n            },\r\n\r\n            sendPacket: (packet: ToClient) => {\r\n                const serialized = this.toClientSerDe.serialize(packet);\r\n\r\n                setTimeout(\r\n                    () => {\r\n                        for (let k in this.toClientQueues) {\r\n                            this.toClientQueues[k].push({\r\n                                senderId: 'server',\r\n                                packet: this.toClientSerDe.deserialize(serialized),\r\n                            });\r\n                        }\r\n                    },\r\n                    this.latency\r\n                );\r\n            }\r\n        };\r\n    }\r\n\r\n    createClient(): NetConnection<ToServer, ToClient> {\r\n        const id = Math.random().toString(36).substr(2);\r\n\r\n        this.toClientQueues[id] = [];\r\n\r\n        this.clients[id] = {\r\n            id,\r\n\r\n            countAvailablePackets: (): number => this.toClientQueues[id].length,\r\n\r\n            receiveAllPackets: (): PacketWithSender<ToClient>[] => {\r\n                const result = this.toClientQueues[id].slice();\r\n                this.toClientQueues[id].length = 0;\r\n                return result;\r\n            },\r\n\r\n            receivePacket: (): PacketWithSender<ToClient> | null => {\r\n                if (this.toClientQueues[id].length < 1) return null;\r\n\r\n                const result = this.toClientQueues[id][0];\r\n                this.toClientQueues[id].splice(0, 1);\r\n                return result;\r\n            },\r\n\r\n            sendPacket: (packet: ToServer) => {\r\n                setTimeout(\r\n                    () => {\r\n                        this.toServerQueue.push({\r\n                            senderId: id,\r\n                            packet: this.toServerSerDe.deserialize(this.toServerSerDe.serialize(packet))\r\n                        });\r\n                    },\r\n                    this.latency\r\n                );\r\n            }\r\n        };\r\n\r\n        return this.clients[id];\r\n    }\r\n}","import { vec2 } from \"gl-matrix\";\r\n\r\nexport type Rect = {\r\n    xmin: number,\r\n    ymin: number,\r\n    xmax: number,\r\n    ymax: number,\r\n};\r\n\r\nexport const RectTool = {\r\n    area: (r: Rect): number =>\r\n        (r.xmax - r.xmin) * (r.ymax - r.ymin),\r\n};\r\n\r\nexport const smallestDifferenceRadians = (a: number, b: number): number => {\r\n    a %= 2 * Math.PI;\r\n    b %= 2 * Math.PI;\r\n\r\n    if (Math.abs(a - b) > Math.PI) {\r\n        if (a > 0) a -= 2 * Math.PI;\r\n        else a += 2 * Math.PI;\r\n    }\r\n\r\n    return a - b;\r\n};\r\n\r\nexport const lerpRadians = (a: number, b: number, t: number): number =>\r\n    a + t * smallestDifferenceRadians(b, a);\r\n\r\nexport const findBounds = (pts: ReadonlyArray<vec2>): Rect => {\r\n    const result: Rect = { xmin: Infinity, ymin: Infinity, xmax: -Infinity, ymax: -Infinity };\r\n\r\n    pts.forEach(p => {\r\n        if (p[0] < result.xmin) result.xmin = p[0];\r\n        if (p[1] < result.ymin) result.ymin = p[1];\r\n        if (p[0] > result.xmax) result.xmax = p[0];\r\n        if (p[1] > result.ymax) result.ymax = p[1];\r\n    });\r\n\r\n    return result;\r\n};","var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n","export class BufferRenderer {\r\n    private readonly gl: WebGLRenderingContext;\r\n    private readonly vertexBuffer: WebGLBuffer;\r\n    private readonly shader: WebGLProgram;\r\n\r\n    constructor(gl: WebGLRenderingContext, shader: WebGLProgram) {\r\n        this.gl = gl;\r\n        this.shader = shader;\r\n\r\n        this.vertexBuffer = gl.createBuffer() as WebGLBuffer;\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer);\r\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([ -1,1,-1,-1,1,-1,1,-1,1,1,-1,1 ]), gl.STATIC_DRAW);\r\n    }\r\n\r\n    draw(texture: WebGLTexture, onPreDraw?: (gl: WebGLRenderingContext, shader: WebGLProgram) => void) {\r\n        const gl = this.gl;\r\n\r\n        gl.useProgram(this.shader);\r\n\r\n        gl.activeTexture(gl.TEXTURE0);\r\n        gl.bindTexture(gl.TEXTURE_2D, texture);\r\n        const loc_tex = gl.getUniformLocation(this.shader, \"u_tex\");\r\n        gl.uniform1i(loc_tex, 0);\r\n\r\n        if (onPreDraw) onPreDraw(gl, this.shader);\r\n\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer);\r\n        const posLoc = gl.getAttribLocation(this.shader, \"i_position\");\r\n        gl.enableVertexAttribArray(posLoc);\r\n        gl.vertexAttribPointer(posLoc, 2, gl.FLOAT, false, 0, 0);\r\n\r\n        gl.drawArrays(gl.TRIANGLES, 0, 6);\r\n    }\r\n\r\n    release() {\r\n        const gl = this.gl;\r\n\r\n        gl.useProgram(null);\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, null);\r\n\r\n        gl.deleteBuffer(this.vertexBuffer);\r\n    }\r\n}","import { vec3, quat, mat4 } from \"gl-matrix\";\r\nimport { Const, unconst } from 'utils/lang';\r\n\r\nexport type Transform = {\r\n    position: vec3,\r\n    rotation: quat,\r\n    scale: vec3,\r\n};\r\n\r\nexport const Transform = {\r\n    create: (): Transform => ({\r\n        position: vec3.create(),\r\n        rotation: quat.create(),\r\n        scale: vec3.fromValues(1, 1, 1),\r\n    }),\r\n\r\n    toMatrix: (self: Const<Transform>, out: mat4): mat4 =>\r\n        mat4.fromRotationTranslationScale(out, unconst(self.rotation), unconst(self.position), unconst(self.scale)),\r\n};","import { createSimpleSerializer } from \"networking\";\r\nimport { vec2 } from \"gl-matrix\";\r\nimport { lerpRadians } from \"utils/math\";\r\nimport { Const, unconst } from 'utils/lang';\r\nimport cloneDeep = require('lodash/cloneDeep');\r\n\r\nconst v2x = vec2.create();\r\n\r\nexport type PlayerId = string;\r\nexport type PlayerMap<T> = {[playerId: string]: T};\r\n\r\nexport type PlayerState = {\r\n    position: vec2,\r\n    angle: number,\r\n    lastInputUID: string,\r\n};\r\n\r\nexport type GameState = {\r\n    tick: number,\r\n    predictedTick: number,\r\n    players: PlayerMap<PlayerState>,\r\n};\r\n\r\nexport type PlayerInputs = {\r\n    uid: string,\r\n    tick: number,\r\n    mouseWorldPos: vec2,\r\n    pressing: boolean,\r\n};\r\n\r\nexport type ClientPacket = PlayerInputs;\r\nexport type ServerPacket = GameState;\r\n\r\nexport const serverPacketSerializer = createSimpleSerializer<ServerPacket>();\r\nexport const clientPacketSerializer = createSimpleSerializer<ClientPacket>();\r\n\r\nexport const PlayerState = {\r\n    create: (): PlayerState => ({\r\n        position: vec2.create(),\r\n        angle: 0,\r\n        lastInputUID: '',\r\n    }),\r\n\r\n    lerp: (out: PlayerState, a: Const<PlayerState>, b: Const<PlayerState>, t: number): PlayerState => {\r\n        vec2.lerp(out.position, unconst(a.position), unconst(b.position), t);\r\n        out.angle = lerpRadians(a.angle, b.angle, t);\r\n        out.lastInputUID = b.lastInputUID;\r\n        return out;\r\n    },\r\n\r\n    copy: (out: PlayerState, a: Const<PlayerState>): PlayerState => {\r\n        vec2.copy(out.position, unconst(a.position));\r\n        out.angle = a.angle;\r\n        out.lastInputUID = a.lastInputUID;\r\n        return out;\r\n    },\r\n};\r\n\r\nconst matchPlayerCount = (out: GameState, from: Const<GameState>): GameState => {\r\n    for (let id in out.players) {\r\n        if (!(id in from.players)) {\r\n            delete out.players[id];\r\n        }\r\n    }\r\n\r\n    for (let id in from.players) {\r\n        if (!(id in out.players)) {\r\n            out.players[id] = PlayerState.create();\r\n        }\r\n    }\r\n\r\n    return out;\r\n};\r\n\r\nconst applyInputsToPlayer = (out: PlayerState, cur: Const<PlayerState>, inputs: Const<PlayerInputs>, id: string): PlayerState => {\r\n    vec2.sub(v2x, unconst(inputs.mouseWorldPos), unconst(cur.position));\r\n    out.angle = Math.atan2(v2x[1], v2x[0]);\r\n\r\n    if (inputs.pressing) {\r\n        vec2.normalize(v2x, v2x);\r\n        vec2.scale(v2x, v2x, 0.1);\r\n        vec2.add(out.position, unconst(cur.position), v2x);\r\n    } else {\r\n        vec2.copy(out.position, unconst(cur.position));\r\n    }\r\n\r\n    out.lastInputUID = inputs.uid;\r\n\r\n    return out;\r\n};\r\n\r\nexport const GameState = {\r\n    create: (): GameState => ({\r\n        tick: 0,\r\n        predictedTick: 0,\r\n        players: {},\r\n    }),\r\n\r\n    clone: (from: Const<GameState>): GameState => cloneDeep(from) as GameState,\r\n\r\n    copy: (out: GameState, a: Const<GameState>): GameState => {\r\n\r\n        out.tick = a.tick;\r\n        out.predictedTick = a.predictedTick;\r\n\r\n        matchPlayerCount(out, a);\r\n\r\n        for (let id in a.players) {\r\n            PlayerState.copy(out.players[id], a.players[id]);\r\n        }\r\n\r\n        return out;\r\n    },\r\n\r\n    lerpNew: (out: GameState, a: Const<GameState>, b: Const<GameState>, t: number): GameState => {\r\n        GameState.copy(out, b);\r\n\r\n        for (let id in b.players) {\r\n            if (id in a.players) {\r\n                PlayerState.lerp(out.players[id], a.players[id], b.players[id], t);\r\n            }\r\n        }\r\n\r\n        return out;\r\n    },\r\n\r\n    step: (out: GameState, cur: Const<GameState>, inputs: Const<PlayerMap<PlayerInputs>>): GameState => {\r\n        GameState.copy(out, cur);\r\n\r\n        out.tick++;\r\n        out.predictedTick = out.tick;\r\n\r\n        for (let id in cur.players) {\r\n            if (id in inputs) {\r\n                applyInputsToPlayer(out.players[id], cur.players[id], inputs[id], id);\r\n            }\r\n        }\r\n\r\n        return out;\r\n    },\r\n\r\n    predict: (out: GameState, cur: Const<GameState>, input: Const<PlayerInputs>, playerId: PlayerId): GameState => {\r\n        GameState.copy(out, cur);\r\n\r\n        out.predictedTick++;\r\n\r\n        applyInputsToPlayer(out.players[playerId], cur.players[playerId], input, playerId);\r\n\r\n        return out;\r\n    },\r\n};","import { WriteGrid, Grid, safeOutOfBounds } from 'utils/grid';\r\nimport { runCellularAutomaton } from './automaton';\r\nimport { markEdges, findContours, EdgeMarkedMapTile, FindContoursResult } from './findContours';\r\nimport { smoothCurve } from './smoothCurve';\r\nimport { findBounds, RectTool } from 'utils/math';\r\nimport { triangulate } from './triangulate';\r\nimport { vec2 } from 'gl-matrix';\r\n\r\nexport type Cave = {\r\n    edges: vec2[][],\r\n    triangles: number[][],\r\n};\r\n\r\nexport type CaveBuildDetails = {\r\n    automatonResult: Grid<boolean>,\r\n    coloredGrid: Grid<number>,\r\n    filledGrid: Grid<boolean>,\r\n    edgeMarkedGrid: Grid<EdgeMarkedMapTile>,\r\n    findContoursResult: FindContoursResult,\r\n    outerMostContourIndex: number,\r\n    topLeftMostVertexIndex: number,\r\n};\r\n\r\nconst floodFill = (grid: WriteGrid<number>, x: number, y: number, replace: number, value: number, count: number): number => {\r\n    if (x < 0 || y < 0) return count;\r\n    if (x >= grid.width || y >= grid.height) return count;\r\n\r\n    const tile = grid.at(x, y);\r\n\r\n    if (tile === value) return count;\r\n    if (tile !== replace) return count;\r\n\r\n    grid.write(x, y, value);\r\n    count++;\r\n\r\n    count = floodFill(grid, x - 1, y, replace, value, count);\r\n    count = floodFill(grid, x + 1, y, replace, value, count);\r\n    count = floodFill(grid, x, y - 1, replace, value, count);\r\n    count = floodFill(grid, x, y + 1, replace, value, count);\r\n    return count;\r\n};\r\n\r\nconst colorGridRegions = (grid: WriteGrid<number>): number => {\r\n    let color = 1;\r\n    let largestColor = -1;\r\n    let largestRegion = 0;\r\n\r\n    while (true) {\r\n        const pos = Grid.find(grid, (x, y, val) => val === 0);\r\n        if (pos === null) return largestColor;\r\n\r\n        const size = floodFill(grid, pos.x, pos.y, 0, color, 0);\r\n\r\n        if (size > largestRegion) {\r\n            largestRegion = size;\r\n            largestColor = color;\r\n        }\r\n\r\n        color++;\r\n    }\r\n};\r\n\r\nconst fixSingleTileBridges = (grid: WriteGrid<boolean>): void => {\r\n    Grid.forEach(safeOutOfBounds(grid, true), (x, y, val) => {\r\n        if (!val) return;\r\n\r\n        if (val && !grid.at(x - 1, y) && !grid.at(x + 1, y)) {\r\n            grid.write(x + 1, y, true);\r\n        }\r\n\r\n        if (val && !grid.at(x, y - 1) && !grid.at(x, y + 1)) {\r\n            grid.write(x, y + 1, true);\r\n        }\r\n    });\r\n};\r\n\r\nexport const generateCave = (seed: number): Cave => \r\n    generateCaveVerbose(seed).cave;\r\n\r\nexport const generatePartialAutomatonResult = (seed: number, generation: number): Grid<boolean> =>\r\n    runCellularAutomaton(75, 75, seed, 0.48, 5, 4, generation);\r\n\r\nexport const generateCaveVerbose = (seed: number): { cave: Cave, details: CaveBuildDetails } => {\r\n    const automatonResult = runCellularAutomaton(75, 75, seed, 0.48, 5, 4, 30);\r\n\r\n    const coloredGrid = Grid.map(automatonResult, (x, y, val) => val ? -1 : 0);\r\n    const bigColor = colorGridRegions(coloredGrid);\r\n\r\n    const filledGrid = Grid.map(coloredGrid, (x, y, val) => val !== bigColor);\r\n    fixSingleTileBridges(filledGrid);\r\n\r\n    const edgeMarkedGrid = markEdges(filledGrid);\r\n\r\n    const findContoursResult = findContours(edgeMarkedGrid, 2);\r\n\r\n    const outerMostContourIndex = findContoursResult.contours\r\n        .map((c, i) => ({ i, area: RectTool.area(findBounds(c)) }))\r\n        .sort((a, b) => b.area - a.area)\r\n        [0].i;\r\n\r\n    const smoothContours = findContoursResult.contours.map(x => smoothCurve(x, 10, 0.7));\r\n\r\n    const BOUNDS = 1.0;\r\n\r\n    const mostTopLeft = (pts: vec2[]): number =>\r\n        pts.map((p, i) => ({ i, len: (p[0]+BOUNDS)*(p[0]+BOUNDS) + (p[1]+BOUNDS)*(p[1]+BOUNDS) }))\r\n            .sort((a, b) => a.len - b.len)\r\n            [0].i;\r\n\r\n    const topLeftPtI = mostTopLeft(smoothContours[outerMostContourIndex]);\r\n    const topLeftPt = smoothContours[outerMostContourIndex][topLeftPtI];\r\n    const topLeftPrevPt = smoothContours[outerMostContourIndex][topLeftPtI === 0 ? smoothContours[outerMostContourIndex].length - 1 : topLeftPtI - 1];\r\n\r\n    const bumpDownAmount = Math.abs(topLeftPt[1] - topLeftPrevPt[1]);\r\n\r\n    smoothContours[outerMostContourIndex].splice(topLeftPtI, 0,\r\n        vec2.fromValues( -BOUNDS,  -BOUNDS+bumpDownAmount),\r\n        vec2.fromValues( -BOUNDS,   BOUNDS),\r\n        vec2.fromValues(  BOUNDS,   BOUNDS),\r\n        vec2.fromValues(  BOUNDS,  -BOUNDS),\r\n        vec2.fromValues( -BOUNDS,  -BOUNDS),\r\n        vec2.fromValues( \r\n            (topLeftPt[0] + topLeftPrevPt[0]) / 2, \r\n            (topLeftPt[1] + topLeftPrevPt[1]) / 2\r\n        )\r\n    );\r\n\r\n    const triangles = smoothContours.map(triangulate);\r\n\r\n    smoothContours[outerMostContourIndex][topLeftPtI][1] -= bumpDownAmount;\r\n    smoothContours[outerMostContourIndex][topLeftPtI+5][0] = topLeftPrevPt[0];\r\n    smoothContours[outerMostContourIndex][topLeftPtI+5][1] = topLeftPrevPt[1];\r\n\r\n    return {\r\n        cave: {\r\n            edges: smoothContours,\r\n            triangles\r\n        },\r\n        details: {\r\n            automatonResult,\r\n            coloredGrid,\r\n            filledGrid,\r\n            edgeMarkedGrid,\r\n            findContoursResult,\r\n            outerMostContourIndex,\r\n            topLeftMostVertexIndex: topLeftPtI\r\n        }\r\n    };\r\n};\r\n","// https://en.wikipedia.org/wiki/Linear_congruential_generator\r\n\r\nconst M = 4294967296;\r\nconst A = 1664525;\r\nconst C = 1013904223;\r\n\r\nexport class PRNG {\r\n    static readonly MAX_SEED: number = M - 1;\r\n\r\n    static getRandomSeed(): number {\r\n        return Math.floor(Math.random() * M);\r\n    }\r\n\r\n    private seed: number;\r\n\r\n    constructor(seed?: number) {\r\n        if (typeof seed !== 'undefined') {\r\n            this.seed = Math.floor(seed) % M;\r\n        } else {\r\n            this.seed = PRNG.getRandomSeed();\r\n        }\r\n    }\r\n\r\n    next(): number {\r\n        this.seed = (A * this.seed + C) % M;\r\n        return this.seed / M;\r\n    }\r\n}","import { WriteGrid, Grid, safeOutOfBounds } from 'utils/grid';\r\nimport { smallestDifferenceRadians } from 'utils/math';\r\nimport { vec2 } from 'gl-matrix';\r\n\r\nexport type EdgeMarkedMapTile = {\r\n    kind: 'air' | 'dirt' | 'edge',\r\n    normal: number,\r\n};\r\n\r\nexport const markEdges = (grid: Grid<boolean>): WriteGrid<EdgeMarkedMapTile> => {\r\n    const result = Grid.map(grid, (x, y, val): EdgeMarkedMapTile => \r\n        ({ kind: val ? 'dirt' : 'air', normal: 0 }));\r\n\r\n    for (let x = 0; x < grid.width; x++) {\r\n        for (let y = 0; y < grid.height; y++) {\r\n            if (!grid.at(x, y)) continue;\r\n\r\n            const l = x > 0               && !grid.at(x-1, y);\r\n            const r = x < grid.width - 2  && !grid.at(x+1, y);\r\n            const u = y > 0               && !grid.at(x, y-1);\r\n            const d = y < grid.height - 2 && !grid.at(x, y+1);\r\n\r\n            if (!l && !r && !u && !d) continue;\r\n\r\n            const normal = r && d ? 45 :\r\n                d && l ?  135 :\r\n                l && u ? -135 :\r\n                u && r ?  -45 :\r\n                r ? 0 :\r\n                d ? 90 :\r\n                l ? 180 :\r\n                -90;\r\n\r\n            result.write(x, y, { kind: 'edge', normal });\r\n        }\r\n    }\r\n\r\n    return result;\r\n};\r\n\r\nexport enum WalkedStatus {\r\n    Unwalked,\r\n    Walked,\r\n    WalkedImportant,\r\n}\r\n\r\ntype WalkCandidate = {\r\n    dx: number,\r\n    dy: number,\r\n    normal: number,\r\n};\r\n\r\ntype GridPoint = {\r\n    x: number,\r\n    y: number,\r\n};\r\n\r\nexport type FindContoursResult = {\r\n    contours: vec2[][],\r\n    walkMap: WriteGrid<WalkedStatus>,\r\n};\r\n\r\nexport const findContours = (grid: Grid<EdgeMarkedMapTile>, spaceInsurance: 0 | 1 | 2): FindContoursResult => {\r\n    const MAX_ITER = 100;\r\n    const walkMap = Grid.map(new WriteGrid<WalkedStatus>(grid.width, grid.height), _ => WalkedStatus.Unwalked);\r\n    const contours: vec2[][] = [];\r\n\r\n    let iter = 0;\r\n    let newContour: vec2[] | null = null;\r\n\r\n    do {\r\n        newContour = findOneContour(walkMap, grid, spaceInsurance);\r\n        if (newContour !== null && newContour.length > 2) {\r\n            contours.push(newContour);\r\n        }\r\n    } while (newContour != null && iter++ < MAX_ITER);\r\n\r\n    return { contours, walkMap };\r\n}\r\n\r\nconst findFreshContour = (walkMap: Grid<WalkedStatus>, grid: Grid<EdgeMarkedMapTile>): GridPoint | null => {\r\n    for (let x = 0; x < grid.width; x++) {\r\n        for (let y = 0; y < grid.height; y++) {\r\n            if (grid.at(x, y).kind === 'edge' && walkMap.at(x, y) === WalkedStatus.Unwalked) {\r\n                return { x, y };\r\n            }\r\n        }\r\n    }\r\n\r\n    return null;\r\n};\r\n\r\nconst bestCandidate = (prev: WalkCandidate, candidates: WalkCandidate[]): WalkCandidate => {\r\n    let minVal = 100;\r\n    let minI = 0;\r\n\r\n    for (let i = 0; i < candidates.length; ++i) {\r\n        const c = candidates[i];\r\n        const d = Math.abs(smallestDifferenceRadians(\r\n            c.normal * Math.PI / 180,\r\n            prev.normal * Math.PI / 180\r\n        ));\r\n\r\n        if (d < minVal) {\r\n            minVal = d;\r\n            minI = i;\r\n        }\r\n    }\r\n\r\n    return candidates[minI];\r\n};\r\n\r\nconst findOneContour = (walkMap: WriteGrid<WalkedStatus>, grid: Grid<EdgeMarkedMapTile>, spaceInsurance: 0 | 1 | 2): vec2[] | null => {\r\n    const MAX_ITER = 5000;\r\n\r\n    const freshStart = findFreshContour(walkMap, grid);\r\n    if (freshStart === null) {\r\n        return null;\r\n    }\r\n\r\n    grid = safeOutOfBounds(grid, {kind: 'dirt', normal: 0} as EdgeMarkedMapTile);\r\n\r\n    const points: vec2[] = [];\r\n    let x = freshStart.x;\r\n    let y = freshStart.y;\r\n\r\n    let iter = 0;\r\n    let lastCan: WalkCandidate = { dx: 0, dy: 0, normal: 0 };\r\n    let lastStatus = WalkedStatus.Walked;\r\n    let candidates: WalkCandidate[] = [];\r\n\r\n    do {\r\n        candidates = [];\r\n\r\n        for (let dx = -1; dx <= 1; dx++) {\r\n            for (let dy = -1; dy <= 1; dy++) {\r\n                if (dx === 0 && dy === 0) continue;\r\n                if (grid.at(x+dx, y+dy).kind === 'edge'\r\n                && walkMap.at(x+dx, y+dy) === WalkedStatus.Unwalked) {\r\n                    candidates.push({dx, dy, normal: grid.at(x+dx, y+dy).normal});\r\n                }\r\n            }\r\n        }\r\n\r\n        if (candidates.length > 0) {\r\n            const c = bestCandidate(lastCan, candidates);\r\n            x += c.dx;\r\n            y += c.dy;\r\n\r\n            let newStatus = WalkedStatus.Walked;\r\n            if (c.normal !== lastCan.normal) {\r\n                let important;\r\n                if (spaceInsurance === 0) {\r\n                    important = true;\r\n                } else if (spaceInsurance === 1) {\r\n                    important = c.dx != 0 && c.dy != 0 || lastStatus != WalkedStatus.WalkedImportant;\r\n                } else {\r\n                    important = lastStatus != WalkedStatus.WalkedImportant;\r\n                }\r\n\r\n                if (important) {\r\n                    newStatus = WalkedStatus.WalkedImportant;\r\n                }\r\n            }\r\n\r\n            if (newStatus === WalkedStatus.WalkedImportant) {\r\n                points.push(vec2.fromValues(\r\n                    2*(x + 0.5)/grid.width - 1,\r\n                    2*(y + 0.5)/grid.height - 1,\r\n                ));\r\n            }\r\n\r\n            walkMap.write(x, y, newStatus);\r\n            lastStatus = newStatus;\r\n            lastCan = c;\r\n        }\r\n    }\r\n    while (candidates.length > 0 && iter++ < MAX_ITER);\r\n\r\n    return points;\r\n};","import { Cave } from 'caveGenerator';\r\nimport flatten = require('lodash/flatten');\r\nimport { getShaders } from 'shaders';\r\nimport { BufferRenderer } from 'graphics/bufferRenderer';\r\nimport { GaussianBlur } from 'graphics/gaussianBlur';\r\nimport { FrameBufferTexture } from 'graphics/frameBufferTexture';\r\nimport { mat4, vec3 } from 'gl-matrix';\r\nimport { Camera } from 'graphics/camera';\r\nimport { Const, unconst } from 'utils/lang';\r\n\r\nconst m4x = mat4.create();\r\nconst m4y = mat4.create();\r\n\r\nexport type SurfaceInfoBuffers = {\r\n    readonly depth: WebGLTexture,\r\n    readonly normal: WebGLTexture,\r\n};\r\n\r\nconst getFlatVerts = (cave: Const<Cave>): number[] =>\r\n    flatten(flatten(cave.edges).map(x => [x[0], -x[1]]));\r\n\r\nconst getFlatIndices = (cave: Const<Cave>): number[] => {\r\n    let baseCount = 0;\r\n    let result: number[] = [];\r\n\r\n    cave.triangles.forEach((tris, index) => {\r\n        result = result.concat(tris.map(x => x + baseCount));\r\n        baseCount += cave.edges[index].length;\r\n    });\r\n\r\n    result.reverse();\r\n\r\n    return result;\r\n};\r\n\r\nexport class CaveRenderer {\r\n    static readonly SURFACE_INFO_BUFFER_SIZE = 1024;\r\n    static readonly CAVE_SIZE = 20;\r\n    private static readonly CAVE_SCALE: vec3 = vec3.fromValues(CaveRenderer.CAVE_SIZE, CaveRenderer.CAVE_SIZE, CaveRenderer.CAVE_SIZE);\r\n\r\n    private readonly gl: WebGLRenderingContext;\r\n    private readonly vertexBuffer: WebGLBuffer;\r\n    private readonly indexBuffer: WebGLBuffer;\r\n    private readonly indexBufferLen: number;\r\n    private readonly normalsTexture: WebGLTexture | null;\r\n    private readonly _surfaceInfoBuffers: SurfaceInfoBuffers;\r\n\r\n    constructor(gl: WebGLRenderingContext, cave: Const<Cave>, normalsTexture: WebGLTexture | null) {\r\n        this.gl = gl;\r\n        this.normalsTexture = normalsTexture;\r\n\r\n        this.vertexBuffer = gl.createBuffer() as WebGLBuffer;\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer);\r\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(getFlatVerts(cave)), gl.STATIC_DRAW);\r\n\r\n        const indexBufferData = getFlatIndices(cave);\r\n        this.indexBufferLen = indexBufferData.length;\r\n\r\n        this.indexBuffer = gl.createBuffer() as WebGLBuffer;\r\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer);\r\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(indexBufferData), gl.STATIC_DRAW);\r\n\r\n        this._surfaceInfoBuffers = this.buildSurfaceInfoBuffers(CaveRenderer.SURFACE_INFO_BUFFER_SIZE);\r\n    }\r\n\r\n    private buildSurfaceInfoBuffers(size: number): SurfaceInfoBuffers {\r\n        const gl = this.gl;\r\n        const normalsBlit = new BufferRenderer(gl, getShaders(gl).normals);\r\n        const gaussBlur0 = new GaussianBlur(gl, size, size);\r\n        const gaussBlur1 = new GaussianBlur(gl, size, size);\r\n        const frameBufferTex = new FrameBufferTexture(gl, size, size);\r\n        const flatWhiteShader = getShaders(gl).flatWhite;\r\n\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, frameBufferTex.framebuffer);\r\n        gl.viewport(0, 0, size, size);\r\n        gl.clearColor(0, 0, 0, 1);\r\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n\r\n        gl.useProgram(flatWhiteShader);\r\n\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer);\r\n        const posLoc = gl.getAttribLocation(flatWhiteShader, \"i_position\");\r\n        gl.enableVertexAttribArray(posLoc);\r\n        gl.vertexAttribPointer(posLoc, 2, gl.FLOAT, false, 0, 0);\r\n\r\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer);\r\n        gl.drawElements(gl.TRIANGLES, this.indexBufferLen, gl.UNSIGNED_SHORT, 0);\r\n\r\n        gaussBlur0.run(frameBufferTex.texture, 30);\r\n\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, frameBufferTex.framebuffer);\r\n        gl.viewport(0, 0, size, size);\r\n\r\n        normalsBlit.draw(gaussBlur0.resultTexture, (gl, shader) => {\r\n            gl.uniform2f(gl.getUniformLocation(shader, \"u_resolution\"), size, size);\r\n        });\r\n\r\n        gaussBlur1.run(frameBufferTex.texture, 2);\r\n\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n        gl.viewport(0, 0, gl.canvas.width, gl.canvas.height);\r\n\r\n        normalsBlit.release();\r\n        const depth = gaussBlur0.releaseTexture();\r\n        const normal = gaussBlur1.releaseTexture();\r\n\r\n        return { depth, normal };\r\n    };\r\n\r\n    get surfaceInfoBuffers() {\r\n        return this._surfaceInfoBuffers;\r\n    }\r\n\r\n    drawDemo(t: number, zoom: number, x: number, y: number) {\r\n        const gl = this.gl;\r\n        const shader = getShaders(gl).caveDemo;\r\n\r\n        gl.useProgram(shader);\r\n\r\n        gl.uniform1f(gl.getUniformLocation(shader, \"u_time\"), t);\r\n        gl.uniform1f(gl.getUniformLocation(shader, \"u_zoom\"), zoom);\r\n        gl.uniform2f(gl.getUniformLocation(shader, \"u_pointLightPos\"), x, y);\r\n\r\n        mat4.identity(m4x);\r\n        mat4.perspective(m4x, Math.PI / 2, 1, .01, 100);\r\n        gl.uniformMatrix4fv(gl.getUniformLocation(shader, \"u_perspective\"), false, m4x);\r\n\r\n        gl.activeTexture(gl.TEXTURE0);\r\n        gl.bindTexture(gl.TEXTURE_2D, this._surfaceInfoBuffers.depth);\r\n        gl.uniform1i(gl.getUniformLocation(shader, \"u_depth\"), 0);\r\n\r\n        gl.activeTexture(gl.TEXTURE1);\r\n        gl.bindTexture(gl.TEXTURE_2D, this._surfaceInfoBuffers.normal);\r\n        gl.uniform1i(gl.getUniformLocation(shader, \"u_normal\"), 1);\r\n\r\n        gl.activeTexture(gl.TEXTURE2);\r\n        gl.bindTexture(gl.TEXTURE_2D, this.normalsTexture);\r\n        gl.uniform1i(gl.getUniformLocation(shader, \"u_normalRocks\"), 2);\r\n\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer);\r\n        const posLoc = gl.getAttribLocation(shader, \"i_position\");\r\n        gl.enableVertexAttribArray(posLoc);\r\n        gl.vertexAttribPointer(posLoc, 2, gl.FLOAT, false, 0, 0);\r\n\r\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer);\r\n        gl.drawElements(gl.TRIANGLES, this.indexBufferLen, gl.UNSIGNED_SHORT, 0);\r\n    }\r\n\r\n    draw(camera: Const<Camera>, shipWorldPos: Const<vec3>) {\r\n        const gl = this.gl;\r\n        const shader = getShaders(gl).cave;\r\n\r\n        gl.useProgram(shader);\r\n\r\n        mat4.identity(m4x); // m4x -> MVP matrix\r\n        mat4.scale(m4x, m4x, CaveRenderer.CAVE_SCALE);\r\n        gl.uniformMatrix4fv(gl.getUniformLocation(shader, \"u_model\"), false, m4x);\r\n\r\n        Camera.getViewMatrix(camera, m4y);\r\n        mat4.mul(m4x, m4y, m4x);\r\n        Camera.getProjectionMatrix(camera, m4y);\r\n        mat4.mul(m4x, m4y, m4x);\r\n        gl.uniformMatrix4fv(gl.getUniformLocation(shader, \"u_mvp\"), false, m4x);\r\n\r\n        gl.uniform1f(gl.getUniformLocation(shader, \"u_time\"), 0);\r\n        gl.uniform3fv(gl.getUniformLocation(shader, \"u_shipWorldPos\"), unconst(shipWorldPos));\r\n\r\n        gl.activeTexture(gl.TEXTURE0);\r\n        gl.bindTexture(gl.TEXTURE_2D, this._surfaceInfoBuffers.depth);\r\n        gl.uniform1i(gl.getUniformLocation(shader, \"u_depth\"), 0);\r\n\r\n        gl.activeTexture(gl.TEXTURE1);\r\n        gl.bindTexture(gl.TEXTURE_2D, this._surfaceInfoBuffers.normal);\r\n        gl.uniform1i(gl.getUniformLocation(shader, \"u_normal\"), 1);\r\n\r\n        gl.activeTexture(gl.TEXTURE2);\r\n        gl.bindTexture(gl.TEXTURE_2D, this.normalsTexture);\r\n        gl.uniform1i(gl.getUniformLocation(shader, \"u_normalRocks\"), 2);\r\n\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer);\r\n        const posLoc = gl.getAttribLocation(shader, \"i_position\");\r\n        gl.enableVertexAttribArray(posLoc);\r\n        gl.vertexAttribPointer(posLoc, 2, gl.FLOAT, false, 0, 0);\r\n\r\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer);\r\n        gl.drawElements(gl.TRIANGLES, this.indexBufferLen, gl.UNSIGNED_SHORT, 0);\r\n    }\r\n\r\n    release() {\r\n        const gl = this.gl;\r\n\r\n        gl.deleteBuffer(this.vertexBuffer);\r\n        gl.deleteBuffer(this.indexBuffer);\r\n        gl.deleteTexture(this._surfaceInfoBuffers.depth);\r\n        gl.deleteTexture(this._surfaceInfoBuffers.normal);\r\n    }\r\n}\r\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n","export class FrameBufferTexture {\r\n    readonly framebuffer: WebGLFramebuffer;\r\n    readonly texture: WebGLTexture;\r\n\r\n    private readonly gl: WebGLRenderingContext;\r\n\r\n    constructor(gl: WebGLRenderingContext, width: number, height: number) {\r\n        this.gl = gl;\r\n\r\n        this.framebuffer = gl.createFramebuffer() as WebGLFramebuffer;\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\r\n        \r\n        this.texture = gl.createTexture() as WebGLTexture;\r\n        gl.bindTexture(gl.TEXTURE_2D, this.texture);\r\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGB, width, height, 0, gl.RGB, gl.UNSIGNED_BYTE, null);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR); \r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n        \r\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.texture, 0); \r\n    }\r\n\r\n    release() {\r\n        const gl = this.gl;\r\n\r\n        gl.bindTexture(gl.TEXTURE_2D, null);\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n\r\n        gl.deleteTexture(this.texture);\r\n        gl.deleteFramebuffer(this.framebuffer);\r\n    }\r\n\r\n    releaseTexture(): WebGLTexture {\r\n        const gl = this.gl;\r\n\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n        gl.deleteFramebuffer(this.framebuffer);\r\n\r\n        return this.texture;\r\n    }\r\n}\r\n","export const loadTexture = (gl: WebGLRenderingContext, url: string, glWrapMode?: number): Promise<WebGLTexture> =>\r\n    new Promise((resolve, reject) => {\r\n        const image = new Image();\r\n        image.onload = () => {\r\n            const texture = gl.createTexture();\r\n\r\n            gl.bindTexture(gl.TEXTURE_2D, texture);\r\n            gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\r\n\r\n            const wrapMode = typeof glWrapMode === 'undefined' ? gl.CLAMP_TO_EDGE : glWrapMode;\r\n\r\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR); \r\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, wrapMode);\r\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, wrapMode);\r\n\r\n            resolve(texture as WebGLTexture);\r\n        };\r\n        image.src = url;\r\n    });","import { initPost as initPost_vectorCaves } from 'pages/vector-caves';\r\nimport { initGame, initLocalMultiGame } from 'pages/game';\r\n\r\nconst postInitters: {[key: string]: () => void} = {\r\n    'vector-caves': initPost_vectorCaves,\r\n};\r\n\r\n(window as any).initPost = (name: string): void =>\r\n    postInitters[name]();\r\n\r\n(window as any).initGame = initGame;\r\n\r\n(window as any).initLocalMultiGame = initLocalMultiGame;","import { generateCaveVerbose, generatePartialAutomatonResult } from 'caveGenerator';\r\nimport { Grid } from 'utils/grid';\r\nimport { WalkedStatus } from 'caveGenerator/findContours';\r\nimport { vec2 } from 'gl-matrix';\r\nimport { Cave } from 'caveGenerator';\r\nimport { CaveRenderer } from \"game/render/caveRenderer\";\r\nimport { BufferRenderer } from 'graphics/bufferRenderer';\r\nimport { loadTexture } from 'graphics/textureLoader';\r\nimport { getShaders } from 'shaders';\r\nimport { PRNG } from 'utils/prng';\r\n\r\nexport const initPost = () :void => {\r\n    let seed: number;\r\n    let caveCache: any = null;\r\n\r\n    const genSlider = document.getElementById('gen-slider') as HTMLInputElement;\r\n\r\n    const ctx0 = (document.getElementById('zeroth-canvas') as HTMLCanvasElement).getContext('2d') as CanvasRenderingContext2D;\r\n    const ctx  = (document.getElementById('first-canvas') as HTMLCanvasElement).getContext('2d') as CanvasRenderingContext2D;\r\n    const ctx2 = (document.getElementById('second-canvas') as HTMLCanvasElement).getContext('2d') as CanvasRenderingContext2D;\r\n    const ctx3 = (document.getElementById('third-canvas') as HTMLCanvasElement).getContext('2d') as CanvasRenderingContext2D;\r\n    const ctx4 = (document.getElementById('fourth-canvas') as HTMLCanvasElement).getContext('2d') as CanvasRenderingContext2D;\r\n    const ctx5 = (document.getElementById('fifth-canvas') as HTMLCanvasElement).getContext('2d') as CanvasRenderingContext2D;\r\n    const ctx6 = (document.getElementById('sixth-canvas') as HTMLCanvasElement).getContext('2d') as CanvasRenderingContext2D;\r\n    const ctx7 = (document.getElementById('seventh-canvas') as HTMLCanvasElement).getContext('2d') as CanvasRenderingContext2D;\r\n    const ctx9 = (document.getElementById('ninth-canvas') as HTMLCanvasElement).getContext('2d') as CanvasRenderingContext2D;\r\n\r\n    const updatePartialAutomatonResult = () :void => {\r\n        const generation =parseFloat(genSlider.value);\r\n        const grid = generatePartialAutomatonResult(seed, generation);\r\n\r\n        Grid.forEach(grid, (x, y, val) => {\r\n            ctx0.fillStyle = val ? '#000' : '#FFF';\r\n            ctx0.fillRect(4*x, 4*y, 4, 4);\r\n        });\r\n    };\r\n\r\n    seed = PRNG.getRandomSeed();\r\n\r\n    updatePartialAutomatonResult();\r\n\r\n    const { cave, details } = generateCaveVerbose(seed);\r\n    caveCache = cave;\r\n\r\n    Grid.forEach(details.automatonResult, (x, y, val) => {\r\n        ctx.fillStyle = val ? '#000' : '#FFF';\r\n        ctx.fillRect(4*x, 4*y, 4, 4);\r\n    });\r\n\r\n    Grid.forEach(details.coloredGrid, (x, y, val) => {\r\n        ctx2.fillStyle = gridColorForNumber(val);\r\n        ctx2.fillRect(4*x, 4*y, 4, 4);\r\n    });\r\n\r\n    Grid.forEach(details.filledGrid, (x, y, val) => {\r\n        ctx3.fillStyle = val ? '#000' : '#FFF';\r\n        ctx3.fillRect(4*x, 4*y, 4, 4);\r\n    });\r\n\r\n    Grid.forEach(details.edgeMarkedGrid, (x, y, val) => {\r\n        ctx4.fillStyle = val.kind === 'edge' ? gridColorForNormal(val.normal) : val.kind === 'air' ? '#655' : '#77f';\r\n        ctx4.fillRect(4*x, 4*y, 4, 4);\r\n    });\r\n\r\n    const contours = details.findContoursResult;\r\n\r\n    Grid.forEach(contours.walkMap, (x, y, val) => {\r\n        ctx5.fillStyle = val === WalkedStatus.WalkedImportant ? '#fff' : val === WalkedStatus.Walked ? '#333' : '#000';\r\n        ctx5.fillRect(4*x, 4*y, 4, 4);\r\n\r\n        ctx6.fillStyle = val === WalkedStatus.WalkedImportant ? '#333' : '#000';\r\n        ctx6.fillRect(9*x, 9*y, 9, 9);\r\n    });\r\n\r\n    const BIG_CANVAS_SIZE = 675;\r\n\r\n    const curveSpaceToCanvasSpace = (pt: vec2): vec2 => vec2.fromValues(\r\n        (BIG_CANVAS_SIZE / 2) * (1 + pt[0]),\r\n        (BIG_CANVAS_SIZE / 2) * (1 + pt[1])\r\n    );\r\n\r\n    // =--------------------------------------------\r\n\r\n    contours.contours.forEach((c, i) => {\r\n        ctx6.strokeStyle = i === details.outerMostContourIndex ? '#f00' : '#933';\r\n\r\n        ctx6.beginPath();\r\n        const first = curveSpaceToCanvasSpace(c[0]);\r\n        ctx6.moveTo(first[0], first[1]);\r\n\r\n        for (let i = 1; i < c.length; ++i) {\r\n            const next = curveSpaceToCanvasSpace(c[i]);\r\n            ctx6.lineTo(next[0], next[1]);\r\n        }\r\n\r\n        ctx6.closePath();\r\n        ctx6.stroke();\r\n    });\r\n\r\n    // =--------------------------------------------\r\n\r\n    ctx7.strokeStyle = '#0f0';\r\n    ctx7.fillStyle = '#000';\r\n    ctx7.fillRect(0, 0, BIG_CANVAS_SIZE, BIG_CANVAS_SIZE);\r\n\r\n\r\n    cave.edges.forEach((c, i) => {\r\n        ctx7.strokeStyle = i === details.outerMostContourIndex ? '#0f0' : '#393';\r\n\r\n        ctx7.beginPath();\r\n        const first = curveSpaceToCanvasSpace(c[0]);\r\n        ctx7.moveTo(first[0], first[1]);\r\n\r\n        for (let i = 1; i < c.length; ++i) {\r\n            const next = curveSpaceToCanvasSpace(c[i]);\r\n            ctx7.lineTo(next[0], next[1]);\r\n        }\r\n\r\n        ctx7.closePath();\r\n        ctx7.stroke();\r\n    });\r\n\r\n    // =--------------------------------------------\r\n\r\n    ctx9.fillStyle = '#000';\r\n    ctx9.fillRect(0, 0, BIG_CANVAS_SIZE, BIG_CANVAS_SIZE);\r\n\r\n    cave.triangles.forEach((ts,j) => {\r\n        for (let i = 0; i < ts.length - 2; i += 3) {\r\n            ctx9.fillStyle = randomColorHex();\r\n            ctx9.beginPath();\r\n\r\n            const first = curveSpaceToCanvasSpace(cave.edges[j][ts[i]]);\r\n            ctx9.moveTo(first[0], first[1]);\r\n\r\n            [1, 2, 0].forEach(o => {\r\n                const a = curveSpaceToCanvasSpace(cave.edges[j][ts[i+o]]);\r\n                ctx9.lineTo(a[0], a[1]);\r\n            })\r\n\r\n            ctx9.fill();\r\n        }\r\n    });\r\n\r\n    genSlider.oninput = genSlider.onchange = updatePartialAutomatonResult;\r\n    (document.getElementById('generate-new') as HTMLButtonElement).onclick = () => location.reload(); \r\n\r\n    const gl = [0,1,2].map(x => (document.getElementById('canvas'+x) as HTMLCanvasElement).getContext('webgl') as WebGLRenderingContext);\r\n    drawInfoBufferDemo(caveCache, 'depth', gl[0]);\r\n    drawInfoBufferDemo(caveCache, 'normal', gl[1]);\r\n    drawDetailedCaveDemo(caveCache, gl[2])\r\n};\r\n\r\nconst randomColorHex = (): string => {\r\n    const randPair = (): string => {\r\n        let ret = Math.floor(Math.random() * 256).toString(16);\r\n        if (ret.length < 2) ret = '0'+ret;\r\n        return ret;\r\n    };\r\n\r\n    return '#' + randPair() + randPair() + randPair();\r\n};\r\n\r\nconst colors = [0,0,0,0,0,0,0,0,0,0].map(_ => randomColorHex());\r\n\r\nconst gridColorForNumber = (n: number): string => {\r\n    if (n < 0) return '#000';\r\n    return colors[n % colors.length];\r\n};\r\n\r\nconst gridColorForNormal = (degs: number): string => {\r\n    const x = Math.cos(degs * Math.PI / 180);\r\n    const y = Math.sin(degs * Math.PI / 180);\r\n\r\n    const hx = Math.round(15 * (0.5*x + 0.5));\r\n    const hy = Math.round(15 * (0.5*y + 0.5));\r\n\r\n    const result = '#' + hx.toString(16) + hy.toString(16) + 'f';\r\n\r\n    return result;\r\n};\r\n\r\nconst drawInfoBufferDemo = (cave: Cave, kind: 'depth'|'normal', gl: WebGLRenderingContext): void => {\r\n    const infoBuffers = new CaveRenderer(gl, cave, null).surfaceInfoBuffers;\r\n    const copyBlit = new BufferRenderer(gl, getShaders(gl).bufferCopy);\r\n\r\n    copyBlit.draw(kind === 'depth' ? infoBuffers.depth : infoBuffers.normal);\r\n\r\n    copyBlit.release();\r\n    gl.deleteTexture(infoBuffers.depth);\r\n    gl.deleteTexture(infoBuffers.normal);\r\n};\r\n\r\nconst drawDetailedCaveDemo = (cave: Cave, gl: WebGLRenderingContext): void => {\r\n    const mousePos = {x: 0, y: 0};\r\n    let mouseDown = false;\r\n    let zoomT = 0;\r\n\r\n    gl.canvas.onmousemove = e => {\r\n        const rect = gl.canvas.getBoundingClientRect();\r\n        mousePos.x = (e.clientX - rect.left) / gl.canvas.width;\r\n        mousePos.y = 1 - (e.clientY - rect.top)  / gl.canvas.height;\r\n    };\r\n\r\n    gl.canvas.onmousedown = _ => mouseDown = true;\r\n    gl.canvas.onmouseleave = \r\n        gl.canvas.onmouseout =\r\n        gl.canvas.onmouseup = _ => mouseDown = false; \r\n\r\n    loadTexture(gl, \"caveWalls.png\", gl.REPEAT)\r\n    .then(normTex => {\r\n        const caveRenderer = new CaveRenderer(gl, cave, normTex);\r\n        const startTime = Date.now();\r\n\r\n        const render = (): void => {\r\n            gl.viewport(0, 0, gl.canvas.width, gl.canvas.height);\r\n            gl.clearColor(0, 0, 0, 1);\r\n            gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n\r\n            const t = Date.now() - startTime;\r\n            if (mouseDown) zoomT += 0.02;\r\n            const zoom = 0.55 + 0.45 * Math.cos(zoomT);\r\n\r\n            caveRenderer.drawDemo(t, zoom, mousePos.x, mousePos.y);\r\n\r\n            requestAnimationFrame(render);\r\n        };\r\n\r\n        requestAnimationFrame(render);\r\n    });\r\n};\r\n","import { PRNG } from 'utils/prng';\r\nimport { WriteGrid, Grid } from 'utils/grid';\r\n\r\nconst getNeighborhood = (map: Grid<boolean>, x: number, y: number): number => {\r\n    let result: number = 0;\r\n\r\n    for (let nx = x-1; nx <= x+1; ++nx) {\r\n        for (let ny = y-1; ny <= y+1; ++ny) {\r\n            if (nx == x && ny == y) continue;\r\n            if (nx < 1 || ny < 1 || nx >= map.width-1 || ny >= map.height-1) result++;\r\n            else result += map.at(nx,ny) ? 1 : 0;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport const runCellularAutomaton = (width: number, height: number, seed: number, population: number, birth: number, survival: number, iterations: number): Grid<boolean> => {\r\n    const result = new WriteGrid<boolean>(width, height);\r\n    const buffer = new WriteGrid<boolean>(width, height);\r\n    const rng = new PRNG(seed);\r\n\r\n    for (let x = 0; x < width; ++x) {\r\n        for (let y = 0; y < height; ++y) {\r\n            const fill = x === 0 || y === 0 || x === width-1 || y === height-1 || rng.next() < population;\r\n            result.write(x, y, fill);\r\n            buffer.write(x, y, fill);\r\n        }\r\n    }\r\n\r\n    for (let i = 0; i < iterations; ++i) {\r\n        for (let x = 1; x < width-1; ++x) {\r\n            for (let y = 1; y < height-1; ++y) {\r\n                const neighbors = getNeighborhood(result, x, y);\r\n                buffer.write(x, y, neighbors >= (result.at(x, y) ? survival : birth));\r\n            }\r\n        }\r\n        result.copyFrom(buffer);\r\n    }\r\n\r\n    return result;\r\n}","import { vec2 } from \"gl-matrix\";\r\n\r\ntype Pt = {\r\n    pt: vec2,\r\n    controlA: vec2,\r\n    controlB: vec2,\r\n};\r\n\r\nexport const smoothCurve = (input: ReadonlyArray<vec2>, resolution: number, curviness: number): vec2[] => {\r\n    const pts: Pt[] = [];\r\n\r\n    if (resolution < 1) resolution = 1;\r\n\r\n    for (let i = 0; i < input.length; ++i) {\r\n        const prev = input[i == 0 ? input.length-1 : i-1];\r\n        const curr = input[i];\r\n        const next = input[(i + 1) % input.length];\r\n\r\n        const lenA = vec2.length(vec2.sub(vec2.create(), prev, curr));\r\n        const lenB = vec2.length(vec2.sub(vec2.create(), curr, next));\r\n\r\n        let midA = vec2.add(vec2.create(), prev, curr);\r\n        vec2.scale(midA, midA, 0.5);\r\n\r\n        let midB = vec2.add(vec2.create(), curr, next);\r\n        vec2.scale(midB, midB, 0.5);\r\n\r\n        let midDiff = vec2.sub(vec2.create(), midA, midB);\r\n        vec2.scale(midDiff, midDiff, curviness);\r\n\r\n        const diffA = vec2.scale(vec2.create(), midDiff,  lenA / (lenA + lenB));\r\n        const diffB = vec2.scale(vec2.create(), midDiff, -lenB / (lenA + lenB));\r\n\r\n        pts.push({\r\n            pt: curr,\r\n            controlA: vec2.add(vec2.create(), diffA, curr),\r\n            controlB: vec2.add(vec2.create(), diffB, curr),\r\n        });\r\n    }\r\n\r\n    const inc = 1 / resolution;\r\n\r\n    const result: vec2[] = [];\r\n    for (let i = 0; i < pts.length; ++i) {\r\n        const curr = pts[i];\r\n        const next = pts[(i + 1) % pts.length];\r\n\r\n        for (let t = 0; t < 1 - (inc / 2); t += inc) {\r\n            let newVal: vec2 = vec2.fromValues(0, 0);\r\n\r\n            vec2.scaleAndAdd(newVal, newVal, curr.pt       , (1-t)*(1-t)*(1-t));\r\n            vec2.scaleAndAdd(newVal, newVal, curr.controlB , 3*(1-t)*(1-t)*t);\r\n            vec2.scaleAndAdd(newVal, newVal, next.controlA , 3*(1-t)*t*t);\r\n            vec2.scaleAndAdd(newVal, newVal, next.pt       , t*t*t);\r\n\r\n            result.push(newVal);\r\n        }\r\n    }\r\n\r\n    return result;\r\n};","import { vec2 } from 'gl-matrix';\r\n\r\nexport const triangulate = (points: ReadonlyArray<vec2>): number[] => {\r\n    const indices: number[] = [];\r\n    const n = points.length;\r\n    if (n < 3) return indices;\r\n\r\n    const V: number[] = new Array(n);\r\n    if (area(points) > 0) {\r\n        for (let v = 0; v < n; v++) V[v] = v;\r\n    } else {\r\n        for (let v = 0; v < n; v++) V[v] = (n - 1) - v;\r\n    }\r\n\r\n    let nv = n;\r\n    let count = 2 * nv;\r\n    for (let v = nv - 1; nv > 2; ) {\r\n        if ((count--) <= 0) return indices;\r\n\r\n        let u = v;\r\n        if (nv <= u) u = 0;\r\n        v = u + 1;\r\n        if (nv <= v) v = 0;\r\n        let w = v + 1;\r\n        if (nv <= w) w = 0;\r\n\r\n        if (snip(points, u, v, w, nv, V)) {\r\n            indices.push(V[u]);\r\n            indices.push(V[v]);\r\n            indices.push(V[w]);\r\n            for (let s = v, t = v + 1; t < nv; s++, t++) V[s] = V[t];\r\n            nv--;\r\n            count = 2 * nv;\r\n        }\r\n    }\r\n\r\n    return indices;\r\n};\r\n\r\nconst area = (points: ReadonlyArray<vec2>): number => {\r\n    let A = 0;\r\n    for (let p = points.length - 1, q = 0; q < points.length; p = q++) {\r\n        A += points[p][0] * points[q][1] - points[q][0] * points[p][1];\r\n    }\r\n    return A / 2;\r\n};\r\n\r\nconst insideTriangle = (A: vec2, B: vec2, C: vec2, P: vec2): boolean => {\r\n    const ax = C[0] - B[0], ay = C[1] - B[1];\r\n    const bx = A[0] - C[0], by = A[1] - C[1];\r\n    const cx = B[0] - A[0], cy = B[1] - A[1];\r\n    const apx = P[0] - A[0], apy = P[1] - A[1];\r\n    const bpx = P[0] - B[0], bpy = P[1] - B[1];\r\n    const cpx = P[0] - C[0], cpy = P[1] - C[1];\r\n\r\n    const aCROSSbp = ax * bpy - ay * bpx;\r\n    const cCROSSap = cx * apy - cy * apx;\r\n    const bCROSScp = bx * cpy - by * cpx;\r\n\r\n    return aCROSSbp >= 0 && bCROSScp >= 0 && cCROSSap >= 0;\r\n};\r\n\r\nconst snip = (points: ReadonlyArray<vec2>, u: number, v: number, w: number, n: number, V: number[]): boolean => {\r\n    const A = points[V[u]];\r\n    const B = points[V[v]];\r\n    const C = points[V[w]];\r\n\r\n    const pdiff = (B[0] - A[0]) * (C[1] - A[1]) - (B[1] - A[1]) * (C[0] - A[0]);\r\n    if (pdiff < 1e-7) return false;\r\n\r\n    for (let p = 0; p < n; p++) {\r\n        if ((p == u) || (p == v) || (p == w)) continue;\r\n        const P = points[V[p]];\r\n        if (insideTriangle(A, B, C, P)) return false;\r\n    }\r\n\r\n    return true;\r\n};","var baseFlatten = require('./_baseFlatten');\n\n/**\n * Flattens `array` a single level deep.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to flatten.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * _.flatten([1, [2, [3, [4]], 5]]);\n * // => [1, 2, [3, [4]], 5]\n */\nfunction flatten(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? baseFlatten(array, 1) : [];\n}\n\nmodule.exports = flatten;\n","var arrayPush = require('./_arrayPush'),\n    isFlattenable = require('./_isFlattenable');\n\n/**\n * The base implementation of `_.flatten` with support for restricting flattening.\n *\n * @private\n * @param {Array} array The array to flatten.\n * @param {number} depth The maximum recursion depth.\n * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n * @param {Array} [result=[]] The initial result value.\n * @returns {Array} Returns the new flattened array.\n */\nfunction baseFlatten(array, depth, predicate, isStrict, result) {\n  var index = -1,\n      length = array.length;\n\n  predicate || (predicate = isFlattenable);\n  result || (result = []);\n\n  while (++index < length) {\n    var value = array[index];\n    if (depth > 0 && predicate(value)) {\n      if (depth > 1) {\n        // Recursively flatten arrays (susceptible to call stack limits).\n        baseFlatten(value, depth - 1, predicate, isStrict, result);\n      } else {\n        arrayPush(result, value);\n      }\n    } else if (!isStrict) {\n      result[result.length] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseFlatten;\n","/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\nmodule.exports = arrayPush;\n","var Symbol = require('./_Symbol'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray');\n\n/** Built-in value references. */\nvar spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;\n\n/**\n * Checks if `value` is a flattenable `arguments` object or array.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n */\nfunction isFlattenable(value) {\n  return isArray(value) || isArguments(value) ||\n    !!(spreadableSymbol && value && value[spreadableSymbol]);\n}\n\nmodule.exports = isFlattenable;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","var baseIsArguments = require('./_baseIsArguments'),\n    isObjectLike = require('./isObjectLike');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\nmodule.exports = isArguments;\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nmodule.exports = baseIsArguments;\n","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n","var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nmodule.exports = isArray;\n","module.exports = \"precision highp float;\\r\\n\\r\\nuniform sampler2D u_tex;\\r\\n\\r\\nvarying vec2 v_uv;\\r\\n\\r\\n#ifdef VERTEX\\r\\n\\r\\n    attribute vec2 i_position;\\r\\n\\r\\n    void main()\\r\\n    {\\r\\n        gl_Position = vec4(i_position, 0, 1);\\r\\n        v_uv = i_position.xy*0.5 + 0.5;\\r\\n    }\\r\\n\\r\\n#endif\\r\\n#ifdef FRAGMENT\\r\\n\\r\\n    void main()\\r\\n    {\\r\\n        gl_FragColor = texture2D(u_tex, v_uv);\\r\\n    }\\r\\n\\r\\n#endif\\r\\n\"","module.exports = \"precision highp float;\\r\\n\\r\\nuniform mat4 u_model;\\r\\nuniform mat4 u_mvp;\\r\\nuniform sampler2D u_depth;\\r\\nuniform sampler2D u_normal;\\r\\nuniform sampler2D u_normalRocks;\\r\\nuniform float u_time;\\r\\nuniform vec3 u_shipWorldPos;\\r\\n\\r\\nvarying vec2 v_uv;\\r\\nvarying vec4 v_worldPos;\\r\\n\\r\\n#ifdef VERTEX\\r\\n\\r\\n    attribute vec2 i_position;\\r\\n\\r\\n    void main()\\r\\n    {\\r\\n        v_uv = i_position*0.5 + 0.5;\\r\\n        v_worldPos = u_model * vec4(i_position, 0, 1);\\r\\n        gl_Position = u_mvp * vec4(i_position, 0, 1);\\r\\n    }\\r\\n\\r\\n#endif\\r\\n#ifdef FRAGMENT\\r\\n\\r\\n    #define BASE_RADIUS 0.25\\r\\n    #define FADE_RADIUS 2.75\\r\\n\\r\\n    mat3 axisAngle(vec3 normalizedAxis, float angle)\\r\\n    {\\r\\n        float x = normalizedAxis.x;\\r\\n        float y = normalizedAxis.y;\\r\\n        float z = normalizedAxis.z;\\r\\n        float s = sin(angle);\\r\\n        float c = cos(angle);\\r\\n        float t = 1. - c;\\r\\n\\r\\n        return mat3(\\r\\n            t*x*x + c   , t*x*y - z*s , t*x*z + y*s ,\\r\\n            t*x*y + z*s , t*y*y + c   , t*y*z - x*s ,\\r\\n            t*x*z - y*s , t*y*z + x*s , t*z*z + c\\r\\n        );\\r\\n    }\\r\\n\\r\\n    float ptLightAmount(vec2 pos, vec2 normal)\\r\\n    {\\r\\n        vec2 toPtLight = pos - u_shipWorldPos.xy;\\r\\n        float intensity = clamp((1. + BASE_RADIUS) - length(toPtLight) / FADE_RADIUS, 0., 1.);\\r\\n        float reflectedLight = clamp(dot(normalize(toPtLight), normal), 0., 1.);\\r\\n        return intensity * reflectedLight;\\r\\n    }\\r\\n\\r\\n    void main()\\r\\n    {\\r\\n        float sint = 1.;//0.5+0.5*sin(u_time/500.);\\r\\n\\r\\n        vec2 surfDir = 2.*texture2D(u_normal, v_uv).rg - 1.;\\r\\n        float surfDepth = clamp(1.- texture2D(u_depth, v_uv).r, 0., 1.);\\r\\n        surfDepth *= surfDepth;\\r\\n\\r\\n        vec2 uv1 = v_uv - sint*surfDir*asin(surfDepth*0.05);\\r\\n        vec2 lookup = uv1;\\r\\n        lookup.x = 1. - lookup.x;\\r\\n        lookup.y = 1. - lookup.y;\\r\\n        vec2 normalRocks2d = 2.*texture2D(u_normalRocks, 5.*lookup).rg - 1.;\\r\\n        normalRocks2d *= -1.;\\r\\n        vec3 normalRocks = normalize(vec3(normalRocks2d, 1. - length(normalRocks2d)));\\r\\n        normalRocks = axisAngle(normalize(vec3(surfDir.y, -surfDir.x, 0)), sint*3.14159*surfDepth) * normalRocks;\\r\\n\\r\\n        vec3 baseColor = vec3(1,1,1) * ptLightAmount(v_worldPos.xy, normalRocks.xy);\\r\\n        gl_FragColor = vec4(mix(baseColor, vec3(0), 1.-sqrt(surfDepth)), 1);\\r\\n    }\\r\\n\\r\\n#endif\"","module.exports = \"precision highp float;\\r\\n\\r\\nuniform sampler2D u_depth;\\r\\nuniform sampler2D u_normal;\\r\\nuniform sampler2D u_normalRocks;\\r\\nuniform mat4 u_perspective;\\r\\nuniform float u_time;\\r\\nuniform float u_zoom;\\r\\nuniform vec2 u_pointLightPos;\\r\\n\\r\\nvarying vec2 v_uv;\\r\\n\\r\\n#ifdef VERTEX\\r\\n\\r\\n    attribute vec2 i_position;\\r\\n\\r\\n    void main()\\r\\n    {\\r\\n        vec2 pospos = i_position - (2.*u_pointLightPos-1.)*(1. - u_zoom);\\r\\n        gl_Position = u_perspective * vec4(pospos, -u_zoom, 1);\\r\\n        v_uv = i_position.xy*0.5 + 0.5;\\r\\n    }\\r\\n\\r\\n#endif\\r\\n#ifdef FRAGMENT\\r\\n\\r\\n    mat3 axisAngle(vec3 normalizedAxis, float angle)\\r\\n    {\\r\\n        float x = normalizedAxis.x;\\r\\n        float y = normalizedAxis.y;\\r\\n        float z = normalizedAxis.z;\\r\\n        float s = sin(angle);\\r\\n        float c = cos(angle);\\r\\n        float t = 1. - c;\\r\\n\\r\\n        return mat3(\\r\\n            t*x*x + c   , t*x*y - z*s , t*x*z + y*s ,\\r\\n            t*x*y + z*s , t*y*y + c   , t*y*z - x*s ,\\r\\n            t*x*z - y*s , t*y*z + x*s , t*z*z + c\\r\\n        );\\r\\n    }\\r\\n\\r\\n    float ptLightAmount(vec2 uv, vec2 normal)\\r\\n    {\\r\\n        vec2 toPtLight = uv - u_pointLightPos;\\r\\n        float ptLightIntensity = 1.6 + .4 * sin(u_time/100.);\\r\\n        float LightAmount = clamp(dot(normalize(toPtLight), normal), 0., 1.);\\r\\n        float distToPtLight = 20. * length(toPtLight);\\r\\n        LightAmount *= ptLightIntensity / max(1., distToPtLight * distToPtLight);\\r\\n        return LightAmount;\\r\\n    }\\r\\n\\r\\n    float dirLightAmount(vec2 dir, vec2 normal)\\r\\n    {\\r\\n        return clamp(dot(normalize(dir), normal), 0., 1.);\\r\\n    }\\r\\n\\r\\n    void main()\\r\\n    {\\r\\n        float sint = 1.;//0.5+0.5*sin(u_time/500.);\\r\\n\\r\\n        vec2 surfDir = 2.*texture2D(u_normal, v_uv).rg - 1.;\\r\\n        float surfDepth = clamp(1.- texture2D(u_depth, v_uv).r, 0., 1.);\\r\\n        surfDepth *= surfDepth;\\r\\n\\r\\n        vec2 uv1 = v_uv - sint*surfDir*asin(surfDepth*0.05);\\r\\n        vec2 lookup = uv1;\\r\\n        lookup.x = 1. - lookup.x;\\r\\n        lookup.y = 1. - lookup.y;\\r\\n        vec2 normalRocks2d = 2.*texture2D(u_normalRocks, 5.*lookup).rg - 1.;\\r\\n        normalRocks2d *= -1.;\\r\\n        vec3 normalRocks = normalize(vec3(normalRocks2d, 1. - length(normalRocks2d)));\\r\\n\\r\\n        normalRocks = axisAngle(normalize(vec3(surfDir.y, -surfDir.x, 0)), sint*3.14159*surfDepth) * normalRocks;\\r\\n\\r\\n        vec3 baseColor = vec3(0,0,0);\\r\\n\\r\\n        // Point light\\r\\n        baseColor += vec3(1,1,1) * ptLightAmount(v_uv, normalRocks.xy);\\r\\n\\r\\n        // Dir lights\\r\\n        baseColor += vec3(1,.2,.1) * dirLightAmount(vec2(1,-.5), normalRocks.xy);\\r\\n        baseColor += vec3(.2,1,.1) * dirLightAmount(vec2(0,1), normalRocks.xy);\\r\\n        baseColor += vec3(.5,.5,1) * dirLightAmount(vec2(-1,-.5), normalRocks.xy);\\r\\n\\r\\n        gl_FragColor = mix(vec4(baseColor, 1), vec4(0,0,0,1), 1.-sqrt(surfDepth));\\r\\n    }\\r\\n\\r\\n#endif\"","module.exports = \"precision highp float;\\r\\n\\r\\n#ifdef VERTEX\\r\\n\\r\\n    attribute vec2 i_position;\\r\\n\\r\\n    void main()\\r\\n    {\\r\\n        gl_Position = vec4(i_position, 0, 1);\\r\\n    }\\r\\n\\r\\n#endif\\r\\n#ifdef FRAGMENT\\r\\n\\r\\n    void main()\\r\\n    {\\r\\n        gl_FragColor = vec4(1, 1, 1, 1);\\r\\n    }\\r\\n\\r\\n#endif\"","module.exports = \"precision highp float;\\r\\n\\r\\nuniform sampler2D u_tex;\\r\\nuniform vec2 u_resolution;\\r\\nuniform vec2 u_direction;\\r\\n\\r\\nvarying vec2 v_uv;\\r\\n\\r\\n#ifdef VERTEX\\r\\n\\r\\n    attribute vec2 i_position;\\r\\n\\r\\n    void main()\\r\\n    {\\r\\n        gl_Position = vec4(i_position, 0, 1);\\r\\n        v_uv = i_position.xy*0.5 + 0.5;\\r\\n    }\\r\\n\\r\\n#endif\\r\\n#ifdef FRAGMENT\\r\\n\\r\\n    vec4 blur13(sampler2D image, vec2 uv, vec2 resolution, vec2 direction)\\r\\n    {\\r\\n        vec4 color = vec4(0.0);\\r\\n        vec2 off1 = vec2(1.411764705882353) * direction;\\r\\n        vec2 off2 = vec2(3.2941176470588234) * direction;\\r\\n        vec2 off3 = vec2(5.176470588235294) * direction;\\r\\n        color += texture2D(image, uv) * 0.1964825501511404;\\r\\n        color += texture2D(image, uv + (off1 / resolution)) * 0.2969069646728344;\\r\\n        color += texture2D(image, uv - (off1 / resolution)) * 0.2969069646728344;\\r\\n        color += texture2D(image, uv + (off2 / resolution)) * 0.09447039785044732;\\r\\n        color += texture2D(image, uv - (off2 / resolution)) * 0.09447039785044732;\\r\\n        color += texture2D(image, uv + (off3 / resolution)) * 0.010381362401148057;\\r\\n        color += texture2D(image, uv - (off3 / resolution)) * 0.010381362401148057;\\r\\n        return color;\\r\\n    }\\r\\n\\r\\n    void main()\\r\\n    {\\r\\n        gl_FragColor = blur13(u_tex, v_uv, u_resolution, u_direction);\\r\\n    }\\r\\n\\r\\n#endif\"","module.exports = \"precision highp float;\\r\\n\\r\\nuniform sampler2D u_tex;\\r\\nuniform vec2 u_resolution;\\r\\n\\r\\nvarying vec2 v_uv;\\r\\n\\r\\n#ifdef VERTEX\\r\\n\\r\\n    attribute vec2 i_position;\\r\\n\\r\\n    void main()\\r\\n    {\\r\\n        gl_Position = vec4(i_position, 0, 1);\\r\\n        v_uv = i_position.xy*0.5 + 0.5;\\r\\n    }\\r\\n\\r\\n#endif\\r\\n#ifdef FRAGMENT\\r\\n\\r\\n    vec2 sampleTap(vec4 tap, vec2 dir)\\r\\n    {\\r\\n        dir /= u_resolution;\\r\\n        vec4 outTap = texture2D(u_tex, v_uv + dir);\\r\\n        return (outTap - tap).r * dir;\\r\\n    }\\r\\n\\r\\n    void main()\\r\\n    {\\r\\n        vec4 tap = texture2D(u_tex, v_uv);\\r\\n\\r\\n        vec2 dir = normalize(\\r\\n              sampleTap(tap, vec2( 1.5, 0.))\\r\\n            + sampleTap(tap, vec2(-1.5, 0.))\\r\\n            + sampleTap(tap, vec2(0., -1.5))\\r\\n            + sampleTap(tap, vec2(0.,  1.5))\\r\\n            + sampleTap(tap, vec2( 1.5,  1.5))\\r\\n            + sampleTap(tap, vec2( 1.5, -1.5))\\r\\n            + sampleTap(tap, vec2(-1.5, -1.5))\\r\\n            + sampleTap(tap, vec2(-1.5,  1.5))\\r\\n        );\\r\\n\\r\\n        gl_FragColor = vec4(dir*0.5+0.5, 1, 1);\\r\\n    }\\r\\n\\r\\n#endif\"","module.exports = \"precision highp float;\\r\\n\\r\\nuniform mat4 u_mvp;\\r\\n\\r\\n#ifdef VERTEX\\r\\n\\r\\n    attribute vec2 i_position;\\r\\n\\r\\n    void main()\\r\\n    {\\r\\n        gl_Position = u_mvp * vec4(i_position, 0, 1);\\r\\n    }\\r\\n\\r\\n#endif\\r\\n#ifdef FRAGMENT\\r\\n\\r\\n    void main()\\r\\n    {\\r\\n        gl_FragColor = vec4(0.4, 0.4, 0.4, 1);\\r\\n    }\\r\\n\\r\\n#endif\\r\\n\"","import { FrameBufferTexture } from \"./frameBufferTexture\";\r\nimport { BufferRenderer } from \"./bufferRenderer\";\r\nimport { getShaders } from 'shaders';\r\n\r\nexport class GaussianBlur {\r\n    private readonly gl: WebGLRenderingContext;\r\n    private readonly width: number;\r\n    private readonly height: number;\r\n\r\n    private readonly bufferRenderer: BufferRenderer;\r\n    private readonly frameTex0: FrameBufferTexture;\r\n    private readonly frameTex1: FrameBufferTexture;\r\n\r\n    constructor(gl: WebGLRenderingContext, width: number, height: number) {\r\n        this.gl = gl;\r\n        this.width = width;\r\n        this.height = height;\r\n        this.bufferRenderer = new BufferRenderer(gl, getShaders(gl).gaussianBlur);\r\n        this.frameTex0 = new FrameBufferTexture(gl, width, height);\r\n        this.frameTex1 = new FrameBufferTexture(gl, width, height);\r\n    }\r\n\r\n    run(texture: WebGLTexture, iterations: number) {\r\n        const gl = this.gl;\r\n\r\n        if (iterations < 1) iterations = 1;\r\n\r\n        for (let i = 0; i < iterations; ++i) {\r\n            gl.bindFramebuffer(gl.FRAMEBUFFER, this.frameTex0.framebuffer);\r\n            if (i === 0) gl.viewport(0, 0, this.width, this.height);\r\n\r\n            this.bufferRenderer.draw(i === 0 ? texture : this.frameTex1.texture, (gl, shader) => {\r\n                gl.uniform2f(gl.getUniformLocation(shader, \"u_resolution\"), this.width, this.height);\r\n                gl.uniform2f(gl.getUniformLocation(shader, \"u_direction\"), 1, 0);\r\n            });\r\n\r\n            gl.bindFramebuffer(gl.FRAMEBUFFER, this.frameTex1.framebuffer);\r\n\r\n            this.bufferRenderer.draw(this.frameTex0.texture, (gl, shader) => {\r\n                gl.uniform2f(gl.getUniformLocation(shader, \"u_resolution\"), this.width, this.height);\r\n                gl.uniform2f(gl.getUniformLocation(shader, \"u_direction\"), 0, 1);\r\n            });\r\n        }\r\n    }\r\n\r\n    get resultTexture(): WebGLTexture {\r\n        return this.frameTex1.texture;\r\n    }\r\n\r\n    release() {\r\n        this.bufferRenderer.release();\r\n        this.frameTex0.release();\r\n        this.frameTex1.release();\r\n    }\r\n\r\n    releaseTexture(): WebGLTexture {\r\n        this.bufferRenderer.release();\r\n        this.frameTex0.release();\r\n        return this.frameTex1.releaseTexture();\r\n    }\r\n}","import { LocalNetwork } from \"networking\";\r\nimport { GameServer } from \"game/server\";\r\nimport { GameClient } from \"game/client\";\r\nimport { ServerPacket, ClientPacket, serverPacketSerializer, clientPacketSerializer } from \"game/state\";\r\n\r\nexport const initGame = (): void => {\r\n    if (typeof (window as any).io === 'undefined') {\r\n        console.log('Socket.io not available.');\r\n    } else {\r\n        console.log('Socket.io found!');\r\n        //const socket = io();\r\n    }\r\n\r\n    const canvas = document.getElementById('game-canvas') as HTMLCanvasElement;\r\n    const span0 =   document.getElementById('game-span') as HTMLSpanElement;\r\n    const network = new LocalNetwork<ServerPacket, ClientPacket>(serverPacketSerializer, clientPacketSerializer);\r\n\r\n    const netClient = network.createClient();\r\n\r\n    const server = new GameServer(network.server);\r\n    const client = new GameClient(canvas, span0, netClient, 1338);\r\n\r\n    server.notifyClientConnect(netClient.id);\r\n\r\n    const onResize = () => {\r\n        canvas.width = window.innerWidth;\r\n        canvas.height = window.innerHeight;\r\n        client.notifyCanvasResize();\r\n    };\r\n\r\n    window.addEventListener('resize', onResize);\r\n    onResize();\r\n};\r\n\r\nexport const initLocalMultiGame = (): void => {\r\n    const canvas0 = document.getElementById('canvas-0') as HTMLCanvasElement;\r\n    const span0 =   document.getElementById('span-0') as HTMLSpanElement;\r\n    const canvas1 = document.getElementById('canvas-1') as HTMLCanvasElement;\r\n    const span1 =   document.getElementById('span-1') as HTMLSpanElement;\r\n    const network = new LocalNetwork<ServerPacket, ClientPacket>(serverPacketSerializer, clientPacketSerializer);\r\n\r\n    const server = new GameServer(network.server);\r\n\r\n    const waitAndAddClient = (canvas: HTMLCanvasElement, span: HTMLSpanElement, millis: number) => \r\n        setTimeout(\r\n            () => { \r\n                const client = network.createClient();\r\n                new GameClient(canvas, span, client, 1338);\r\n                server.notifyClientConnect(client.id);\r\n            },\r\n            millis\r\n        );\r\n\r\n    waitAndAddClient(canvas0, span0,  500);\r\n    waitAndAddClient(canvas1, span1, 1000);\r\n};\r\n","import { NetConnection, TICK_LENGTH_MS } from \"networking\";\r\nimport { ClientPacket, ServerPacket, GameState, PlayerMap, PlayerInputs, PlayerState } from \"./state\";\r\n\r\nexport class GameServer {\r\n    private readonly net: NetConnection<ServerPacket, ClientPacket>;\r\n    private readonly tickIntervalID: number;\r\n    private readonly state: GameState;\r\n    private readonly latestPlayerInputs: PlayerMap<PlayerInputs>;\r\n\r\n    constructor(net: NetConnection<ServerPacket, ClientPacket>) {\r\n        this.net = net;\r\n        this.tickIntervalID = setInterval(this.tick.bind(this), TICK_LENGTH_MS);\r\n        this.state = GameState.create();\r\n        this.latestPlayerInputs = {};\r\n    }\r\n\r\n    private tick() {\r\n        const newPackets = this.net.receiveAllPackets();\r\n\r\n        for (let i = 0; i < newPackets.length; ++i) {\r\n            const packet = newPackets[i];\r\n            this.latestPlayerInputs[packet.senderId] = packet.packet;\r\n        }\r\n\r\n        GameState.step(this.state, this.state, this.latestPlayerInputs);\r\n\r\n        this.net.sendPacket(this.state);\r\n    }\r\n\r\n    notifyClientConnect(id: string) {\r\n        this.state.players[id] = PlayerState.create();\r\n    }\r\n\r\n    notifyClientDisconnect(id: string) {\r\n        delete this.state.players[id];\r\n    }\r\n\r\n    release() {\r\n        clearInterval(this.tickIntervalID);\r\n    }\r\n}\r\n","import { NetConnection, TICK_LENGTH_MS } from \"networking\";\r\nimport { ClientPacket, ServerPacket, GameState, PlayerInputs } from \"./state\";\r\nimport { GameRenderer } from \"./render/gameRenderer\";\r\nimport { Cave, generateCave } from \"caveGenerator\";\r\nimport { loadTexture } from \"graphics/textureLoader\";\r\nimport { InputGrabber } from \"utils/inputGrabber\";\r\nimport { vec2, vec3 } from \"gl-matrix\";\r\nimport { Camera } from \"graphics/camera\";\r\nimport { generateUID } from \"utils/uid\";\r\n\r\nconst gsx = GameState.create();\r\nconst v3x = vec3.create();\r\n\r\ntype LazyResources = {\r\n    readonly caveTexture: WebGLTexture,\r\n};\r\n\r\nconst loadResources = (gl: WebGLRenderingContext): Promise<LazyResources> =>\r\n    Promise.all([\r\n        loadTexture(gl, \"caveWalls.png\", gl.REPEAT)\r\n    ])\r\n    .then(([caveTexture]) => ({\r\n        caveTexture\r\n    }));\r\n\r\nexport class GameClient {\r\n    private readonly gl: WebGLRenderingContext;\r\n    private readonly span: HTMLSpanElement;\r\n    private readonly net: NetConnection<ClientPacket, ServerPacket>;\r\n    private readonly inputGrabber: InputGrabber;\r\n\r\n    private gameRenderer: GameRenderer;\r\n    private running: boolean;\r\n    private onStoppedRunningCallback?: () => void;\r\n\r\n    private readonly inputStack: PlayerInputs[];\r\n\r\n    //private prevState: GameState;\r\n    private curState: GameState;\r\n    private lastUpdateTime: number;\r\n    private tickAccumulator: number;\r\n\r\n\r\n    constructor(canvas: HTMLCanvasElement, span: HTMLSpanElement, net: NetConnection<ClientPacket, ServerPacket>, seed: number) {\r\n        const gl = canvas.getContext('webgl') as WebGLRenderingContext;\r\n        const cave = generateCave(seed); \r\n\r\n        this.gl = gl;\r\n        this.span = span;\r\n        this.net = net;\r\n        this.inputGrabber = new InputGrabber(canvas);\r\n        this.running = false;\r\n\r\n        this.inputStack = [];\r\n        //this.prevState = GameState.create();\r\n        this.curState = GameState.create();\r\n\r\n        loadResources(gl).then(resources => {\r\n            this.gameRenderer = new GameRenderer(gl, cave, resources.caveTexture);\r\n            this.runUpdateLoop();\r\n        });\r\n    }\r\n\r\n    private runUpdateLoop() {\r\n        this.running = true;\r\n\r\n        const onAnimationFrame = () => {\r\n            this.mainLoop();\r\n\r\n            if (this.running) {\r\n                requestAnimationFrame(onAnimationFrame);\r\n            } else {\r\n                this.stoppedRunning();\r\n            }\r\n        };\r\n\r\n        this.lastUpdateTime = Date.now();\r\n        this.tickAccumulator = 0;\r\n\r\n        onAnimationFrame();\r\n    }\r\n\r\n    private mainLoop() {\r\n        const newTime = Date.now();\r\n        const dt = newTime - this.lastUpdateTime;\r\n        this.lastUpdateTime = newTime;\r\n        this.tickAccumulator += dt;\r\n\r\n        const maybeNewPacket = this.net.receivePacket();\r\n        if (maybeNewPacket) {\r\n            this.receiveStateFromServer(maybeNewPacket.packet);\r\n        }\r\n\r\n        if (!this.curState.players[this.net.id]) return;\r\n\r\n        while (this.tickAccumulator >= TICK_LENGTH_MS) {\r\n            this.tickAccumulator -= TICK_LENGTH_MS;\r\n\r\n            const latestInputs = this.readInputs(this.curState.tick);\r\n            GameState.predict(gsx, this.curState, latestInputs, this.net.id);\r\n            this.inputStack.push(latestInputs);\r\n\r\n            if (this.inputStack.length > 100) {\r\n                this.inputStack.splice(0, 1);\r\n            }\r\n\r\n            this.net.sendPacket(latestInputs);\r\n\r\n            this.render();\r\n        }\r\n\r\n    //  this.render();\r\n    }\r\n    \r\n    private render() {\r\n        this.gameRenderer.draw(this.curState, this.net.id);\r\n    //  this.span.innerText = `${this.curState.tick} : ${this.curState.predictedTick}`;\r\n    //  GameState.lerp(gsx, this.prevState, this.curState, this.tickAccumulator / TICK_LENGTH_MS);\r\n    //  this.gameRenderer.draw(gsx, this.net.id);\r\n    }\r\n\r\n    private receiveStateFromServer(state: GameState) {\r\n        if (!state.players[this.net.id]) return;\r\n\r\n        let matchIndex = this.inputStack.length;\r\n        while (--matchIndex >= 0) {\r\n            if (state.players[this.net.id].lastInputUID === this.inputStack[matchIndex].uid) break;\r\n        }\r\n\r\n        //this.prevState = this.curState;\r\n        this.curState = state;\r\n\r\n        if (matchIndex >= 0) {\r\n            for (let i = matchIndex + 1; i < this.inputStack.length; ++i) {\r\n                //this.prevState = this.curState;\r\n                this.curState = GameState.predict(\r\n                    GameState.create(), \r\n                    this.curState, \r\n                    this.inputStack[i], \r\n                    this.net.id\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    private readInputs(tick: number): PlayerInputs {\r\n        Camera.screenPointToWorldXYPlanePoint(this.gameRenderer.camera, this.inputGrabber.mouseScreenPoint, v3x);\r\n\r\n        return {\r\n            tick,\r\n            uid: generateUID(),\r\n            pressing: this.inputGrabber.mouseDown,\r\n            mouseWorldPos: vec2.fromValues(v3x[0], v3x[1]),\r\n        };\r\n    }\r\n\r\n    private stoppedRunning() {\r\n        this.gameRenderer.release();\r\n        this.inputGrabber.release();\r\n        (this.gl.getExtension('WEBGL_lose_context') as WEBGL_lose_context).loseContext();\r\n\r\n        if (this.onStoppedRunningCallback) {\r\n            this.onStoppedRunningCallback();\r\n        }\r\n    }\r\n\r\n    notifyCanvasResize() {\r\n        if (this.gameRenderer) {\r\n            this.gameRenderer.notifyCanvasResize();\r\n        }\r\n    }\r\n\r\n    release(stoppedCallback?: () => void) {\r\n        this.onStoppedRunningCallback = stoppedCallback;\r\n        this.running = false;\r\n    }\r\n}","import { Cave } from 'caveGenerator';\r\nimport { CaveRenderer } from './caveRenderer';\r\nimport { ShipRenderer } from './shipRenderer';\r\nimport { Camera } from 'graphics/camera';\r\nimport { Transform } from 'graphics/transform';\r\nimport { quat } from 'gl-matrix';\r\nimport { GameState } from 'game/state';\r\nimport { Const } from 'utils/lang';\r\n\r\nconst trx = Transform.create();\r\n\r\nexport class GameRenderer {\r\n    private readonly gl: WebGLRenderingContext;\r\n    private readonly caveRenderer: CaveRenderer;\r\n    private readonly shipRenderer: ShipRenderer;\r\n    private readonly _camera: Camera;\r\n\r\n    get camera(): Const<Camera> {\r\n        return this._camera;\r\n    }\r\n\r\n    constructor(gl: WebGLRenderingContext, cave: Const<Cave>, normalsTexture: WebGLTexture | null) {\r\n        this.gl = gl;\r\n        this.caveRenderer = new CaveRenderer(gl, cave, normalsTexture);\r\n        this.shipRenderer = new ShipRenderer(gl);\r\n        this._camera = Camera.create();\r\n\r\n        this._camera.transform.position[2] = 5;\r\n\r\n        gl.clearColor(0, 0, 0, 1);\r\n        this.notifyCanvasResize();\r\n    }\r\n\r\n    draw(state: Const<GameState>, localPlayerId: string) {\r\n        const gl = this.gl;\r\n\r\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n\r\n        for (let id in state.players) {\r\n            let player = state.players[id];\r\n\r\n            trx.position[0] = player.position[0];\r\n            trx.position[1] = player.position[1];\r\n\r\n            if (id === localPlayerId) {\r\n                this.caveRenderer.draw(this._camera, trx.position);\r\n            }\r\n\r\n            quat.fromEuler(trx.rotation, 0, 0, 180 / Math.PI * player.angle);\r\n            this.shipRenderer.draw(this._camera, trx);\r\n        }\r\n    }\r\n\r\n    notifyCanvasResize() {\r\n        const gl = this.gl;\r\n        gl.viewport(0, 0, gl.canvas.width, gl.canvas.height);\r\n        Camera.updateAspectRatio(this._camera, gl.canvas.width, gl.canvas.height);\r\n    }\r\n\r\n    release() {\r\n        this.caveRenderer.release();\r\n        this.shipRenderer.release();\r\n    }\r\n}","import { mat4 } from \"gl-matrix\";\r\nimport { getShaders } from \"shaders\";\r\nimport { Transform } from \"graphics/transform\";\r\nimport { Camera } from \"graphics/camera\";\r\nimport { Const } from \"utils/lang\";\r\n\r\nconst m4x = mat4.create();\r\nconst m4y = mat4.create();\r\n\r\nconst verts: ReadonlyArray<number> = [0.2492,0,0.1102,-0.0237,0.1333,-0.081,0.04749999,-0.0506,0.0031,-0.0564,-0.0337,-0.1155,-0.003200002,-0.1747,-0.09190001,-0.149,-0.1102,-0.084,-0.158,-0.0931,-0.158,-0.0332,-0.1347,0,-0.158,0.0332,-0.158,0.0931,-0.1102,0.084,-0.09190001,0.149,-0.003200002,0.1747,-0.0337,0.1155,0.0031,0.0564,0.04749999,0.0506,0.1333,0.081,0.1102,0.0237];\r\nconst tris:  ReadonlyArray<number> = [1,0,11,3,1,11,4,3,11,5,4,11,8,5,11,9,8,11,10,9,11,2,1,3,6,5,7,7,5,8,21,11,0,19,11,21,18,11,19,17,11,18,14,11,17,13,11,14,12,11,13,20,19,21,15,14,17,16,15,17];\r\n\r\nexport class ShipRenderer {\r\n    private readonly gl: WebGLRenderingContext;\r\n    private readonly vertexBuffer: WebGLBuffer;\r\n    private readonly indexBuffer: WebGLBuffer;\r\n\r\n    constructor(gl: WebGLRenderingContext) {\r\n        this.gl = gl;\r\n\r\n        this.vertexBuffer = gl.createBuffer() as WebGLBuffer;\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer);\r\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(verts), gl.STATIC_DRAW);\r\n\r\n        this.indexBuffer = gl.createBuffer() as WebGLBuffer;\r\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer);\r\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(tris), gl.STATIC_DRAW);\r\n    }\r\n\r\n    draw(camera: Const<Camera>, ship: Const<Transform>) {\r\n        const gl = this.gl;\r\n        const shader = getShaders(gl).ship;\r\n\r\n        gl.useProgram(shader);\r\n\r\n        Transform.toMatrix(ship, m4x);\r\n        Camera.getViewMatrix(camera, m4y);\r\n        mat4.mul(m4x, m4y, m4x);\r\n        Camera.getProjectionMatrix(camera, m4y);\r\n        mat4.mul(m4x, m4y, m4x);\r\n        gl.uniformMatrix4fv(gl.getUniformLocation(shader, 'u_mvp'), false, m4x);\r\n\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer);\r\n        const posLoc = gl.getAttribLocation(shader, \"i_position\");\r\n        gl.enableVertexAttribArray(posLoc);\r\n        gl.vertexAttribPointer(posLoc, 2, gl.FLOAT, false, 0, 0);\r\n\r\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer);\r\n        gl.drawElements(gl.TRIANGLES, tris.length, gl.UNSIGNED_SHORT, 0);\r\n    }\r\n\r\n    release() {\r\n        const gl = this.gl;\r\n\r\n        gl.deleteBuffer(this.vertexBuffer);\r\n        gl.deleteBuffer(this.indexBuffer);\r\n    }\r\n}\r\n","import { vec2 } from \"gl-matrix\";\r\nimport { EventBinder } from \"./eventBinder\";\r\n\r\nexport class InputGrabber {\r\n    private readonly eventBinder: EventBinder;\r\n    private readonly canvas: HTMLCanvasElement;\r\n    readonly mouseScreenPoint: vec2;\r\n    private _mouseDown: boolean;\r\n    private canvasBoundingRect: { left: number, top: number };\r\n\r\n    constructor(canvas: HTMLCanvasElement) {\r\n        this.eventBinder = new EventBinder(this);\r\n        this.canvas = canvas;\r\n        this._mouseDown = false;\r\n        this.mouseScreenPoint = vec2.create();\r\n        this.canvasBoundingRect = { left: 0, top: 0 };\r\n\r\n        this.eventBinder.bind(canvas, 'mousemove',  this.onMouseMove);\r\n        this.eventBinder.bind(canvas, 'mousedown',  this.onMouseDown);\r\n        this.eventBinder.bind(canvas, 'mouseup',    this.onMouseButtonNegative);\r\n        this.eventBinder.bind(canvas, 'mouseout',   this.onMouseButtonNegative);\r\n        this.eventBinder.bind(canvas, 'mouseleave', this.onMouseButtonNegative);\r\n\r\n        this.eventBinder.bind(window, 'scroll', this.onWindowChange);\r\n        this.eventBinder.bind(window, 'resize', this.onWindowChange);\r\n\r\n        this.onWindowChange();\r\n    }\r\n\r\n    get mouseDown(): boolean {\r\n        return this._mouseDown;\r\n    }\r\n\r\n    private onMouseDown() {\r\n        this._mouseDown = true;\r\n    }\r\n\r\n    private onMouseButtonNegative() {\r\n        this._mouseDown = false;\r\n    }\r\n\r\n    private onWindowChange() {\r\n        const clientRect = this.canvas.getBoundingClientRect();\r\n        this.canvasBoundingRect.left = clientRect.left  + this.canvas.clientLeft;\r\n        this.canvasBoundingRect.top = clientRect.top + this.canvas.clientTop;\r\n    }\r\n\r\n    private onMouseMove(e: MouseEvent) {\r\n        this.mouseScreenPoint[0] = (e.clientX - this.canvasBoundingRect.left) / this.canvas.width;\r\n        this.mouseScreenPoint[1] = 1 - (e.clientY - this.canvasBoundingRect.top)  / this.canvas.height;\r\n    }\r\n\r\n    release() {\r\n        this.eventBinder.unbindAll();\r\n    }\r\n}","type EventListenerTarget = {\r\n    addEventListener: (event: string, listener: Function) => void,\r\n    removeEventListener: (event: string, listener: Function) => void,\r\n};\r\n\r\ntype ListenerBinding = {\r\n    target: EventListenerTarget,\r\n    event: string,\r\n    listener: Function,\r\n};\r\n\r\nexport class EventBinder {\r\n    private readonly bindings: ListenerBinding[];\r\n    private readonly thisArg: any;\r\n\r\n    constructor(thisArg: any) {\r\n        this.bindings = [];\r\n        this.thisArg = thisArg;\r\n    }\r\n\r\n    bind(target: EventListenerTarget, event: string, listener: Function) {\r\n        const binding = { target, event, listener: listener.bind(this.thisArg) };\r\n        target.addEventListener(event, binding.listener);\r\n        this.bindings.push(binding);\r\n    }\r\n\r\n    unbindAll() {\r\n        this.bindings.forEach(x => x.target.removeEventListener(x.event, x.listener));\r\n        this.bindings.length = 0;\r\n    }\r\n}\r\n","export const generateUID = (): string => \r\n    Math.random().toString(36).substr(2);","var baseIsNative = require('./_baseIsNative'),\n    getValue = require('./_getValue');\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nmodule.exports = getNative;\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n","var listCacheClear = require('./_listCacheClear'),\n    listCacheDelete = require('./_listCacheDelete'),\n    listCacheGet = require('./_listCacheGet'),\n    listCacheHas = require('./_listCacheHas'),\n    listCacheSet = require('./_listCacheSet');\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\nmodule.exports = ListCache;\n","var eq = require('./eq');\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = assocIndexOf;\n","var getNative = require('./_getNative');\n\n/* Built-in method references that are verified to be native. */\nvar nativeCreate = getNative(Object, 'create');\n\nmodule.exports = nativeCreate;\n","var isKeyable = require('./_isKeyable');\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\nmodule.exports = getMapData;\n","var assignValue = require('./_assignValue'),\n    baseAssignValue = require('./_baseAssignValue');\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  var isNew = !object;\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    if (newValue === undefined) {\n      newValue = source[key];\n    }\n    if (isNew) {\n      baseAssignValue(object, key, newValue);\n    } else {\n      assignValue(object, key, newValue);\n    }\n  }\n  return object;\n}\n\nmodule.exports = copyObject;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map');\n\nmodule.exports = Map;\n","var arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeys = require('./_baseKeys'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nmodule.exports = keys;\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\nmodule.exports = baseUnary;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    }\n\n    // Legacy `process.binding('util')` for Node.js < 10.\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\nmodule.exports = nodeUtil;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\nmodule.exports = isPrototype;\n","var arrayFilter = require('./_arrayFilter'),\n    stubArray = require('./stubArray');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n  if (object == null) {\n    return [];\n  }\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function(symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\n\nmodule.exports = getSymbols;\n","var DataView = require('./_DataView'),\n    Map = require('./_Map'),\n    Promise = require('./_Promise'),\n    Set = require('./_Set'),\n    WeakMap = require('./_WeakMap'),\n    baseGetTag = require('./_baseGetTag'),\n    toSource = require('./_toSource');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    setTag = '[object Set]',\n    weakMapTag = '[object WeakMap]';\n\nvar dataViewTag = '[object DataView]';\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\nmodule.exports = getTag;\n","var Uint8Array = require('./_Uint8Array');\n\n/**\n * Creates a clone of `arrayBuffer`.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction cloneArrayBuffer(arrayBuffer) {\n  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n  new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n  return result;\n}\n\nmodule.exports = cloneArrayBuffer;\n","/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\nmodule.exports = eq;\n","var baseGetTag = require('./_baseGetTag'),\n    isObject = require('./isObject');\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;\n","/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\nmodule.exports = toSource;\n","var baseAssignValue = require('./_baseAssignValue'),\n    eq = require('./eq');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nmodule.exports = assignValue;\n","var defineProperty = require('./_defineProperty');\n\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nmodule.exports = baseAssignValue;\n","var baseTimes = require('./_baseTimes'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isIndex = require('./_isIndex'),\n    isTypedArray = require('./isTypedArray');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = arrayLikeKeys;\n","var root = require('./_root'),\n    stubFalse = require('./stubFalse');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\nmodule.exports = isBuffer;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;\n","/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\nmodule.exports = overArg;\n","var isFunction = require('./isFunction'),\n    isLength = require('./isLength');\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nmodule.exports = isArrayLike;\n","var arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeysIn = require('./_baseKeysIn'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n}\n\nmodule.exports = keysIn;\n","/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\nmodule.exports = stubArray;\n","var arrayPush = require('./_arrayPush'),\n    getPrototype = require('./_getPrototype'),\n    getSymbols = require('./_getSymbols'),\n    stubArray = require('./stubArray');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own and inherited enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n  var result = [];\n  while (object) {\n    arrayPush(result, getSymbols(object));\n    object = getPrototype(object);\n  }\n  return result;\n};\n\nmodule.exports = getSymbolsIn;\n","var overArg = require('./_overArg');\n\n/** Built-in value references. */\nvar getPrototype = overArg(Object.getPrototypeOf, Object);\n\nmodule.exports = getPrototype;\n","var arrayPush = require('./_arrayPush'),\n    isArray = require('./isArray');\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\nmodule.exports = baseGetAllKeys;\n","var baseClone = require('./_baseClone');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * This method is like `_.clone` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @returns {*} Returns the deep cloned value.\n * @see _.clone\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var deep = _.cloneDeep(objects);\n * console.log(deep[0] === objects[0]);\n * // => false\n */\nfunction cloneDeep(value) {\n  return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n}\n\nmodule.exports = cloneDeep;\n","var Stack = require('./_Stack'),\n    arrayEach = require('./_arrayEach'),\n    assignValue = require('./_assignValue'),\n    baseAssign = require('./_baseAssign'),\n    baseAssignIn = require('./_baseAssignIn'),\n    cloneBuffer = require('./_cloneBuffer'),\n    copyArray = require('./_copyArray'),\n    copySymbols = require('./_copySymbols'),\n    copySymbolsIn = require('./_copySymbolsIn'),\n    getAllKeys = require('./_getAllKeys'),\n    getAllKeysIn = require('./_getAllKeysIn'),\n    getTag = require('./_getTag'),\n    initCloneArray = require('./_initCloneArray'),\n    initCloneByTag = require('./_initCloneByTag'),\n    initCloneObject = require('./_initCloneObject'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isMap = require('./isMap'),\n    isObject = require('./isObject'),\n    isSet = require('./isSet'),\n    keys = require('./keys');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\ncloneableTags[boolTag] = cloneableTags[dateTag] =\ncloneableTags[float32Tag] = cloneableTags[float64Tag] =\ncloneableTags[int8Tag] = cloneableTags[int16Tag] =\ncloneableTags[int32Tag] = cloneableTags[mapTag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[setTag] =\ncloneableTags[stringTag] = cloneableTags[symbolTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Deep clone\n *  2 - Flatten inherited properties\n *  4 - Clone symbols\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, bitmask, customizer, key, object, stack) {\n  var result,\n      isDeep = bitmask & CLONE_DEEP_FLAG,\n      isFlat = bitmask & CLONE_FLAT_FLAG,\n      isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return copyArray(value, result);\n    }\n  } else {\n    var tag = getTag(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if (isBuffer(value)) {\n      return cloneBuffer(value, isDeep);\n    }\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      result = (isFlat || isFunc) ? {} : initCloneObject(value);\n      if (!isDeep) {\n        return isFlat\n          ? copySymbolsIn(value, baseAssignIn(result, value))\n          : copySymbols(value, baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n      result = initCloneByTag(value, tag, isDeep);\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n  stack.set(value, result);\n\n  if (isSet(value)) {\n    value.forEach(function(subValue) {\n      result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n    });\n\n    return result;\n  }\n\n  if (isMap(value)) {\n    value.forEach(function(subValue, key) {\n      result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n    });\n\n    return result;\n  }\n\n  var keysFunc = isFull\n    ? (isFlat ? getAllKeysIn : getAllKeys)\n    : (isFlat ? keysIn : keys);\n\n  var props = isArr ? undefined : keysFunc(value);\n  arrayEach(props || value, function(subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    }\n    // Recursively populate clone (susceptible to call stack limits).\n    assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n  });\n  return result;\n}\n\nmodule.exports = baseClone;\n","var ListCache = require('./_ListCache'),\n    stackClear = require('./_stackClear'),\n    stackDelete = require('./_stackDelete'),\n    stackGet = require('./_stackGet'),\n    stackHas = require('./_stackHas'),\n    stackSet = require('./_stackSet');\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\nmodule.exports = Stack;\n","/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nmodule.exports = listCacheClear;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\nmodule.exports = listCacheDelete;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\nmodule.exports = listCacheGet;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nmodule.exports = listCacheHas;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\nmodule.exports = listCacheSet;\n","var ListCache = require('./_ListCache');\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n  this.size = 0;\n}\n\nmodule.exports = stackClear;\n","/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n\n  this.size = data.size;\n  return result;\n}\n\nmodule.exports = stackDelete;\n","/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\nmodule.exports = stackGet;\n","/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\nmodule.exports = stackHas;\n","var ListCache = require('./_ListCache'),\n    Map = require('./_Map'),\n    MapCache = require('./_MapCache');\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\nmodule.exports = stackSet;\n","var isFunction = require('./isFunction'),\n    isMasked = require('./_isMasked'),\n    isObject = require('./isObject'),\n    toSource = require('./_toSource');\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nmodule.exports = baseIsNative;\n","var coreJsData = require('./_coreJsData');\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\nmodule.exports = isMasked;\n","var root = require('./_root');\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\nmodule.exports = coreJsData;\n","/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nmodule.exports = getValue;\n","var mapCacheClear = require('./_mapCacheClear'),\n    mapCacheDelete = require('./_mapCacheDelete'),\n    mapCacheGet = require('./_mapCacheGet'),\n    mapCacheHas = require('./_mapCacheHas'),\n    mapCacheSet = require('./_mapCacheSet');\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\nmodule.exports = MapCache;\n","var Hash = require('./_Hash'),\n    ListCache = require('./_ListCache'),\n    Map = require('./_Map');\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\nmodule.exports = mapCacheClear;\n","var hashClear = require('./_hashClear'),\n    hashDelete = require('./_hashDelete'),\n    hashGet = require('./_hashGet'),\n    hashHas = require('./_hashHas'),\n    hashSet = require('./_hashSet');\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\nmodule.exports = Hash;\n","var nativeCreate = require('./_nativeCreate');\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\nmodule.exports = hashClear;\n","/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = hashDelete;\n","var nativeCreate = require('./_nativeCreate');\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\nmodule.exports = hashGet;\n","var nativeCreate = require('./_nativeCreate');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\nmodule.exports = hashHas;\n","var nativeCreate = require('./_nativeCreate');\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\nmodule.exports = hashSet;\n","var getMapData = require('./_getMapData');\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = mapCacheDelete;\n","/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\nmodule.exports = isKeyable;\n","var getMapData = require('./_getMapData');\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nmodule.exports = mapCacheGet;\n","var getMapData = require('./_getMapData');\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\nmodule.exports = mapCacheHas;\n","var getMapData = require('./_getMapData');\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nmodule.exports = mapCacheSet;\n","/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nmodule.exports = arrayEach;\n","var getNative = require('./_getNative');\n\nvar defineProperty = (function() {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}());\n\nmodule.exports = defineProperty;\n","var copyObject = require('./_copyObject'),\n    keys = require('./keys');\n\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return object && copyObject(source, keys(source), object);\n}\n\nmodule.exports = baseAssign;\n","/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\nmodule.exports = baseTimes;\n","/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = stubFalse;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n\n  return !!length &&\n    (type == 'number' ||\n      (type != 'symbol' && reIsUint.test(value))) &&\n        (value > -1 && value % 1 == 0 && value < length);\n}\n\nmodule.exports = isIndex;\n","var baseIsTypedArray = require('./_baseIsTypedArray'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\nmodule.exports = isTypedArray;\n","var baseGetTag = require('./_baseGetTag'),\n    isLength = require('./isLength'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nmodule.exports = baseIsTypedArray;\n","var isPrototype = require('./_isPrototype'),\n    nativeKeys = require('./_nativeKeys');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseKeys;\n","var overArg = require('./_overArg');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object);\n\nmodule.exports = nativeKeys;\n","var copyObject = require('./_copyObject'),\n    keysIn = require('./keysIn');\n\n/**\n * The base implementation of `_.assignIn` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssignIn(object, source) {\n  return object && copyObject(source, keysIn(source), object);\n}\n\nmodule.exports = baseAssignIn;\n","var isObject = require('./isObject'),\n    isPrototype = require('./_isPrototype'),\n    nativeKeysIn = require('./_nativeKeysIn');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeysIn(object) {\n  if (!isObject(object)) {\n    return nativeKeysIn(object);\n  }\n  var isProto = isPrototype(object),\n      result = [];\n\n  for (var key in object) {\n    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseKeysIn;\n","/**\n * This function is like\n * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * except that it includes inherited enumerable properties.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction nativeKeysIn(object) {\n  var result = [];\n  if (object != null) {\n    for (var key in Object(object)) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = nativeKeysIn;\n","var root = require('./_root');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined;\n\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\nfunction cloneBuffer(buffer, isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n  var length = buffer.length,\n      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n  buffer.copy(result);\n  return result;\n}\n\nmodule.exports = cloneBuffer;\n","/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\nmodule.exports = copyArray;\n","var copyObject = require('./_copyObject'),\n    getSymbols = require('./_getSymbols');\n\n/**\n * Copies own symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbols(source, object) {\n  return copyObject(source, getSymbols(source), object);\n}\n\nmodule.exports = copySymbols;\n","/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = arrayFilter;\n","var copyObject = require('./_copyObject'),\n    getSymbolsIn = require('./_getSymbolsIn');\n\n/**\n * Copies own and inherited symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbolsIn(source, object) {\n  return copyObject(source, getSymbolsIn(source), object);\n}\n\nmodule.exports = copySymbolsIn;\n","var baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbols = require('./_getSymbols'),\n    keys = require('./keys');\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\nmodule.exports = getAllKeys;\n","var baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbolsIn = require('./_getSymbolsIn'),\n    keysIn = require('./keysIn');\n\n/**\n * Creates an array of own and inherited enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeysIn(object) {\n  return baseGetAllKeys(object, keysIn, getSymbolsIn);\n}\n\nmodule.exports = getAllKeysIn;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView');\n\nmodule.exports = DataView;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Promise = getNative(root, 'Promise');\n\nmodule.exports = Promise;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Set = getNative(root, 'Set');\n\nmodule.exports = Set;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar WeakMap = getNative(root, 'WeakMap');\n\nmodule.exports = WeakMap;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = new array.constructor(length);\n\n  // Add properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\nmodule.exports = initCloneArray;\n","var cloneArrayBuffer = require('./_cloneArrayBuffer'),\n    cloneDataView = require('./_cloneDataView'),\n    cloneRegExp = require('./_cloneRegExp'),\n    cloneSymbol = require('./_cloneSymbol'),\n    cloneTypedArray = require('./_cloneTypedArray');\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return cloneArrayBuffer(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag:\n      return new Ctor;\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return cloneRegExp(object);\n\n    case setTag:\n      return new Ctor;\n\n    case symbolTag:\n      return cloneSymbol(object);\n  }\n}\n\nmodule.exports = initCloneByTag;\n","var root = require('./_root');\n\n/** Built-in value references. */\nvar Uint8Array = root.Uint8Array;\n\nmodule.exports = Uint8Array;\n","var cloneArrayBuffer = require('./_cloneArrayBuffer');\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\nmodule.exports = cloneDataView;\n","/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\nfunction cloneRegExp(regexp) {\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\nmodule.exports = cloneRegExp;\n","var Symbol = require('./_Symbol');\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\nmodule.exports = cloneSymbol;\n","var cloneArrayBuffer = require('./_cloneArrayBuffer');\n\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\nfunction cloneTypedArray(typedArray, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n\nmodule.exports = cloneTypedArray;\n","var baseCreate = require('./_baseCreate'),\n    getPrototype = require('./_getPrototype'),\n    isPrototype = require('./_isPrototype');\n\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  return (typeof object.constructor == 'function' && !isPrototype(object))\n    ? baseCreate(getPrototype(object))\n    : {};\n}\n\nmodule.exports = initCloneObject;\n","var isObject = require('./isObject');\n\n/** Built-in value references. */\nvar objectCreate = Object.create;\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} proto The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nvar baseCreate = (function() {\n  function object() {}\n  return function(proto) {\n    if (!isObject(proto)) {\n      return {};\n    }\n    if (objectCreate) {\n      return objectCreate(proto);\n    }\n    object.prototype = proto;\n    var result = new object;\n    object.prototype = undefined;\n    return result;\n  };\n}());\n\nmodule.exports = baseCreate;\n","var baseIsMap = require('./_baseIsMap'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsMap = nodeUtil && nodeUtil.isMap;\n\n/**\n * Checks if `value` is classified as a `Map` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n * @example\n *\n * _.isMap(new Map);\n * // => true\n *\n * _.isMap(new WeakMap);\n * // => false\n */\nvar isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\nmodule.exports = isMap;\n","var getTag = require('./_getTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]';\n\n/**\n * The base implementation of `_.isMap` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n */\nfunction baseIsMap(value) {\n  return isObjectLike(value) && getTag(value) == mapTag;\n}\n\nmodule.exports = baseIsMap;\n","var baseIsSet = require('./_baseIsSet'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsSet = nodeUtil && nodeUtil.isSet;\n\n/**\n * Checks if `value` is classified as a `Set` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n * @example\n *\n * _.isSet(new Set);\n * // => true\n *\n * _.isSet(new WeakSet);\n * // => false\n */\nvar isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\nmodule.exports = isSet;\n","var getTag = require('./_getTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar setTag = '[object Set]';\n\n/**\n * The base implementation of `_.isSet` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n */\nfunction baseIsSet(value) {\n  return isObjectLike(value) && getTag(value) == setTag;\n}\n\nmodule.exports = baseIsSet;\n"],"sourceRoot":""}