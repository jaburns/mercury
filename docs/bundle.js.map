{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/utils/grid.ts","webpack:///./src/utils/math.ts","webpack:///./src/index.ts","webpack:///./src/pages/vector-caves.ts","webpack:///./src/caveGenerator/automaton.ts","webpack:///./src/utils/prng.ts","webpack:///./src/caveGenerator/findContours.ts","webpack:///./src/caveGenerator/smoothCurve.ts","webpack:///./src/caveGenerator/triangulate.ts","webpack:///./src/pages/page2-webgl.ts","webpack:///./src/webgl/shaderLoader.ts","webpack:///./src/caveGenerator/index.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","WriteGrid","width","height","this","vals","Array","write","x","y","val","at","copyFrom","grid","safeOutOfBounds","oobValue","GridTool","find","test","forEach","fn","map","result","V2","add","a","b","plus","minus","length","Math","sqrt","scaled","RectTool","area","xmax","xmin","ymax","ymin","smallestDifferenceRadians","PI","abs","findBounds","pts","Infinity","vector_caves_1","page2_webgl_1","postInitters","vector-caves","initPost","page2-webgl","window","caveGenerator_1","grid_1","findContours_1","randomColorHex","randPair","ret","floor","random","toString","colors","_","events","listener","ctx","document","getElementById","getContext","seedSlider","popSlider","genSlider","insuranceSlider","curvinessSlider","qualitySlider","ctx2","ctx3","ctx4","ctx5","ctx6","ctx7","ctx8","ctx9","update","config","seed","parseInt","edgePointDist","curveBend","parseFloat","curveQuality","_a","generateCaveVerbose","cave","details","automatonResult","fillStyle","fillRect","coloredGrid","filledGrid","edgeMarkedGrid","kind","degs","cos","sin","hx","round","hy","gridColorForNormal","normal","contours","findContoursResult","walkMap","WalkedStatus","WalkedImportant","Walked","strokeStyle","outerMostContourIndex","i_1","j","beginPath","moveTo","lineTo","stroke","edges","i_2","topLeftPt","topLeftMostVertexIndex","arc","fill","triangles","ts","e","prng_1","getNeighborhood","nx","ny","runCellularAutomaton","population","birth","survival","iterations","buffer","rand","nextRandom01","neighbors","M","prevRandom01","math_1","markEdges","u","findContours","spaceInsurance","Unwalked","iter","newContour","findOneContour","push","bestCandidate","prev","candidates","minVal","minI","freshStart","findFreshContour","points","lastCan","dx","dy","lastStatus","newStatus","smoothCurve","input","resolution","curviness","curr","next","lenA","lenB","midA","midB","midDiff","diffA","diffB","pt","controlA","controlB","inc","newVal","triangulate","indices","V","v","nv","count","w","snip","A","q","inside_triangle","B","C","P","ax","ay","bx","by","cx","cy","apx","apy","bpx","bpy","cpx","cpy","shaderLoader_1","canvas","gl","viewport","cullFace","BACK","Promise","all","loadShader","then","prog0","prog1","fbo","createFramebuffer","bindFramebuffer","FRAMEBUFFER","texture","createTexture","bindTexture","TEXTURE_2D","texImage2D","RGB","UNSIGNED_BYTE","texParameteri","TEXTURE_MIN_FILTER","LINEAR","TEXTURE_MAG_FILTER","framebufferTexture2D","COLOR_ATTACHMENT0","clearColor","clear","COLOR_BUFFER_BIT","vertexBuf","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","Float32Array","STATIC_DRAW","useProgram","coord","getAttribLocation","vertexAttribPointer","FLOAT","enableVertexAttribArray","drawArrays","TRIANGLES","console","log","url","fetch","response","ok","Error","status","text","shader","body","vertShader","createShader","VERTEX_SHADER","shaderSource","compileShader","vertLog","getShaderInfoLog","fragShader","FRAGMENT_SHADER","fragLog","prog","createProgram","attachShader","linkProgram","buildProgram","automaton_1","smoothCurve_1","triangulate_1","floodFill","replace","tile","generateCave","bigColor","color","largestColor","largestRegion","pos","size","colorGridRegions","sort","smoothContours","topLeftPtI","len","topLeftPrevPt","bumpDownAmount","splice"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","export interface Grid<T> {\r\n    readonly width: number;\r\n    readonly height: number;\r\n    at(x: number, y: number): T;\r\n}\r\n\r\nexport type GridCallback<T> = (x: number, y: number, val: T) => void;\r\nexport type GridMapper<T,U> = (x: number, y: number, val: T) => U;\r\n\r\nexport class WriteGrid<T> implements Grid<T> {\r\n    public readonly width: number;\r\n    public readonly height: number;\r\n\r\n    private vals: T[];\r\n\r\n    constructor(width: number, height: number) {\r\n        this.width = width;\r\n        this.height = height;\r\n        this.vals = new Array(width * height);\r\n    }\r\n\r\n    write(x: number, y: number, val: T): void {\r\n        this.vals[x + y*this.width] = val;\r\n    }\r\n\r\n    at(x: number, y: number): T {\r\n        return this.vals[x + y*this.width];\r\n    }\r\n\r\n    copyFrom(grid: Grid<T>): void {\r\n        for (let x = 0; x < this.width && x < grid.width; ++x) {\r\n            for (let y = 0; y < this.height && y < grid.height; ++y) {\r\n                this.write(x, y, grid.at(x, y));\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport const safeOutOfBounds = <T>(grid: Grid<T>, oobValue: T): Grid<T> => ({\r\n    width: grid.width,\r\n    height: grid.height,\r\n    at: (x, y) => x < 0 || y < 0 || x >= grid.width || y >= grid.width ? oobValue : grid.at(x, y)\r\n});\r\n\r\nexport const GridTool = {\r\n    find: <T>(grid: Grid<T>, test: GridMapper<T, boolean>): { x: number, y: number } | null => {\r\n        for (let x = 0; x < grid.width; ++x) {\r\n            for (let y = 0; y < grid.height; ++y) {\r\n                if (test(x, y, grid.at(x, y))) {\r\n                    return { x, y };\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    },\r\n\r\n    forEach: <T>(grid: Grid<T>, fn: GridCallback<T>): void => {\r\n        for (let x = 0; x < grid.width; ++x) {\r\n            for (let y = 0; y < grid.height; ++y) {\r\n                fn(x, y, grid.at(x, y));\r\n            }\r\n        }\r\n    },\r\n\r\n    map: <T, U>(grid: Grid<T>, fn: GridMapper<T, U>): WriteGrid<U> => {\r\n        const result = new WriteGrid<U>(grid.width, grid.height);\r\n\r\n        for (let x = 0; x < grid.width; ++x) {\r\n            for (let y = 0; y < grid.height; ++y) {\r\n                result.write(x, y, fn(x, y, grid.at(x, y)));\r\n            }\r\n        }\r\n\r\n        return result;\r\n    },\r\n};","export interface Vec2 {\r\n    x: number,\r\n    y: number,\r\n}\r\n\r\nexport interface Rect {\r\n    xmin: number,\r\n    ymin: number,\r\n    xmax: number,\r\n    ymax: number,\r\n}\r\n\r\nexport const V2 = {\r\n    add: (a: Vec2, b: Vec2): void => {\r\n        a.x += b.x;\r\n        a.y += b.y;\r\n    },\r\n\r\n    plus: (a: Vec2, b: Vec2): Vec2 => ({\r\n        x: a.x + b.x,\r\n        y: a.y + b.y,\r\n    }),\r\n\r\n    minus: (a: Vec2, b: Vec2): Vec2 => ({\r\n        x: a.x - b.x,\r\n        y: a.y - b.y,\r\n    }),\r\n\r\n    length: (a: Vec2): number =>\r\n        Math.sqrt(a.x*a.x + a.y*a.y),\r\n    \r\n    scaled: (a: Vec2, s: number): Vec2 => ({\r\n        x: s * a.x,\r\n        y: s * a.y,\r\n    }),\r\n};\r\n\r\nexport const RectTool = {\r\n    area: (r: Rect): number =>\r\n        (r.xmax - r.xmin) * (r.ymax - r.ymin),\r\n};\r\n\r\nexport const smallestDifferenceRadians = (a: number, b: number): number => {\r\n    a %= 2 * Math.PI;\r\n    b %= 2 * Math.PI;\r\n\r\n    if (Math.abs(a - b) > Math.PI) {\r\n        if (a > 0) a -= 2 * Math.PI;\r\n        else a += 2 * Math.PI;\r\n    }\r\n\r\n    return a - b;\r\n};\r\n\r\nexport const findBounds = (pts: Vec2[]): Rect => {\r\n    const result: Rect = { xmin: Infinity, ymin: Infinity, xmax: -Infinity, ymax: -Infinity };\r\n\r\n    pts.forEach(p => {\r\n        if (p.x < result.xmin) result.xmin = p.x;\r\n        if (p.y < result.ymin) result.ymin = p.y;\r\n        if (p.x > result.xmax) result.xmax = p.x;\r\n        if (p.y > result.ymax) result.ymax = p.y;\r\n    });\r\n\r\n    return result;\r\n};","import { initPost as initPost_vectorCaves } from 'pages/vector-caves';\r\nimport { initPost as initPost_webgl } from 'pages/page2-webgl';\r\n\r\nconst postInitters: {[key: string]: () => void} = {\r\n    'vector-caves': initPost_vectorCaves,\r\n    'page2-webgl': initPost_webgl\r\n};\r\n\r\n(window as any).initPost = (name: string): void =>\r\n    postInitters[name]();","import { generateCaveVerbose, CaveGeneratorConfig } from 'caveGenerator';\r\nimport { GridTool } from 'utils/grid';\r\nimport { WalkedStatus } from 'caveGenerator/findContours';\r\n\r\nconst randomColorHex = (): string => {\r\n    const randPair = (): string => {\r\n        let ret = Math.floor(Math.random() * 256).toString(16);\r\n        if (ret.length < 2) ret = '0'+ret;\r\n        return ret;\r\n    };\r\n\r\n    return '#' + randPair() + randPair() + randPair();\r\n};\r\n\r\nconst colors = [0,0,0,0,0,0,0,0,0,0].map(_ => randomColorHex());\r\n\r\nconst gridColorForNumber = (n: number): string => {\r\n    if (n < 0) return '#000';\r\n    return colors[n % colors.length];\r\n};\r\n\r\nconst gridColorForNormal = (degs: number): string => {\r\n    const x = Math.cos(degs * Math.PI / 180);\r\n    const y = Math.sin(degs * Math.PI / 180);\r\n\r\n    const hx = Math.round(15 * (0.5*x + 0.5));\r\n    const hy = Math.round(15 * (0.5*y + 0.5));\r\n\r\n    const result = '#' + hx.toString(16) + hy.toString(16) + 'f';\r\n\r\n    return result;\r\n};\r\n\r\nconst multibind = (objs: any[], events: string[], listener: Function): void => {\r\n    objs.forEach(o => {\r\n        events.forEach(e => {\r\n            o[e] = listener;\r\n        });\r\n    });\r\n};\r\n\r\nexport const initPost = () :void => {\r\n    const firstCanvas = document.getElementById('first-canvas') as HTMLCanvasElement;\r\n    const ctx = firstCanvas.getContext('2d') as CanvasRenderingContext2D;\r\n\r\n    const seedSlider = document.getElementById('seed-slider') as HTMLInputElement;\r\n    const popSlider = document.getElementById('pop-slider') as HTMLInputElement;\r\n    const genSlider = document.getElementById('gen-slider') as HTMLInputElement;\r\n    const insuranceSlider = document.getElementById('insurance-slider') as HTMLInputElement;\r\n    const curvinessSlider = document.getElementById('curviness-slider') as HTMLInputElement;\r\n    const qualitySlider = document.getElementById('quality-slider') as HTMLInputElement;\r\n\r\n    const secondCanvas = document.getElementById('second-canvas') as HTMLCanvasElement;\r\n    const ctx2 = secondCanvas.getContext('2d') as CanvasRenderingContext2D;\r\n\r\n    const thirdCanvas = document.getElementById('third-canvas') as HTMLCanvasElement;\r\n    const ctx3 = thirdCanvas.getContext('2d') as CanvasRenderingContext2D;\r\n\r\n    const fourthCanvas = document.getElementById('fourth-canvas') as HTMLCanvasElement;\r\n    const ctx4 = fourthCanvas.getContext('2d') as CanvasRenderingContext2D;\r\n\r\n    const fifthCanvas = document.getElementById('fifth-canvas') as HTMLCanvasElement;\r\n    const ctx5 = fifthCanvas.getContext('2d') as CanvasRenderingContext2D;\r\n\r\n    const sixthCanvas = document.getElementById('sixth-canvas') as HTMLCanvasElement;\r\n    const ctx6 = sixthCanvas.getContext('2d') as CanvasRenderingContext2D;\r\n\r\n    const seventhCanvas = document.getElementById('seventh-canvas') as HTMLCanvasElement;\r\n    const ctx7 = seventhCanvas.getContext('2d') as CanvasRenderingContext2D;\r\n\r\n    const eighthCanvas = document.getElementById('eighth-canvas') as HTMLCanvasElement;\r\n    const ctx8 = eighthCanvas.getContext('2d') as CanvasRenderingContext2D;\r\n\r\n    const ninthCanvas = document.getElementById('ninth-canvas') as HTMLCanvasElement;\r\n    const ctx9 = ninthCanvas.getContext('2d') as CanvasRenderingContext2D;\r\n\r\n    const update = () :void => {\r\n        const config: CaveGeneratorConfig = {\r\n            seed: parseInt(seedSlider.value),\r\n            edgePointDist: parseInt(insuranceSlider.value) as any,\r\n            curveBend: 2 * parseFloat(curvinessSlider.value) / 100,\r\n            curveQuality: parseFloat(qualitySlider.value), \r\n        };\r\n\r\n        const { cave, details } = generateCaveVerbose(config);\r\n\r\n        GridTool.forEach(details.automatonResult, (x, y, val) => {\r\n            ctx.fillStyle = val ? '#000' : '#FFF';\r\n            ctx.fillRect(4*x, 4*y, 4, 4);\r\n        });\r\n\r\n        GridTool.forEach(details.coloredGrid, (x, y, val) => {\r\n            ctx2.fillStyle = gridColorForNumber(val);\r\n            ctx2.fillRect(4*x, 4*y, 4, 4);\r\n        });\r\n\r\n        GridTool.forEach(details.filledGrid, (x, y, val) => {\r\n            ctx3.fillStyle = val ? '#000' : '#FFF';\r\n            ctx3.fillRect(4*x, 4*y, 4, 4);\r\n        });\r\n\r\n        GridTool.forEach(details.edgeMarkedGrid, (x, y, val) => {\r\n            ctx4.fillStyle = val.kind === 'edge' ? gridColorForNormal(val.normal) : val.kind === 'air' ? '#655' : '#77f';\r\n            ctx4.fillRect(4*x, 4*y, 4, 4);\r\n        });\r\n\r\n        const contours = details.findContoursResult;\r\n\r\n        GridTool.forEach(contours.walkMap, (x, y, val) => {\r\n            ctx5.fillStyle = val === WalkedStatus.WalkedImportant ? '#fff' : val === WalkedStatus.Walked ? '#333' : '#000';\r\n            ctx5.fillRect(4*x, 4*y, 4, 4);\r\n\r\n            ctx6.fillStyle = val === WalkedStatus.WalkedImportant ? '#333' : '#000';\r\n            ctx6.fillRect(9*x, 9*y, 9, 9);\r\n        });\r\n\r\n        // =--------------------------------------------\r\n\r\n        contours.contours.forEach((c, i) => {\r\n            ctx6.strokeStyle = i === details.outerMostContourIndex ? '#f00' : '#933';\r\n\r\n            for (let i = 0; i < c.length; ++i) {\r\n                const j = (i + 1) % c.length;\r\n                const a = { x: 9 * contours.walkMap.width * c[i].x, y: 9 * contours.walkMap.height * c[i].y };\r\n                const b = { x: 9 * contours.walkMap.width * c[j].x, y: 9 * contours.walkMap.height * c[j].y };\r\n                \r\n                ctx6.beginPath();\r\n                ctx6.moveTo(9 * contours.walkMap.width / 2 + a.x, 9 * contours.walkMap.height / 2 + a.y);\r\n                ctx6.lineTo(9 * contours.walkMap.width / 2 + b.x, 9 * contours.walkMap.height / 2 + b.y);\r\n                ctx6.stroke(); // TODO closePath\r\n            }\r\n        });\r\n\r\n        // =--------------------------------------------\r\n\r\n        ctx7.strokeStyle = '#0f0';\r\n        ctx7.fillStyle = '#000';\r\n        ctx7.fillRect(0, 0, 675, 675);\r\n\r\n        cave.edges.forEach((c, i) => {\r\n            ctx7.strokeStyle = i === details.outerMostContourIndex ? '#0f0' : '#393';\r\n\r\n            for (let i = 0; i < c.length; ++i) {\r\n                const j = (i + 1) % c.length;\r\n                const a = { x: 9 * contours.walkMap.width * c[i].x, y: 9 * contours.walkMap.height * c[i].y };\r\n                const b = { x: 9 * contours.walkMap.width * c[j].x, y: 9 * contours.walkMap.height * c[j].y };\r\n                \r\n                ctx7.beginPath();\r\n                ctx7.moveTo(9 * contours.walkMap.width / 2 + a.x, 9 * contours.walkMap.height / 2 + a.y);\r\n                ctx7.lineTo(9 * contours.walkMap.width / 2 + b.x, 9 * contours.walkMap.height / 2 + b.y);\r\n                ctx7.stroke(); // TODO closePath\r\n            }\r\n        });\r\n\r\n        const topLeftPt = cave.edges[details.outerMostContourIndex][details.topLeftMostVertexIndex];\r\n\r\n        ctx7.strokeStyle = '#0f0';\r\n        ctx7.beginPath();\r\n        ctx7.moveTo(\r\n            9 * contours.walkMap.width / 2 + 9 * contours.walkMap.width * topLeftPt.x,\r\n            9 * contours.walkMap.height / 2 + 9 * contours.walkMap.height * topLeftPt.y,\r\n        );\r\n        ctx7.lineTo(\r\n            -9 * contours.walkMap.width / 2,\r\n            -9 * contours.walkMap.height / 2\r\n        );\r\n        ctx7.stroke();\r\n\r\n        ctx7.strokeStyle = '#9f9';\r\n        ctx7.beginPath();\r\n        ctx7.arc(\r\n            9 * contours.walkMap.width / 2 + 9 * contours.walkMap.width * topLeftPt.x,\r\n            9 * contours.walkMap.height / 2 + 9 * contours.walkMap.height * topLeftPt.y,\r\n            5, 0, 2*Math.PI);\r\n        ctx7.stroke();\r\n\r\n        // =--------------------------------------------\r\n\r\n        ctx8.fillStyle = '#000';\r\n        ctx8.fillRect(0, 0, 675, 675);\r\n\r\n        cave.edges.forEach((c, i) => {\r\n            ctx8.fillStyle = i === details.outerMostContourIndex ? '#0f0' : '#393';\r\n\r\n            ctx8.beginPath();\r\n            const a = { x: 9 * contours.walkMap.width * c[0].x, y: 9 * contours.walkMap.height * c[0].y };\r\n            ctx8.moveTo(9 * contours.walkMap.width / 2 + a.x, 9 * contours.walkMap.height / 2 + a.y);\r\n\r\n            for (let j = 1; j < c.length; ++j) {\r\n                const b = { x: 9 * contours.walkMap.width * c[j].x, y: 9 * contours.walkMap.height * c[j].y };\r\n                ctx8.lineTo(9 * contours.walkMap.width / 2 + b.x, 9 * contours.walkMap.height / 2 + b.y);\r\n            }\r\n\r\n            ctx8.fill();\r\n        });\r\n\r\n        // =--------------------------------------------\r\n\r\n        ctx9.fillStyle = '#000';\r\n        ctx9.fillRect(0, 0, 675, 675);\r\n\r\n        cave.triangles.forEach((ts,j) => {\r\n            for (let i = 0; i < ts.length - 2; i += 3) {\r\n                ctx9.fillStyle = randomColorHex();\r\n                ctx9.beginPath();\r\n                {\r\n                    const c = cave.edges[j][ts[i]];\r\n                    const a = { x: 8 * contours.walkMap.width * c.x, y: 8 * contours.walkMap.height * c.y };\r\n                    ctx9.moveTo(9 * contours.walkMap.width / 2 + a.x, 9 * contours.walkMap.height / 2 + a.y);\r\n                } {\r\n                    const c = cave.edges[j][ts[i+1]];\r\n                    const a = { x: 8 * contours.walkMap.width * c.x, y: 8 * contours.walkMap.height * c.y };\r\n                    ctx9.lineTo(9 * contours.walkMap.width / 2 + a.x, 9 * contours.walkMap.height / 2 + a.y);\r\n                } {\r\n                    const c = cave.edges[j][ts[i+2]];\r\n                    const a = { x: 8 * contours.walkMap.width * c.x, y: 8 * contours.walkMap.height * c.y };\r\n                    ctx9.lineTo(9 * contours.walkMap.width / 2 + a.x, 9 * contours.walkMap.height / 2 + a.y);\r\n                } {\r\n                    const c = cave.edges[j][ts[i]];\r\n                    const a = { x: 8 * contours.walkMap.width * c.x, y: 8 * contours.walkMap.height * c.y };\r\n                    ctx9.lineTo(9 * contours.walkMap.width / 2 + a.x, 9 * contours.walkMap.height / 2 + a.y);\r\n                }\r\n                ctx9.fill();\r\n            }\r\n        });\r\n    };\r\n\r\n    multibind(\r\n        [popSlider, genSlider, seedSlider, insuranceSlider, curvinessSlider, qualitySlider],\r\n        ['oninput', 'onchange'],\r\n        update\r\n    );\r\n    update();\r\n};\r\n","import { nextRandom01 } from 'utils/prng';\r\nimport { WriteGrid, Grid } from 'utils/grid';\r\n\r\nconst getNeighborhood = (map: Grid<boolean>, x: number, y: number): number => {\r\n    let result: number = 0;\r\n\r\n    for (let nx = x-1; nx <= x+1; ++nx) {\r\n        for (let ny = y-1; ny <= y+1; ++ny) {\r\n            if (nx == x && ny == y) continue;\r\n            if (nx < 1 || ny < 1 || nx >= map.width-1 || ny >= map.height-1) result++;\r\n            else result += map.at(nx,ny) ? 1 : 0;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport const runCellularAutomaton = (width: number, height: number, seed: number, population: number, birth: number, survival: number, iterations: number): Grid<boolean> => {\r\n    const result = new WriteGrid<boolean>(width, height);\r\n    const buffer = new WriteGrid<boolean>(width, height);\r\n    let rand = nextRandom01(seed / 101);\r\n\r\n    for (let x = 0; x < width; ++x) {\r\n        for (let y = 0; y < height; ++y) {\r\n            const fill = x === 0 || y === 0 || x === width-1 || y === height-1 || rand < population;\r\n            result.write(x, y, fill);\r\n            buffer.write(x, y, fill);\r\n\r\n            rand = nextRandom01(rand);\r\n        }\r\n    }\r\n\r\n    for (let i = 0; i < iterations; ++i) {\r\n        for (let x = 1; x < width-1; ++x) {\r\n            for (let y = 1; y < height-1; ++y) {\r\n                const neighbors = getNeighborhood(result, x, y);\r\n                buffer.write(x, y, neighbors >= (result.at(x, y) ? survival : birth));\r\n            }\r\n        }\r\n        result.copyFrom(buffer);\r\n    }\r\n\r\n    return result;\r\n}","// https://en.wikipedia.org/wiki/Linear_congruential_generator\r\n\r\nconst M = 4294967296;\r\nconst A = 1664525;\r\nconst C = 1013904223;\r\n\r\nexport const nextRandom01 = (prevRandom01: number): number => \r\n    ((A * Math.floor(prevRandom01 * M) + C) % M) / M;","import { Grid, WriteGrid, GridTool, safeOutOfBounds } from 'utils/grid';\r\nimport { Vec2, smallestDifferenceRadians } from 'utils/math';\r\n\r\nexport interface EdgeMarkedMapTile {\r\n    kind: 'air' | 'dirt' | 'edge',\r\n    normal: number,\r\n}\r\n\r\nexport const markEdges = (grid: Grid<boolean>): WriteGrid<EdgeMarkedMapTile> => {\r\n    const result = GridTool.map(grid, (x, y, val): EdgeMarkedMapTile => \r\n        ({ kind: val ? 'dirt' : 'air', normal: 0 }));\r\n\r\n    for (let x = 0; x < grid.width; x++) {\r\n        for (let y = 0; y < grid.height; y++) {\r\n            if (!grid.at(x, y)) continue;\r\n\r\n            const l = x > 0               && !grid.at(x-1, y);\r\n            const r = x < grid.width - 2  && !grid.at(x+1, y);\r\n            const u = y > 0               && !grid.at(x, y-1);\r\n            const d = y < grid.height - 2 && !grid.at(x, y+1);\r\n\r\n            if (!l && !r && !u && !d) continue;\r\n\r\n            const normal = r && d ? 45 :\r\n                d && l ?  135 :\r\n                l && u ? -135 :\r\n                u && r ?  -45 :\r\n                r ? 0 :\r\n                d ? 90 :\r\n                l ? 180 :\r\n                -90;\r\n\r\n            result.write(x, y, { kind: 'edge', normal });\r\n        }\r\n    }\r\n\r\n    return result;\r\n};\r\n\r\nexport enum WalkedStatus {\r\n    Unwalked,\r\n    Walked,\r\n    WalkedImportant,\r\n}\r\n\r\ninterface WalkCandidate {\r\n    dx: number,\r\n    dy: number,\r\n    normal: number,\r\n}\r\n\r\ninterface GridPoint {\r\n    x: number,\r\n    y: number,\r\n}\r\n\r\nexport interface FindContoursResult {\r\n    contours: Vec2[][],\r\n    walkMap: WriteGrid<WalkedStatus>,\r\n}\r\n\r\nexport const findContours = (grid: Grid<EdgeMarkedMapTile>, spaceInsurance: 0 | 1 | 2): FindContoursResult => {\r\n    const MAX_ITER = 100;\r\n    const walkMap = GridTool.map(new WriteGrid<WalkedStatus>(grid.width, grid.height), _ => WalkedStatus.Unwalked);\r\n    const contours: Vec2[][] = [];\r\n\r\n    let iter = 0;\r\n    let newContour: Vec2[] | null = null;\r\n\r\n    do {\r\n        newContour = findOneContour(walkMap, grid, spaceInsurance);\r\n        if (newContour !== null && newContour.length > 2) {\r\n            contours.push(newContour);\r\n        }\r\n    } while (newContour != null && iter++ < MAX_ITER);\r\n\r\n    return { contours, walkMap };\r\n}\r\n\r\nconst findFreshContour = (walkMap: Grid<WalkedStatus>, grid: Grid<EdgeMarkedMapTile>): GridPoint | null => {\r\n    for (let x = 0; x < grid.width; x++) {\r\n        for (let y = 0; y < grid.height; y++) {\r\n            if (grid.at(x, y).kind === 'edge' && walkMap.at(x, y) === WalkedStatus.Unwalked) {\r\n                return { x, y };\r\n            }\r\n        }\r\n    }\r\n\r\n    return null;\r\n};\r\n\r\nconst bestCandidate = (prev: WalkCandidate, candidates: WalkCandidate[]): WalkCandidate => {\r\n    let minVal = 100;\r\n    let minI = 0;\r\n\r\n    for (let i = 0; i < candidates.length; ++i) {\r\n        const c = candidates[i];\r\n        const d = Math.abs(smallestDifferenceRadians(\r\n            c.normal * Math.PI / 180,\r\n            prev.normal * Math.PI / 180\r\n        ));\r\n\r\n        if (d < minVal) {\r\n            minVal = d;\r\n            minI = i;\r\n        }\r\n    }\r\n\r\n    return candidates[minI];\r\n};\r\n\r\nconst findOneContour = (walkMap: WriteGrid<WalkedStatus>, grid: Grid<EdgeMarkedMapTile>, spaceInsurance: 0 | 1 | 2): Vec2[] | null => {\r\n    const MAX_ITER = 5000;\r\n\r\n    const freshStart = findFreshContour(walkMap, grid);\r\n    if (freshStart === null) {\r\n        return null;\r\n    }\r\n\r\n    grid = safeOutOfBounds(grid, {kind: 'dirt', normal: 0} as EdgeMarkedMapTile);\r\n\r\n    const points: Vec2[] = [];\r\n    let x = freshStart.x;\r\n    let y = freshStart.y;\r\n\r\n    let iter = 0;\r\n    let lastCan: WalkCandidate = { dx: 0, dy: 0, normal: 0 };\r\n    let lastStatus = WalkedStatus.Walked;\r\n    let candidates: WalkCandidate[] = [];\r\n\r\n    do {\r\n        candidates = [];\r\n\r\n        for (let dx = -1; dx <= 1; dx++) {\r\n            for (let dy = -1; dy <= 1; dy++) {\r\n                if (dx === 0 && dy === 0) continue;\r\n                if (grid.at(x+dx, y+dy).kind === 'edge'\r\n                && walkMap.at(x+dx, y+dy) === WalkedStatus.Unwalked) {\r\n                    candidates.push({dx, dy, normal: grid.at(x+dx, y+dy).normal});\r\n                }\r\n            }\r\n        }\r\n\r\n        if (candidates.length > 0) {\r\n            const c = bestCandidate(lastCan, candidates);\r\n            x += c.dx;\r\n            y += c.dy;\r\n\r\n            let newStatus = WalkedStatus.Walked;\r\n            if (c.normal !== lastCan.normal) {\r\n                let important;\r\n                if (spaceInsurance === 0) {\r\n                    important = true;\r\n                } else if (spaceInsurance === 1) {\r\n                    important = c.dx != 0 && c.dy != 0 || lastStatus != WalkedStatus.WalkedImportant;\r\n                } else {\r\n                    important = lastStatus != WalkedStatus.WalkedImportant;\r\n                }\r\n\r\n                if (important) {\r\n                    newStatus = WalkedStatus.WalkedImportant;\r\n                }\r\n            }\r\n\r\n            if (newStatus === WalkedStatus.WalkedImportant) {\r\n                points.push({\r\n                    x: (x + 0.5)/grid.width - 0.5,\r\n                    y: (y + 0.5)/grid.height - 0.5,\r\n                });\r\n            }\r\n\r\n            walkMap.write(x, y, newStatus);\r\n            lastStatus = newStatus;\r\n            lastCan = c;\r\n        }\r\n    }\r\n    while (candidates.length > 0 && iter++ < MAX_ITER);\r\n\r\n    return points;\r\n};","import { Vec2, V2 } from 'utils/math';\r\n\r\ninterface Pt {\r\n    pt: Vec2,\r\n    controlA: Vec2,\r\n    controlB: Vec2,\r\n}\r\n\r\nexport const smoothCurve = (input: Vec2[], resolution: number, curviness: number): Vec2[] => {\r\n    const pts: Pt[] = [];\r\n\r\n    if (resolution < 1) resolution = 1;\r\n\r\n    for (let i = 0; i < input.length; ++i) {\r\n        const prev = input[i == 0 ? input.length-1 : i-1];\r\n        const curr = input[i];\r\n        const next = input[(i + 1) % input.length];\r\n\r\n        const lenA = V2.length(V2.minus(prev, curr));\r\n        const lenB = V2.length(V2.minus(curr, next));\r\n\r\n        const midA = V2.scaled(V2.plus(prev, curr), 0.5);\r\n        const midB = V2.scaled(V2.plus(curr, next), 0.5);\r\n        const midDiff = V2.scaled(V2.minus(midA, midB), curviness);\r\n\r\n        const diffA = V2.scaled(midDiff,  lenA / (lenA + lenB));\r\n        const diffB = V2.scaled(midDiff, -lenB / (lenA + lenB));\r\n\r\n        pts.push({\r\n            pt: curr,\r\n            controlA: V2.plus(curr, diffA),\r\n            controlB: V2.plus(curr, diffB),\r\n        });\r\n    }\r\n\r\n    const inc = 1 / resolution;\r\n\r\n    const result: Vec2[] = [];\r\n    for (let i = 0; i < pts.length; ++i) {\r\n        const curr = pts[i];\r\n        const next = pts[(i + 1) % pts.length];\r\n\r\n        for (let t = 0; t < 1 - (inc / 2); t += inc) {\r\n            let newVal: Vec2 = { x: 0, y: 0 };\r\n\r\n            V2.add(newVal, V2.scaled(curr.pt       , (1-t)*(1-t)*(1-t)));\r\n            V2.add(newVal, V2.scaled(curr.controlB , 3*(1-t)*(1-t)*t));\r\n            V2.add(newVal, V2.scaled(next.controlA , 3*(1-t)*t*t));\r\n            V2.add(newVal, V2.scaled(next.pt       , t*t*t));\r\n\r\n            result.push(newVal);\r\n        }\r\n    }\r\n\r\n    return result;\r\n};","import { Vec2 } from 'utils/math';\r\n\r\nexport const triangulate = (points: Vec2[]): number[] => {\r\n    const indices: number[] = [];\r\n    const n = points.length;\r\n    if (n < 3) return indices;\r\n\r\n    const V: number[] = new Array(n);\r\n    if (area(points) > 0) {\r\n        for (let v = 0; v < n; v++) V[v] = v;\r\n    } else {\r\n        for (let v = 0; v < n; v++) V[v] = (n - 1) - v;\r\n    }\r\n\r\n    let nv = n;\r\n    let count = 2 * nv;\r\n    for (let v = nv - 1; nv > 2; ) {\r\n        if ((count--) <= 0) return indices;\r\n\r\n        let u = v;\r\n        if (nv <= u) u = 0;\r\n        v = u + 1;\r\n        if (nv <= v) v = 0;\r\n        let w = v + 1;\r\n        if (nv <= w) w = 0;\r\n\r\n        if (snip(points, u, v, w, nv, V)) {\r\n            indices.push(V[u]);\r\n            indices.push(V[v]);\r\n            indices.push(V[w]);\r\n            for (let s = v, t = v + 1; t < nv; s++, t++) V[s] = V[t];\r\n            nv--;\r\n            count = 2 * nv;\r\n        }\r\n    }\r\n\r\n    return indices;\r\n};\r\n\r\nconst area = (points: Vec2[]): number => {\r\n    let A = 0;\r\n    for (let p = points.length - 1, q = 0; q < points.length; p = q++) {\r\n        A += points[p].x * points[q].y - points[q].x * points[p].y;\r\n    }\r\n    return A / 2;\r\n};\r\n\r\nconst inside_triangle = (A: Vec2, B: Vec2, C: Vec2, P: Vec2): boolean => {\r\n    const ax = C.x - B.x, ay = C.y - B.y;\r\n    const bx = A.x - C.x, by = A.y - C.y;\r\n    const cx = B.x - A.x, cy = B.y - A.y;\r\n    const apx = P.x - A.x, apy = P.y - A.y;\r\n    const bpx = P.x - B.x, bpy = P.y - B.y;\r\n    const cpx = P.x - C.x, cpy = P.y - C.y;\r\n\r\n    const aCROSSbp = ax * bpy - ay * bpx;\r\n    const cCROSSap = cx * apy - cy * apx;\r\n    const bCROSScp = bx * cpy - by * cpx;\r\n\r\n    return aCROSSbp >= 0 && bCROSScp >= 0 && cCROSSap >= 0;\r\n};\r\n\r\nconst snip = (points: Vec2[], u: number, v: number, w: number, n: number, V: number[]): boolean => {\r\n    const A = points[V[u]];\r\n    const B = points[V[v]];\r\n    const C = points[V[w]];\r\n\r\n    const pdiff = (B.x - A.x) * (C.y - A.y) - (B.y - A.y) * (C.x - A.x);\r\n    if (pdiff < 1e-7) return false;\r\n\r\n    for (let p = 0; p < n; p++) {\r\n        if ((p == u) || (p == v) || (p == w)) continue;\r\n        const P = points[V[p]];\r\n        if (inside_triangle(A, B, C, P)) return false;\r\n    }\r\n\r\n    return true;\r\n};","import { loadShader } from \"webgl/shaderLoader\";\r\n\r\nexport const initPost = () :void => {\r\n    const canvas = document.getElementById('first-canvas') as HTMLCanvasElement;\r\n    const gl = canvas.getContext('webgl2') as WebGLRenderingContext;\r\n    gl.viewport(0,0,canvas.width,canvas.height);\r\n    gl.cullFace(gl.BACK);\r\n\r\n    Promise.all([\r\n        loadShader(gl, '/shaders/purple.glsl'),\r\n        loadShader(gl, '/shaders/bufferCopy.glsl')\r\n    ])\r\n    .then(([prog0, prog1]) => {\r\n        if (typeof prog0 === 'string' || typeof prog1 === 'string') {\r\n            console.log('Shader error: ' + prog0 + prog1);\r\n            return;\r\n        }\r\n\r\n        const fbo = gl.createFramebuffer();\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, fbo);\r\n        \r\n        const texture = gl.createTexture();\r\n        gl.bindTexture(gl.TEXTURE_2D, texture);\r\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGB, canvas.width, canvas.height, 0, gl.RGB, gl.UNSIGNED_BYTE, null);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR); \r\n        \r\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0); \r\n\r\n        {\r\n          gl.clearColor(0, 1, 0, 1);\r\n          gl.clear(gl.COLOR_BUFFER_BIT);\r\n\r\n          const vertexBuf = gl.createBuffer();\r\n          gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuf);\r\n          gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([\r\n            -0.95,0.95,0.0,  \r\n            -0.95,-0.95,0.0, \r\n            0.95,-0.95,0.0,\r\n            0.9,0,0.0,\r\n            0.9,0.9,0.0,\r\n            0,0.9,0.0,\r\n          ]), gl.STATIC_DRAW);\r\n\r\n          gl.useProgram(prog0);\r\n\r\n          const coord = gl.getAttribLocation(prog0, \"c\");\r\n          gl.vertexAttribPointer(coord, 3, gl.FLOAT, false, 0, 0);\r\n          gl.enableVertexAttribArray(coord);\r\n\r\n          gl.drawArrays(gl.TRIANGLES, 0, 6);\r\n        }\r\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n        {    \r\n          const vertexBuf = gl.createBuffer();\r\n          gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuf);\r\n          gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([ \r\n            -1,1,0.0,  \r\n            -1,-1,0.0, \r\n            1,-1,0.0,\r\n            1,-1,0.0,\r\n            1,1,0.0,\r\n            -1,1,0.0,\r\n          ]), gl.STATIC_DRAW);\r\n\r\n          gl.useProgram(prog1);\r\n\r\n          const coord = gl.getAttribLocation(prog1, \"c\");\r\n          gl.vertexAttribPointer(coord, 3, gl.FLOAT, false, 0, 0);\r\n          gl.enableVertexAttribArray(coord);\r\n\r\n          gl.drawArrays(gl.TRIANGLES, 0, 6);\r\n        }\r\n    });\r\n};","const VERT_HEADER = \r\n    `#version 300 es\r\n    #define VERTEX\r\n    #define v2f out\r\n    `;\r\n\r\nconst FRAG_HEADER = \r\n    `#version 300 es\r\n    #define FRAGMENT\r\n    #define v2f in\r\n    precision highp float;\r\n    `;\r\n\r\nconst buildProgram = (gl: WebGLRenderingContext, body: string): WebGLProgram | string => {\r\n    const vertShader = gl.createShader(gl.VERTEX_SHADER) as WebGLShader;\r\n    gl.shaderSource(vertShader, VERT_HEADER + body + '\\n');\r\n    gl.compileShader(vertShader);\r\n\r\n    const vertLog = gl.getShaderInfoLog(vertShader);\r\n    if (vertLog === null || vertLog.length > 0) {\r\n        return vertLog as string;\r\n    }\r\n\r\n    const fragShader = gl.createShader(gl.FRAGMENT_SHADER) as WebGLShader;\r\n    gl.shaderSource(fragShader, FRAG_HEADER + body + '\\n');\r\n    gl.compileShader(fragShader);\r\n\r\n    const fragLog = gl.getShaderInfoLog(fragShader);\r\n    if (fragLog === null || fragLog.length > 0) {\r\n        return fragLog as string;\r\n    }\r\n\r\n    const prog = gl.createProgram() as WebGLProgram;\r\n    gl.attachShader(prog, vertShader);\r\n    gl.attachShader(prog, fragShader);\r\n    gl.linkProgram(prog);\r\n    return prog;\r\n};\r\n\r\nexport const loadShader = (gl: WebGLRenderingContext, url: string): Promise<WebGLProgram | string> =>\r\n    fetch(url)\r\n        .then(response => {\r\n            if (!response.ok) throw new Error(\"HTTP error, status = \" + response.status);\r\n            return response.text();\r\n        })\r\n        .then(shader => buildProgram(gl, shader));","import { Grid, WriteGrid, GridTool, safeOutOfBounds } from 'utils/grid';\r\nimport { runCellularAutomaton } from './automaton';\r\nimport { markEdges, findContours, EdgeMarkedMapTile, FindContoursResult } from './findContours';\r\nimport { smoothCurve } from './smoothCurve';\r\nimport { Vec2, findBounds, RectTool } from 'utils/math';\r\nimport { triangulate } from './triangulate';\r\n\r\nexport interface CaveGeneratorConfig {\r\n    seed: number,\r\n    edgePointDist: 0 | 1 | 2,\r\n    curveQuality: number,\r\n    curveBend: number,\r\n}\r\n\r\nexport interface Cave {\r\n    edges: Vec2[][],\r\n    triangles: number[][],\r\n}\r\n\r\nexport interface CaveBuildDetails {\r\n    automatonResult: Grid<boolean>;\r\n    coloredGrid: Grid<number>;\r\n    filledGrid: Grid<boolean>;\r\n    edgeMarkedGrid: Grid<EdgeMarkedMapTile>;\r\n    findContoursResult: FindContoursResult;\r\n    outerMostContourIndex: number;\r\n    topLeftMostVertexIndex: number;\r\n}\r\n\r\nconst floodFill = (grid: WriteGrid<number>, x: number, y: number, replace: number, value: number, count: number): number => {\r\n    if (x < 0 || y < 0) return count;\r\n    if (x >= grid.width || y >= grid.height) return count;\r\n\r\n    const tile = grid.at(x, y);\r\n\r\n    if (tile === value) return count;\r\n    if (tile !== replace) return count;\r\n\r\n    grid.write(x, y, value);\r\n    count++;\r\n\r\n    count = floodFill(grid, x - 1, y, replace, value, count);\r\n    count = floodFill(grid, x + 1, y, replace, value, count);\r\n    count = floodFill(grid, x, y - 1, replace, value, count);\r\n    count = floodFill(grid, x, y + 1, replace, value, count);\r\n    return count;\r\n};\r\n\r\nconst colorGridRegions = (grid: WriteGrid<number>): number => {\r\n    let color = 1;\r\n    let largestColor = -1;\r\n    let largestRegion = 0;\r\n\r\n    while (true) {\r\n        const pos = GridTool.find(grid, (x, y, val) => val === 0);\r\n        if (pos === null) return largestColor;\r\n\r\n        const size = floodFill(grid, pos.x, pos.y, 0, color, 0);\r\n\r\n        if (size > largestRegion) {\r\n            largestRegion = size;\r\n            largestColor = color;\r\n        }\r\n\r\n        color++;\r\n    }\r\n};\r\n\r\nconst fixSingleTileBridges = (grid: WriteGrid<boolean>): void => {\r\n    GridTool.forEach(safeOutOfBounds(grid, true), (x, y, val) => {\r\n        if (!val) return;\r\n\r\n        if (val && !grid.at(x - 1, y) && !grid.at(x + 1, y)) {\r\n            grid.write(x + 1, y, true);\r\n        }\r\n\r\n        if (val && !grid.at(x, y - 1) && !grid.at(x, y + 1)) {\r\n            grid.write(x, y + 1, true);\r\n        }\r\n    });\r\n};\r\n\r\nexport const generateCave = (config: CaveGeneratorConfig): Cave => \r\n    generateCaveVerbose(config).cave;\r\n\r\nexport const generateCaveVerbose = (config: CaveGeneratorConfig): { cave: Cave, details: CaveBuildDetails } => {\r\n    const automatonResult = runCellularAutomaton(75, 75, config.seed, 0.48, 5, 4, 40);\r\n\r\n    const coloredGrid = GridTool.map(automatonResult, (x, y, val) => val ? -1 : 0);\r\n    const bigColor = colorGridRegions(coloredGrid);\r\n\r\n    const filledGrid = GridTool.map(coloredGrid, (x, y, val) => val !== bigColor);\r\n    fixSingleTileBridges(filledGrid);\r\n\r\n    const edgeMarkedGrid = markEdges(filledGrid);\r\n\r\n    const findContoursResult = findContours(edgeMarkedGrid, config.edgePointDist);\r\n\r\n    const outerMostContourIndex = findContoursResult.contours\r\n        .map((c, i) => ({ i, area: RectTool.area(findBounds(c)) }))\r\n        .sort((a, b) => b.area - a.area)\r\n        [0].i;\r\n\r\n    const smoothContours = findContoursResult.contours.map(x => smoothCurve(x, config.curveQuality, config.curveBend));\r\n\r\n    const BOUNDS = 0.51;\r\n\r\n    const mostTopLeft = (pts: Vec2[]): number =>\r\n        pts.map((p, i) => ({ i, len: (p.x+BOUNDS)*(p.x+BOUNDS) + (p.y+BOUNDS)*(p.y+BOUNDS) }))\r\n            .sort((a, b) => a.len - b.len)\r\n            [0].i;\r\n\r\n    const topLeftPtI = mostTopLeft(smoothContours[outerMostContourIndex]);\r\n    const topLeftPt = smoothContours[outerMostContourIndex][topLeftPtI];\r\n    const topLeftPrevPt = smoothContours[outerMostContourIndex][topLeftPtI === 0 ? smoothContours[outerMostContourIndex].length - 1 : topLeftPtI - 1];\r\n\r\n    const bumpDownAmount = Math.abs(topLeftPt.y - topLeftPrevPt.y);\r\n\r\n    smoothContours[outerMostContourIndex].splice(topLeftPtI, 0,\r\n        {x: -BOUNDS, y: -BOUNDS+bumpDownAmount},\r\n        {x: -BOUNDS, y:  BOUNDS},\r\n        {x:  BOUNDS, y:  BOUNDS},\r\n        {x:  BOUNDS, y: -BOUNDS},\r\n        {x: -BOUNDS, y: -BOUNDS},\r\n        {x: (topLeftPt.x + topLeftPrevPt.x) / 2, \r\n         y: (topLeftPt.y + topLeftPrevPt.y) / 2}\r\n    );\r\n\r\n    const triangles = smoothContours.map(triangulate);\r\n\r\n    smoothContours[outerMostContourIndex][topLeftPtI].y -= bumpDownAmount;\r\n    smoothContours[outerMostContourIndex][topLeftPtI+5].x = topLeftPrevPt.x;\r\n    smoothContours[outerMostContourIndex][topLeftPtI+5].y = topLeftPrevPt.y;\r\n\r\n    return {\r\n        cave: {\r\n            edges: smoothContours,\r\n            triangles\r\n        },\r\n        details: {\r\n            automatonResult,\r\n            coloredGrid,\r\n            filledGrid,\r\n            edgeMarkedGrid,\r\n            findContoursResult,\r\n            outerMostContourIndex,\r\n            topLeftMostVertexIndex: topLeftPtI\r\n        }\r\n    };\r\n};\r\n"],"sourceRoot":""}