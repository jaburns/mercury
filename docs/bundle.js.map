{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/utils/grid.ts","webpack:///./src/utils/math.ts","webpack:///./node_modules/lodash/_Symbol.js","webpack:///./src/webgl/shaderLoader.ts","webpack:///./src/caveGenerator/index.ts","webpack:///./src/caveGenerator/findContours.ts","webpack:///./node_modules/lodash/isObjectLike.js","webpack:///./src/webgl/frameBufferTexture.ts","webpack:///./src/index.ts","webpack:///./src/pages/vector-caves.ts","webpack:///./src/caveGenerator/automaton.ts","webpack:///./src/utils/prng.ts","webpack:///./src/caveGenerator/smoothCurve.ts","webpack:///./src/caveGenerator/triangulate.ts","webpack:///./src/pages/page2-webgl.ts","webpack:///./src/webgl/caveRenderer.ts","webpack:///./node_modules/lodash/flatten.js","webpack:///./node_modules/lodash/_baseFlatten.js","webpack:///./node_modules/lodash/_arrayPush.js","webpack:///./node_modules/lodash/_isFlattenable.js","webpack:///./node_modules/lodash/_root.js","webpack:///./node_modules/lodash/_freeGlobal.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/lodash/isArguments.js","webpack:///./node_modules/lodash/_baseIsArguments.js","webpack:///./node_modules/lodash/_baseGetTag.js","webpack:///./node_modules/lodash/_getRawTag.js","webpack:///./node_modules/lodash/_objectToString.js","webpack:///./node_modules/lodash/isArray.js","webpack:///./src/webgl/bufferRenderer.ts","webpack:///./src/webgl/gaussianBlur.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","WriteGrid","width","height","this","vals","Array","write","x","y","val","at","copyFrom","grid","safeOutOfBounds","oobValue","GridTool","find","test","forEach","fn","map","result","V2","add","a","b","plus","minus","length","Math","sqrt","scaled","RectTool","area","xmax","xmin","ymax","ymin","smallestDifferenceRadians","PI","abs","findBounds","pts","Infinity","loadShader","gl","url","fetch","then","response","ok","Error","status","text","shader","body","vertShader","createShader","VERTEX_SHADER","shaderSource","compileShader","vertLog","getShaderInfoLog","fragShader","FRAGMENT_SHADER","fragLog","prog","createProgram","attachShader","linkProgram","buildProgram","grid_1","automaton_1","findContours_1","smoothCurve_1","math_1","triangulate_1","floodFill","replace","count","tile","generateCave","config","generateCaveVerbose","cave","automatonResult","runCellularAutomaton","seed","coloredGrid","bigColor","color","largestColor","largestRegion","pos","size","colorGridRegions","filledGrid","edgeMarkedGrid","markEdges","findContoursResult","findContours","edgePointDist","outerMostContourIndex","contours","sort","smoothContours","smoothCurve","curveQuality","curveBend","topLeftPtI","len","topLeftPt","topLeftPrevPt","bumpDownAmount","splice","triangles","triangulate","edges","details","topLeftMostVertexIndex","WalkedStatus","kind","normal","u","spaceInsurance","walkMap","_","Unwalked","iter","newContour","findOneContour","push","bestCandidate","prev","candidates","minVal","minI","freshStart","findFreshContour","points","lastCan","dx","dy","lastStatus","Walked","newStatus","WalkedImportant","FrameBufferTexture","framebuffer","createFramebuffer","bindFramebuffer","FRAMEBUFFER","texture","createTexture","bindTexture","TEXTURE_2D","texImage2D","RGB","UNSIGNED_BYTE","texParameteri","TEXTURE_MIN_FILTER","LINEAR","TEXTURE_MAG_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","framebufferTexture2D","COLOR_ATTACHMENT0","release","deleteTexture","deleteFramebuffer","releaseTexture","vector_caves_1","page2_webgl_1","postInitters","vector-caves","initPost","page2-webgl","window","caveGenerator_1","randomColorHex","randPair","ret","floor","random","toString","colors","events","listener","ctx","document","getElementById","getContext","seedSlider","insuranceSlider","curvinessSlider","qualitySlider","ctx2","ctx3","ctx4","ctx5","ctx6","ctx7","ctx9","update","parseInt","parseFloat","_a","fillStyle","fillRect","degs","cos","sin","hx","round","hy","gridColorForNormal","curveSpaceToCanvasSpace","pt","strokeStyle","beginPath","first","moveTo","i_1","next","lineTo","closePath","stroke","i_2","ts","j","fill","e","prng_1","getNeighborhood","nx","ny","population","birth","survival","iterations","buffer","rand","nextRandom01","neighbors","M","prevRandom01","input","resolution","curviness","curr","lenA","lenB","midA","midB","midDiff","diffA","diffB","controlA","controlB","inc","newVal","indices","V","v","nv","w","snip","A","q","inside_triangle","B","C","P","ax","ay","bx","by","cx","cy","apx","apy","bpx","bpy","cpx","cpy","caveRenderer_1","frameBufferTexture_1","bufferRenderer_1","gaussianBlur_1","buildSurfaceInfoBuffers","Promise","all","CaveRenderer","BufferRenderer","GaussianBlur","caveRenderer","normalsBlit","gaussBlur0","gaussBlur1","frameBufferTex","viewport","clearColor","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","draw","run","resultTexture","uniform2f","getUniformLocation","canvas","depth","drawInfoBufferDemo","copyBlit","infoBuffers","drawBasicCaveDemo","flatten","shaderLoader_1","getFlatVerts","getFlatIndices","baseCount","tris","index","concat","vao","createVertexArray","bindVertexArray","vertexBuffer","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","Float32Array","STATIC_DRAW","enableVertexAttribArray","vertexAttribPointer","FLOAT","indexBufferData","indexBufferLen","indexBuffer","ELEMENT_ARRAY_BUFFER","Uint16Array","shaderPath","useProgram","drawElements","TRIANGLES","UNSIGNED_SHORT","deleteProgram","deleteBuffer","deleteVertexArray","baseFlatten","array","arrayPush","isFlattenable","predicate","isStrict","values","offset","isArguments","isArray","spreadableSymbol","isConcatSpreadable","undefined","freeGlobal","freeSelf","self","root","Function","global","g","baseIsArguments","isObjectLike","objectProto","propertyIsEnumerable","arguments","baseGetTag","argsTag","getRawTag","objectToString","nullTag","undefinedTag","symToStringTag","nativeObjectToString","isOwn","tag","unmasked","onPreDraw","activeTexture","TEXTURE0","loc_tex","uniform1i","drawArrays","bufferRenderer","frameTex0","frameTex1","_this"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 8);\n","export interface Grid<T> {\r\n    readonly width: number;\r\n    readonly height: number;\r\n    at(x: number, y: number): T;\r\n}\r\n\r\nexport type GridCallback<T> = (x: number, y: number, val: T) => void;\r\nexport type GridMapper<T,U> = (x: number, y: number, val: T) => U;\r\n\r\nexport class WriteGrid<T> implements Grid<T> {\r\n    public readonly width: number;\r\n    public readonly height: number;\r\n\r\n    private vals: T[];\r\n\r\n    constructor(width: number, height: number) {\r\n        this.width = width;\r\n        this.height = height;\r\n        this.vals = new Array(width * height);\r\n    }\r\n\r\n    write(x: number, y: number, val: T): void {\r\n        this.vals[x + y*this.width] = val;\r\n    }\r\n\r\n    at(x: number, y: number): T {\r\n        return this.vals[x + y*this.width];\r\n    }\r\n\r\n    copyFrom(grid: Grid<T>): void {\r\n        for (let x = 0; x < this.width && x < grid.width; ++x) {\r\n            for (let y = 0; y < this.height && y < grid.height; ++y) {\r\n                this.write(x, y, grid.at(x, y));\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport const safeOutOfBounds = <T>(grid: Grid<T>, oobValue: T): Grid<T> => ({\r\n    width: grid.width,\r\n    height: grid.height,\r\n    at: (x, y) => x < 0 || y < 0 || x >= grid.width || y >= grid.width ? oobValue : grid.at(x, y)\r\n});\r\n\r\nexport const GridTool = {\r\n    find: <T>(grid: Grid<T>, test: GridMapper<T, boolean>): { x: number, y: number } | null => {\r\n        for (let x = 0; x < grid.width; ++x) {\r\n            for (let y = 0; y < grid.height; ++y) {\r\n                if (test(x, y, grid.at(x, y))) {\r\n                    return { x, y };\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    },\r\n\r\n    forEach: <T>(grid: Grid<T>, fn: GridCallback<T>): void => {\r\n        for (let x = 0; x < grid.width; ++x) {\r\n            for (let y = 0; y < grid.height; ++y) {\r\n                fn(x, y, grid.at(x, y));\r\n            }\r\n        }\r\n    },\r\n\r\n    map: <T, U>(grid: Grid<T>, fn: GridMapper<T, U>): WriteGrid<U> => {\r\n        const result = new WriteGrid<U>(grid.width, grid.height);\r\n\r\n        for (let x = 0; x < grid.width; ++x) {\r\n            for (let y = 0; y < grid.height; ++y) {\r\n                result.write(x, y, fn(x, y, grid.at(x, y)));\r\n            }\r\n        }\r\n\r\n        return result;\r\n    },\r\n};","export interface Vec2 {\r\n    x: number,\r\n    y: number,\r\n}\r\n\r\nexport interface Rect {\r\n    xmin: number,\r\n    ymin: number,\r\n    xmax: number,\r\n    ymax: number,\r\n}\r\n\r\nexport const V2 = {\r\n    add: (a: Vec2, b: Vec2): void => {\r\n        a.x += b.x;\r\n        a.y += b.y;\r\n    },\r\n\r\n    plus: (a: Vec2, b: Vec2): Vec2 => ({\r\n        x: a.x + b.x,\r\n        y: a.y + b.y,\r\n    }),\r\n\r\n    minus: (a: Vec2, b: Vec2): Vec2 => ({\r\n        x: a.x - b.x,\r\n        y: a.y - b.y,\r\n    }),\r\n\r\n    length: (a: Vec2): number =>\r\n        Math.sqrt(a.x*a.x + a.y*a.y),\r\n    \r\n    scaled: (a: Vec2, s: number): Vec2 => ({\r\n        x: s * a.x,\r\n        y: s * a.y,\r\n    }),\r\n};\r\n\r\nexport const RectTool = {\r\n    area: (r: Rect): number =>\r\n        (r.xmax - r.xmin) * (r.ymax - r.ymin),\r\n};\r\n\r\nexport const smallestDifferenceRadians = (a: number, b: number): number => {\r\n    a %= 2 * Math.PI;\r\n    b %= 2 * Math.PI;\r\n\r\n    if (Math.abs(a - b) > Math.PI) {\r\n        if (a > 0) a -= 2 * Math.PI;\r\n        else a += 2 * Math.PI;\r\n    }\r\n\r\n    return a - b;\r\n};\r\n\r\nexport const findBounds = (pts: Vec2[]): Rect => {\r\n    const result: Rect = { xmin: Infinity, ymin: Infinity, xmax: -Infinity, ymax: -Infinity };\r\n\r\n    pts.forEach(p => {\r\n        if (p.x < result.xmin) result.xmin = p.x;\r\n        if (p.y < result.ymin) result.ymin = p.y;\r\n        if (p.x > result.xmax) result.xmax = p.x;\r\n        if (p.y > result.ymax) result.ymax = p.y;\r\n    });\r\n\r\n    return result;\r\n};","var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n","const VERT_HEADER = \r\n    `#version 300 es\r\n    #define VERTEX\r\n    #define v2f out\r\n    `;\r\n\r\nconst FRAG_HEADER = \r\n    `#version 300 es\r\n    #define FRAGMENT\r\n    #define v2f in\r\n    precision highp float;\r\n    `;\r\n\r\nconst buildProgram = (gl: WebGLRenderingContext, body: string): WebGLProgram | string => {\r\n    const vertShader = gl.createShader(gl.VERTEX_SHADER) as WebGLShader;\r\n    gl.shaderSource(vertShader, VERT_HEADER + body + '\\n');\r\n    gl.compileShader(vertShader);\r\n\r\n    const vertLog = gl.getShaderInfoLog(vertShader);\r\n    if (vertLog === null || vertLog.length > 0) {\r\n        return vertLog as string;\r\n    }\r\n\r\n    const fragShader = gl.createShader(gl.FRAGMENT_SHADER) as WebGLShader;\r\n    gl.shaderSource(fragShader, FRAG_HEADER + body + '\\n');\r\n    gl.compileShader(fragShader);\r\n\r\n    const fragLog = gl.getShaderInfoLog(fragShader);\r\n    if (fragLog === null || fragLog.length > 0) {\r\n        return fragLog as string;\r\n    }\r\n\r\n    const prog = gl.createProgram() as WebGLProgram;\r\n    gl.attachShader(prog, vertShader);\r\n    gl.attachShader(prog, fragShader);\r\n    gl.linkProgram(prog);\r\n    return prog;\r\n};\r\n\r\nexport const loadShader = (gl: WebGLRenderingContext, url: string): Promise<WebGLProgram | string> =>\r\n    fetch(url)\r\n        .then(response => {\r\n            if (!response.ok) throw new Error(\"HTTP error, status = \" + response.status);\r\n            return response.text();\r\n        })\r\n        .then(shader => buildProgram(gl, shader));","import { Grid, WriteGrid, GridTool, safeOutOfBounds } from 'utils/grid';\r\nimport { runCellularAutomaton } from './automaton';\r\nimport { markEdges, findContours, EdgeMarkedMapTile, FindContoursResult } from './findContours';\r\nimport { smoothCurve } from './smoothCurve';\r\nimport { Vec2, findBounds, RectTool } from 'utils/math';\r\nimport { triangulate } from './triangulate';\r\n\r\nexport interface CaveGeneratorConfig {\r\n    seed: number,\r\n    edgePointDist: 0 | 1 | 2,\r\n    curveQuality: number,\r\n    curveBend: number,\r\n}\r\n\r\nexport interface Cave {\r\n    edges: Vec2[][],\r\n    triangles: number[][],\r\n}\r\n\r\nexport interface CaveBuildDetails {\r\n    automatonResult: Grid<boolean>;\r\n    coloredGrid: Grid<number>;\r\n    filledGrid: Grid<boolean>;\r\n    edgeMarkedGrid: Grid<EdgeMarkedMapTile>;\r\n    findContoursResult: FindContoursResult;\r\n    outerMostContourIndex: number;\r\n    topLeftMostVertexIndex: number;\r\n}\r\n\r\nconst floodFill = (grid: WriteGrid<number>, x: number, y: number, replace: number, value: number, count: number): number => {\r\n    if (x < 0 || y < 0) return count;\r\n    if (x >= grid.width || y >= grid.height) return count;\r\n\r\n    const tile = grid.at(x, y);\r\n\r\n    if (tile === value) return count;\r\n    if (tile !== replace) return count;\r\n\r\n    grid.write(x, y, value);\r\n    count++;\r\n\r\n    count = floodFill(grid, x - 1, y, replace, value, count);\r\n    count = floodFill(grid, x + 1, y, replace, value, count);\r\n    count = floodFill(grid, x, y - 1, replace, value, count);\r\n    count = floodFill(grid, x, y + 1, replace, value, count);\r\n    return count;\r\n};\r\n\r\nconst colorGridRegions = (grid: WriteGrid<number>): number => {\r\n    let color = 1;\r\n    let largestColor = -1;\r\n    let largestRegion = 0;\r\n\r\n    while (true) {\r\n        const pos = GridTool.find(grid, (x, y, val) => val === 0);\r\n        if (pos === null) return largestColor;\r\n\r\n        const size = floodFill(grid, pos.x, pos.y, 0, color, 0);\r\n\r\n        if (size > largestRegion) {\r\n            largestRegion = size;\r\n            largestColor = color;\r\n        }\r\n\r\n        color++;\r\n    }\r\n};\r\n\r\nconst fixSingleTileBridges = (grid: WriteGrid<boolean>): void => {\r\n    GridTool.forEach(safeOutOfBounds(grid, true), (x, y, val) => {\r\n        if (!val) return;\r\n\r\n        if (val && !grid.at(x - 1, y) && !grid.at(x + 1, y)) {\r\n            grid.write(x + 1, y, true);\r\n        }\r\n\r\n        if (val && !grid.at(x, y - 1) && !grid.at(x, y + 1)) {\r\n            grid.write(x, y + 1, true);\r\n        }\r\n    });\r\n};\r\n\r\nexport const generateCave = (config: CaveGeneratorConfig): Cave => \r\n    generateCaveVerbose(config).cave;\r\n\r\nexport const generateCaveVerbose = (config: CaveGeneratorConfig): { cave: Cave, details: CaveBuildDetails } => {\r\n    const automatonResult = runCellularAutomaton(75, 75, config.seed, 0.48, 5, 4, 40);\r\n\r\n    const coloredGrid = GridTool.map(automatonResult, (x, y, val) => val ? -1 : 0);\r\n    const bigColor = colorGridRegions(coloredGrid);\r\n\r\n    const filledGrid = GridTool.map(coloredGrid, (x, y, val) => val !== bigColor);\r\n    fixSingleTileBridges(filledGrid);\r\n\r\n    const edgeMarkedGrid = markEdges(filledGrid);\r\n\r\n    const findContoursResult = findContours(edgeMarkedGrid, config.edgePointDist);\r\n\r\n    const outerMostContourIndex = findContoursResult.contours\r\n        .map((c, i) => ({ i, area: RectTool.area(findBounds(c)) }))\r\n        .sort((a, b) => b.area - a.area)\r\n        [0].i;\r\n\r\n    const smoothContours = findContoursResult.contours.map(x => smoothCurve(x, config.curveQuality, config.curveBend));\r\n\r\n    const BOUNDS = 1.0;\r\n\r\n    const mostTopLeft = (pts: Vec2[]): number =>\r\n        pts.map((p, i) => ({ i, len: (p.x+BOUNDS)*(p.x+BOUNDS) + (p.y+BOUNDS)*(p.y+BOUNDS) }))\r\n            .sort((a, b) => a.len - b.len)\r\n            [0].i;\r\n\r\n    const topLeftPtI = mostTopLeft(smoothContours[outerMostContourIndex]);\r\n    const topLeftPt = smoothContours[outerMostContourIndex][topLeftPtI];\r\n    const topLeftPrevPt = smoothContours[outerMostContourIndex][topLeftPtI === 0 ? smoothContours[outerMostContourIndex].length - 1 : topLeftPtI - 1];\r\n\r\n    const bumpDownAmount = Math.abs(topLeftPt.y - topLeftPrevPt.y);\r\n\r\n    smoothContours[outerMostContourIndex].splice(topLeftPtI, 0,\r\n        {x: -BOUNDS, y: -BOUNDS+bumpDownAmount},\r\n        {x: -BOUNDS, y:  BOUNDS},\r\n        {x:  BOUNDS, y:  BOUNDS},\r\n        {x:  BOUNDS, y: -BOUNDS},\r\n        {x: -BOUNDS, y: -BOUNDS},\r\n        {x: (topLeftPt.x + topLeftPrevPt.x) / 2, \r\n         y: (topLeftPt.y + topLeftPrevPt.y) / 2}\r\n    );\r\n\r\n    const triangles = smoothContours.map(triangulate);\r\n\r\n    smoothContours[outerMostContourIndex][topLeftPtI].y -= bumpDownAmount;\r\n    smoothContours[outerMostContourIndex][topLeftPtI+5].x = topLeftPrevPt.x;\r\n    smoothContours[outerMostContourIndex][topLeftPtI+5].y = topLeftPrevPt.y;\r\n\r\n    return {\r\n        cave: {\r\n            edges: smoothContours,\r\n            triangles\r\n        },\r\n        details: {\r\n            automatonResult,\r\n            coloredGrid,\r\n            filledGrid,\r\n            edgeMarkedGrid,\r\n            findContoursResult,\r\n            outerMostContourIndex,\r\n            topLeftMostVertexIndex: topLeftPtI\r\n        }\r\n    };\r\n};\r\n","import { Grid, WriteGrid, GridTool, safeOutOfBounds } from 'utils/grid';\r\nimport { Vec2, smallestDifferenceRadians } from 'utils/math';\r\n\r\nexport interface EdgeMarkedMapTile {\r\n    kind: 'air' | 'dirt' | 'edge',\r\n    normal: number,\r\n}\r\n\r\nexport const markEdges = (grid: Grid<boolean>): WriteGrid<EdgeMarkedMapTile> => {\r\n    const result = GridTool.map(grid, (x, y, val): EdgeMarkedMapTile => \r\n        ({ kind: val ? 'dirt' : 'air', normal: 0 }));\r\n\r\n    for (let x = 0; x < grid.width; x++) {\r\n        for (let y = 0; y < grid.height; y++) {\r\n            if (!grid.at(x, y)) continue;\r\n\r\n            const l = x > 0               && !grid.at(x-1, y);\r\n            const r = x < grid.width - 2  && !grid.at(x+1, y);\r\n            const u = y > 0               && !grid.at(x, y-1);\r\n            const d = y < grid.height - 2 && !grid.at(x, y+1);\r\n\r\n            if (!l && !r && !u && !d) continue;\r\n\r\n            const normal = r && d ? 45 :\r\n                d && l ?  135 :\r\n                l && u ? -135 :\r\n                u && r ?  -45 :\r\n                r ? 0 :\r\n                d ? 90 :\r\n                l ? 180 :\r\n                -90;\r\n\r\n            result.write(x, y, { kind: 'edge', normal });\r\n        }\r\n    }\r\n\r\n    return result;\r\n};\r\n\r\nexport enum WalkedStatus {\r\n    Unwalked,\r\n    Walked,\r\n    WalkedImportant,\r\n}\r\n\r\ninterface WalkCandidate {\r\n    dx: number,\r\n    dy: number,\r\n    normal: number,\r\n}\r\n\r\ninterface GridPoint {\r\n    x: number,\r\n    y: number,\r\n}\r\n\r\nexport interface FindContoursResult {\r\n    contours: Vec2[][],\r\n    walkMap: WriteGrid<WalkedStatus>,\r\n}\r\n\r\nexport const findContours = (grid: Grid<EdgeMarkedMapTile>, spaceInsurance: 0 | 1 | 2): FindContoursResult => {\r\n    const MAX_ITER = 100;\r\n    const walkMap = GridTool.map(new WriteGrid<WalkedStatus>(grid.width, grid.height), _ => WalkedStatus.Unwalked);\r\n    const contours: Vec2[][] = [];\r\n\r\n    let iter = 0;\r\n    let newContour: Vec2[] | null = null;\r\n\r\n    do {\r\n        newContour = findOneContour(walkMap, grid, spaceInsurance);\r\n        if (newContour !== null && newContour.length > 2) {\r\n            contours.push(newContour);\r\n        }\r\n    } while (newContour != null && iter++ < MAX_ITER);\r\n\r\n    return { contours, walkMap };\r\n}\r\n\r\nconst findFreshContour = (walkMap: Grid<WalkedStatus>, grid: Grid<EdgeMarkedMapTile>): GridPoint | null => {\r\n    for (let x = 0; x < grid.width; x++) {\r\n        for (let y = 0; y < grid.height; y++) {\r\n            if (grid.at(x, y).kind === 'edge' && walkMap.at(x, y) === WalkedStatus.Unwalked) {\r\n                return { x, y };\r\n            }\r\n        }\r\n    }\r\n\r\n    return null;\r\n};\r\n\r\nconst bestCandidate = (prev: WalkCandidate, candidates: WalkCandidate[]): WalkCandidate => {\r\n    let minVal = 100;\r\n    let minI = 0;\r\n\r\n    for (let i = 0; i < candidates.length; ++i) {\r\n        const c = candidates[i];\r\n        const d = Math.abs(smallestDifferenceRadians(\r\n            c.normal * Math.PI / 180,\r\n            prev.normal * Math.PI / 180\r\n        ));\r\n\r\n        if (d < minVal) {\r\n            minVal = d;\r\n            minI = i;\r\n        }\r\n    }\r\n\r\n    return candidates[minI];\r\n};\r\n\r\nconst findOneContour = (walkMap: WriteGrid<WalkedStatus>, grid: Grid<EdgeMarkedMapTile>, spaceInsurance: 0 | 1 | 2): Vec2[] | null => {\r\n    const MAX_ITER = 5000;\r\n\r\n    const freshStart = findFreshContour(walkMap, grid);\r\n    if (freshStart === null) {\r\n        return null;\r\n    }\r\n\r\n    grid = safeOutOfBounds(grid, {kind: 'dirt', normal: 0} as EdgeMarkedMapTile);\r\n\r\n    const points: Vec2[] = [];\r\n    let x = freshStart.x;\r\n    let y = freshStart.y;\r\n\r\n    let iter = 0;\r\n    let lastCan: WalkCandidate = { dx: 0, dy: 0, normal: 0 };\r\n    let lastStatus = WalkedStatus.Walked;\r\n    let candidates: WalkCandidate[] = [];\r\n\r\n    do {\r\n        candidates = [];\r\n\r\n        for (let dx = -1; dx <= 1; dx++) {\r\n            for (let dy = -1; dy <= 1; dy++) {\r\n                if (dx === 0 && dy === 0) continue;\r\n                if (grid.at(x+dx, y+dy).kind === 'edge'\r\n                && walkMap.at(x+dx, y+dy) === WalkedStatus.Unwalked) {\r\n                    candidates.push({dx, dy, normal: grid.at(x+dx, y+dy).normal});\r\n                }\r\n            }\r\n        }\r\n\r\n        if (candidates.length > 0) {\r\n            const c = bestCandidate(lastCan, candidates);\r\n            x += c.dx;\r\n            y += c.dy;\r\n\r\n            let newStatus = WalkedStatus.Walked;\r\n            if (c.normal !== lastCan.normal) {\r\n                let important;\r\n                if (spaceInsurance === 0) {\r\n                    important = true;\r\n                } else if (spaceInsurance === 1) {\r\n                    important = c.dx != 0 && c.dy != 0 || lastStatus != WalkedStatus.WalkedImportant;\r\n                } else {\r\n                    important = lastStatus != WalkedStatus.WalkedImportant;\r\n                }\r\n\r\n                if (important) {\r\n                    newStatus = WalkedStatus.WalkedImportant;\r\n                }\r\n            }\r\n\r\n            if (newStatus === WalkedStatus.WalkedImportant) {\r\n                points.push({\r\n                    x: 2*(x + 0.5)/grid.width - 1,\r\n                    y: 2*(y + 0.5)/grid.height - 1,\r\n                });\r\n            }\r\n\r\n            walkMap.write(x, y, newStatus);\r\n            lastStatus = newStatus;\r\n            lastCan = c;\r\n        }\r\n    }\r\n    while (candidates.length > 0 && iter++ < MAX_ITER);\r\n\r\n    return points;\r\n};","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n","export class FrameBufferTexture {\r\n    readonly framebuffer: WebGLFramebuffer;\r\n    readonly texture: WebGLTexture;\r\n\r\n    private readonly gl: WebGL2RenderingContext;\r\n\r\n    constructor(gl: WebGL2RenderingContext, width: number, height: number) {\r\n        this.gl = gl;\r\n\r\n        this.framebuffer = gl.createFramebuffer() as WebGLFramebuffer;\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\r\n        \r\n        this.texture = gl.createTexture() as WebGLTexture;\r\n        gl.bindTexture(gl.TEXTURE_2D, this.texture);\r\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGB, width, height, 0, gl.RGB, gl.UNSIGNED_BYTE, null);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR); \r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n        \r\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.texture, 0); \r\n    }\r\n\r\n    release() {\r\n        const gl = this.gl;\r\n\r\n        gl.bindTexture(gl.TEXTURE_2D, null);\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n\r\n        gl.deleteTexture(this.texture);\r\n        gl.deleteFramebuffer(this.framebuffer);\r\n    }\r\n\r\n    releaseTexture(): WebGLTexture {\r\n        const gl = this.gl;\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n        gl.deleteFramebuffer(this.framebuffer);\r\n\r\n        return this.texture;\r\n    }\r\n}\r\n","import { initPost as initPost_vectorCaves } from 'pages/vector-caves';\r\nimport { initPost as initPost_webgl } from 'pages/page2-webgl';\r\n\r\nconst postInitters: {[key: string]: () => void} = {\r\n    'vector-caves': initPost_vectorCaves,\r\n    'page2-webgl': initPost_webgl\r\n};\r\n\r\n(window as any).initPost = (name: string): void =>\r\n    postInitters[name]();","import { generateCaveVerbose, CaveGeneratorConfig } from 'caveGenerator';\r\nimport { GridTool } from 'utils/grid';\r\nimport { WalkedStatus } from 'caveGenerator/findContours';\r\nimport { Vec2 } from 'utils/math';\r\n\r\nconst randomColorHex = (): string => {\r\n    const randPair = (): string => {\r\n        let ret = Math.floor(Math.random() * 256).toString(16);\r\n        if (ret.length < 2) ret = '0'+ret;\r\n        return ret;\r\n    };\r\n\r\n    return '#' + randPair() + randPair() + randPair();\r\n};\r\n\r\nconst colors = [0,0,0,0,0,0,0,0,0,0].map(_ => randomColorHex());\r\n\r\nconst gridColorForNumber = (n: number): string => {\r\n    if (n < 0) return '#000';\r\n    return colors[n % colors.length];\r\n};\r\n\r\nconst gridColorForNormal = (degs: number): string => {\r\n    const x = Math.cos(degs * Math.PI / 180);\r\n    const y = Math.sin(degs * Math.PI / 180);\r\n\r\n    const hx = Math.round(15 * (0.5*x + 0.5));\r\n    const hy = Math.round(15 * (0.5*y + 0.5));\r\n\r\n    const result = '#' + hx.toString(16) + hy.toString(16) + 'f';\r\n\r\n    return result;\r\n};\r\n\r\nconst multibind = (objs: any[], events: string[], listener: Function): void => {\r\n    objs.forEach(o => {\r\n        events.forEach(e => {\r\n            o[e] = listener;\r\n        });\r\n    });\r\n};\r\n\r\nexport const initPost = () :void => {\r\n    const firstCanvas = document.getElementById('first-canvas') as HTMLCanvasElement;\r\n    const ctx = firstCanvas.getContext('2d') as CanvasRenderingContext2D;\r\n\r\n    const seedSlider = document.getElementById('seed-slider') as HTMLInputElement;\r\n    const insuranceSlider = document.getElementById('insurance-slider') as HTMLInputElement;\r\n    const curvinessSlider = document.getElementById('curviness-slider') as HTMLInputElement;\r\n    const qualitySlider = document.getElementById('quality-slider') as HTMLInputElement;\r\n\r\n    const secondCanvas = document.getElementById('second-canvas') as HTMLCanvasElement;\r\n    const ctx2 = secondCanvas.getContext('2d') as CanvasRenderingContext2D;\r\n\r\n    const thirdCanvas = document.getElementById('third-canvas') as HTMLCanvasElement;\r\n    const ctx3 = thirdCanvas.getContext('2d') as CanvasRenderingContext2D;\r\n\r\n    const fourthCanvas = document.getElementById('fourth-canvas') as HTMLCanvasElement;\r\n    const ctx4 = fourthCanvas.getContext('2d') as CanvasRenderingContext2D;\r\n\r\n    const fifthCanvas = document.getElementById('fifth-canvas') as HTMLCanvasElement;\r\n    const ctx5 = fifthCanvas.getContext('2d') as CanvasRenderingContext2D;\r\n\r\n    const sixthCanvas = document.getElementById('sixth-canvas') as HTMLCanvasElement;\r\n    const ctx6 = sixthCanvas.getContext('2d') as CanvasRenderingContext2D;\r\n\r\n    const seventhCanvas = document.getElementById('seventh-canvas') as HTMLCanvasElement;\r\n    const ctx7 = seventhCanvas.getContext('2d') as CanvasRenderingContext2D;\r\n\r\n    const ninthCanvas = document.getElementById('ninth-canvas') as HTMLCanvasElement;\r\n    const ctx9 = ninthCanvas.getContext('2d') as CanvasRenderingContext2D;\r\n\r\n    const update = () :void => {\r\n        const config: CaveGeneratorConfig = {\r\n            seed: parseInt(seedSlider.value),\r\n            edgePointDist: parseInt(insuranceSlider.value) as any,\r\n            curveBend: 2 * parseFloat(curvinessSlider.value) / 100,\r\n            curveQuality: parseFloat(qualitySlider.value), \r\n        };\r\n\r\n        const { cave, details } = generateCaveVerbose(config);\r\n\r\n        GridTool.forEach(details.automatonResult, (x, y, val) => {\r\n            ctx.fillStyle = val ? '#000' : '#FFF';\r\n            ctx.fillRect(4*x, 4*y, 4, 4);\r\n        });\r\n\r\n        GridTool.forEach(details.coloredGrid, (x, y, val) => {\r\n            ctx2.fillStyle = gridColorForNumber(val);\r\n            ctx2.fillRect(4*x, 4*y, 4, 4);\r\n        });\r\n\r\n        GridTool.forEach(details.filledGrid, (x, y, val) => {\r\n            ctx3.fillStyle = val ? '#000' : '#FFF';\r\n            ctx3.fillRect(4*x, 4*y, 4, 4);\r\n        });\r\n\r\n        GridTool.forEach(details.edgeMarkedGrid, (x, y, val) => {\r\n            ctx4.fillStyle = val.kind === 'edge' ? gridColorForNormal(val.normal) : val.kind === 'air' ? '#655' : '#77f';\r\n            ctx4.fillRect(4*x, 4*y, 4, 4);\r\n        });\r\n\r\n        const contours = details.findContoursResult;\r\n\r\n        GridTool.forEach(contours.walkMap, (x, y, val) => {\r\n            ctx5.fillStyle = val === WalkedStatus.WalkedImportant ? '#fff' : val === WalkedStatus.Walked ? '#333' : '#000';\r\n            ctx5.fillRect(4*x, 4*y, 4, 4);\r\n\r\n            ctx6.fillStyle = val === WalkedStatus.WalkedImportant ? '#333' : '#000';\r\n            ctx6.fillRect(9*x, 9*y, 9, 9);\r\n        });\r\n\r\n        const BIG_CANVAS_SIZE = 675;\r\n\r\n        const curveSpaceToCanvasSpace = (pt: Vec2): Vec2 => ({ \r\n            x: (BIG_CANVAS_SIZE / 2) * (1 + pt.x),\r\n            y: (BIG_CANVAS_SIZE / 2) * (1 + pt.y)\r\n        });\r\n\r\n        // =--------------------------------------------\r\n\r\n        contours.contours.forEach((c, i) => {\r\n            ctx6.strokeStyle = i === details.outerMostContourIndex ? '#f00' : '#933';\r\n\r\n            ctx6.beginPath();\r\n            const first = curveSpaceToCanvasSpace(c[0]);\r\n            ctx6.moveTo(first.x, first.y);\r\n\r\n            for (let i = 1; i < c.length; ++i) {\r\n                const next = curveSpaceToCanvasSpace(c[i]);\r\n                ctx6.lineTo(next.x, next.y);\r\n            }\r\n\r\n            ctx6.closePath();\r\n            ctx6.stroke();\r\n        });\r\n\r\n        // =--------------------------------------------\r\n\r\n        ctx7.strokeStyle = '#0f0';\r\n        ctx7.fillStyle = '#000';\r\n        ctx7.fillRect(0, 0, BIG_CANVAS_SIZE, BIG_CANVAS_SIZE);\r\n\r\n        cave.edges.forEach((c, i) => {\r\n            ctx7.strokeStyle = i === details.outerMostContourIndex ? '#0f0' : '#393';\r\n\r\n            ctx7.beginPath();\r\n            const first = curveSpaceToCanvasSpace(c[0]);\r\n            ctx7.moveTo(first.x, first.y);\r\n\r\n            for (let i = 1; i < c.length; ++i) {\r\n                const next = curveSpaceToCanvasSpace(c[i]);\r\n                ctx7.lineTo(next.x, next.y);\r\n            }\r\n\r\n            ctx7.closePath();\r\n            ctx7.stroke();\r\n        });\r\n\r\n        // =--------------------------------------------\r\n\r\n        ctx9.fillStyle = '#000';\r\n        ctx9.fillRect(0, 0, BIG_CANVAS_SIZE, BIG_CANVAS_SIZE);\r\n\r\n        cave.triangles.forEach((ts,j) => {\r\n            for (let i = 0; i < ts.length - 2; i += 3) {\r\n                ctx9.fillStyle = randomColorHex();\r\n                ctx9.beginPath();\r\n\r\n                const first = curveSpaceToCanvasSpace(cave.edges[j][ts[i]]);\r\n                ctx9.moveTo(first.x, first.y);\r\n\r\n                [1, 2, 0].forEach(o => {\r\n                    const a = curveSpaceToCanvasSpace(cave.edges[j][ts[i+o]]);\r\n                    ctx9.lineTo(a.x, a.y);\r\n                })\r\n\r\n                ctx9.fill();\r\n            }\r\n        });\r\n    };\r\n\r\n    multibind(\r\n        [seedSlider, insuranceSlider, curvinessSlider, qualitySlider],\r\n        ['oninput', 'onchange'],\r\n        update\r\n    );\r\n    update();\r\n};\r\n","import { nextRandom01 } from 'utils/prng';\r\nimport { WriteGrid, Grid } from 'utils/grid';\r\n\r\nconst getNeighborhood = (map: Grid<boolean>, x: number, y: number): number => {\r\n    let result: number = 0;\r\n\r\n    for (let nx = x-1; nx <= x+1; ++nx) {\r\n        for (let ny = y-1; ny <= y+1; ++ny) {\r\n            if (nx == x && ny == y) continue;\r\n            if (nx < 1 || ny < 1 || nx >= map.width-1 || ny >= map.height-1) result++;\r\n            else result += map.at(nx,ny) ? 1 : 0;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport const runCellularAutomaton = (width: number, height: number, seed: number, population: number, birth: number, survival: number, iterations: number): Grid<boolean> => {\r\n    const result = new WriteGrid<boolean>(width, height);\r\n    const buffer = new WriteGrid<boolean>(width, height);\r\n    let rand = nextRandom01(seed / 101);\r\n\r\n    for (let x = 0; x < width; ++x) {\r\n        for (let y = 0; y < height; ++y) {\r\n            const fill = x === 0 || y === 0 || x === width-1 || y === height-1 || rand < population;\r\n            result.write(x, y, fill);\r\n            buffer.write(x, y, fill);\r\n\r\n            rand = nextRandom01(rand);\r\n        }\r\n    }\r\n\r\n    for (let i = 0; i < iterations; ++i) {\r\n        for (let x = 1; x < width-1; ++x) {\r\n            for (let y = 1; y < height-1; ++y) {\r\n                const neighbors = getNeighborhood(result, x, y);\r\n                buffer.write(x, y, neighbors >= (result.at(x, y) ? survival : birth));\r\n            }\r\n        }\r\n        result.copyFrom(buffer);\r\n    }\r\n\r\n    return result;\r\n}","// https://en.wikipedia.org/wiki/Linear_congruential_generator\r\n\r\nconst M = 4294967296;\r\nconst A = 1664525;\r\nconst C = 1013904223;\r\n\r\nexport const nextRandom01 = (prevRandom01: number): number => \r\n    ((A * Math.floor(prevRandom01 * M) + C) % M) / M;","import { Vec2, V2 } from 'utils/math';\r\n\r\ninterface Pt {\r\n    pt: Vec2,\r\n    controlA: Vec2,\r\n    controlB: Vec2,\r\n}\r\n\r\nexport const smoothCurve = (input: Vec2[], resolution: number, curviness: number): Vec2[] => {\r\n    const pts: Pt[] = [];\r\n\r\n    if (resolution < 1) resolution = 1;\r\n\r\n    for (let i = 0; i < input.length; ++i) {\r\n        const prev = input[i == 0 ? input.length-1 : i-1];\r\n        const curr = input[i];\r\n        const next = input[(i + 1) % input.length];\r\n\r\n        const lenA = V2.length(V2.minus(prev, curr));\r\n        const lenB = V2.length(V2.minus(curr, next));\r\n\r\n        const midA = V2.scaled(V2.plus(prev, curr), 0.5);\r\n        const midB = V2.scaled(V2.plus(curr, next), 0.5);\r\n        const midDiff = V2.scaled(V2.minus(midA, midB), curviness);\r\n\r\n        const diffA = V2.scaled(midDiff,  lenA / (lenA + lenB));\r\n        const diffB = V2.scaled(midDiff, -lenB / (lenA + lenB));\r\n\r\n        pts.push({\r\n            pt: curr,\r\n            controlA: V2.plus(curr, diffA),\r\n            controlB: V2.plus(curr, diffB),\r\n        });\r\n    }\r\n\r\n    const inc = 1 / resolution;\r\n\r\n    const result: Vec2[] = [];\r\n    for (let i = 0; i < pts.length; ++i) {\r\n        const curr = pts[i];\r\n        const next = pts[(i + 1) % pts.length];\r\n\r\n        for (let t = 0; t < 1 - (inc / 2); t += inc) {\r\n            let newVal: Vec2 = { x: 0, y: 0 };\r\n\r\n            V2.add(newVal, V2.scaled(curr.pt       , (1-t)*(1-t)*(1-t)));\r\n            V2.add(newVal, V2.scaled(curr.controlB , 3*(1-t)*(1-t)*t));\r\n            V2.add(newVal, V2.scaled(next.controlA , 3*(1-t)*t*t));\r\n            V2.add(newVal, V2.scaled(next.pt       , t*t*t));\r\n\r\n            result.push(newVal);\r\n        }\r\n    }\r\n\r\n    return result;\r\n};","import { Vec2 } from 'utils/math';\r\n\r\nexport const triangulate = (points: Vec2[]): number[] => {\r\n    const indices: number[] = [];\r\n    const n = points.length;\r\n    if (n < 3) return indices;\r\n\r\n    const V: number[] = new Array(n);\r\n    if (area(points) > 0) {\r\n        for (let v = 0; v < n; v++) V[v] = v;\r\n    } else {\r\n        for (let v = 0; v < n; v++) V[v] = (n - 1) - v;\r\n    }\r\n\r\n    let nv = n;\r\n    let count = 2 * nv;\r\n    for (let v = nv - 1; nv > 2; ) {\r\n        if ((count--) <= 0) return indices;\r\n\r\n        let u = v;\r\n        if (nv <= u) u = 0;\r\n        v = u + 1;\r\n        if (nv <= v) v = 0;\r\n        let w = v + 1;\r\n        if (nv <= w) w = 0;\r\n\r\n        if (snip(points, u, v, w, nv, V)) {\r\n            indices.push(V[u]);\r\n            indices.push(V[v]);\r\n            indices.push(V[w]);\r\n            for (let s = v, t = v + 1; t < nv; s++, t++) V[s] = V[t];\r\n            nv--;\r\n            count = 2 * nv;\r\n        }\r\n    }\r\n\r\n    return indices;\r\n};\r\n\r\nconst area = (points: Vec2[]): number => {\r\n    let A = 0;\r\n    for (let p = points.length - 1, q = 0; q < points.length; p = q++) {\r\n        A += points[p].x * points[q].y - points[q].x * points[p].y;\r\n    }\r\n    return A / 2;\r\n};\r\n\r\nconst inside_triangle = (A: Vec2, B: Vec2, C: Vec2, P: Vec2): boolean => {\r\n    const ax = C.x - B.x, ay = C.y - B.y;\r\n    const bx = A.x - C.x, by = A.y - C.y;\r\n    const cx = B.x - A.x, cy = B.y - A.y;\r\n    const apx = P.x - A.x, apy = P.y - A.y;\r\n    const bpx = P.x - B.x, bpy = P.y - B.y;\r\n    const cpx = P.x - C.x, cpy = P.y - C.y;\r\n\r\n    const aCROSSbp = ax * bpy - ay * bpx;\r\n    const cCROSSap = cx * apy - cy * apx;\r\n    const bCROSScp = bx * cpy - by * cpx;\r\n\r\n    return aCROSSbp >= 0 && bCROSScp >= 0 && cCROSSap >= 0;\r\n};\r\n\r\nconst snip = (points: Vec2[], u: number, v: number, w: number, n: number, V: number[]): boolean => {\r\n    const A = points[V[u]];\r\n    const B = points[V[v]];\r\n    const C = points[V[w]];\r\n\r\n    const pdiff = (B.x - A.x) * (C.y - A.y) - (B.y - A.y) * (C.x - A.x);\r\n    if (pdiff < 1e-7) return false;\r\n\r\n    for (let p = 0; p < n; p++) {\r\n        if ((p == u) || (p == v) || (p == w)) continue;\r\n        const P = points[V[p]];\r\n        if (inside_triangle(A, B, C, P)) return false;\r\n    }\r\n\r\n    return true;\r\n};","import { generateCave, Cave } from 'caveGenerator';\r\nimport { CaveRenderer } from \"webgl/caveRenderer\";\r\nimport { FrameBufferTexture } from \"webgl/frameBufferTexture\";\r\nimport { BufferRenderer } from 'webgl/bufferRenderer';\r\nimport { GaussianBlur } from 'webgl/gaussianBlur';\r\n\r\ninterface SurfaceInfoBuffers {\r\n    readonly depth: WebGLTexture,\r\n    readonly normal: WebGLTexture,\r\n}\r\n\r\nconst buildSurfaceInfoBuffers = (gl: WebGL2RenderingContext, size: number, cave: Cave): Promise<SurfaceInfoBuffers> =>\r\n    Promise.all([\r\n        CaveRenderer.create(gl, 'shaders/flatWhite.glsl', cave),\r\n        BufferRenderer.create(gl, 'shaders/normals.glsl'),\r\n        GaussianBlur.create(gl, size, size),\r\n        GaussianBlur.create(gl, size, size)\r\n    ])\r\n    .then(([caveRenderer, normalsBlit, gaussBlur0, gaussBlur1]) => {\r\n        const frameBufferTex = new FrameBufferTexture(gl, size, size);\r\n\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, frameBufferTex.framebuffer);\r\n        gl.viewport(0, 0, size, size);\r\n        gl.clearColor(0, 0, 0, 1);\r\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n        caveRenderer.draw();\r\n\r\n        gaussBlur0.run(frameBufferTex.texture, 30);\r\n\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, frameBufferTex.framebuffer);\r\n        gl.viewport(0, 0, size, size);\r\n\r\n        normalsBlit.draw(gaussBlur0.resultTexture, (gl, shader) => {\r\n            gl.uniform2f(gl.getUniformLocation(shader, \"u_resolution\"), size, size);\r\n        });\r\n\r\n        gaussBlur1.run(frameBufferTex.texture, 2);\r\n\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n        gl.viewport(0, 0, gl.canvas.width, gl.canvas.height);\r\n\r\n        caveRenderer.release();\r\n        normalsBlit.release();\r\n        const depth = gaussBlur0.releaseTexture();\r\n        const normal = gaussBlur1.releaseTexture();\r\n\r\n        return { depth, normal };\r\n    });\r\n\r\n\r\nconst drawBasicCaveDemo = (cave: Cave, gl: WebGL2RenderingContext): void => {\r\n    Promise.all([\r\n        CaveRenderer.create(gl, 'shaders/flatWhite.glsl', cave),\r\n    ])\r\n    .then(([caveRenderer]) => {\r\n        gl.viewport(0, 0, gl.canvas.width, gl.canvas.height);\r\n        gl.clearColor(0, 0, 0, 1);\r\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n\r\n        caveRenderer.draw();\r\n\r\n        caveRenderer.release();\r\n    });\r\n};\r\n\r\nconst drawInfoBufferDemo = (cave: Cave, kind: 'depth'|'normal', gl: WebGL2RenderingContext): void => {\r\n    Promise.all([\r\n        BufferRenderer.create(gl, 'shaders/bufferCopy.glsl'),\r\n        buildSurfaceInfoBuffers(gl, 1024, cave)\r\n    ])\r\n    .then(([copyBlit, infoBuffers]) => {\r\n        copyBlit.draw(kind === 'depth' ? infoBuffers.depth : infoBuffers.normal);\r\n\r\n        copyBlit.release();\r\n        gl.deleteTexture(infoBuffers.depth);\r\n        gl.deleteTexture(infoBuffers.normal);\r\n    });\r\n};\r\n\r\nexport const initPost = () :void => {\r\n    const seed = 0.1248;\r\n    const cave = generateCave({ seed, curveBend: 0.75, curveQuality: 10, edgePointDist: 2 });\r\n\r\n    const gl = [0,1,2].map(x => (document.getElementById('canvas'+x) as HTMLCanvasElement).getContext('webgl2') as WebGL2RenderingContext);\r\n\r\n    drawBasicCaveDemo(cave, gl[0]);\r\n    drawInfoBufferDemo(cave, 'depth', gl[1]);\r\n    drawInfoBufferDemo(cave, 'normal', gl[2]);\r\n};","import { Cave } from 'caveGenerator';\r\nimport flatten = require('lodash/flatten');\r\nimport { loadShader } from './shaderLoader';\r\n\r\nconst getFlatVerts = (cave: Cave): number[] =>\r\n    flatten(flatten(cave.edges).map(v => [v.x, v.y]));\r\n\r\nconst getFlatIndices = (cave: Cave): number[] => {\r\n    let baseCount = 0;\r\n    let result: number[] = [];\r\n\r\n    cave.triangles.forEach((tris, index) => {\r\n        result = result.concat(tris.map(x => x + baseCount));\r\n        baseCount += cave.edges[index].length;\r\n    });\r\n\r\n    return result;\r\n};\r\n\r\nexport class CaveRenderer {\r\n    private readonly gl: WebGL2RenderingContext;\r\n    private readonly shader: WebGLProgram;\r\n    private readonly vao: WebGLVertexArrayObject;\r\n    private readonly vertexBuffer: WebGLBuffer;\r\n    private readonly indexBuffer: WebGLBuffer;\r\n\r\n    private readonly indexBufferLen: number;\r\n\r\n    static create(gl: WebGL2RenderingContext, shaderPath: string, cave: Cave): Promise<CaveRenderer> {\r\n        return loadShader(gl, shaderPath)\r\n            .then(shader => new CaveRenderer(gl, cave, shader));\r\n    }\r\n\r\n    private constructor(gl: WebGL2RenderingContext, cave: Cave, shader: WebGLProgram) {\r\n        this.gl = gl;\r\n        this.shader = shader;\r\n\r\n        this.vao = gl.createVertexArray() as WebGLVertexArrayObject;\r\n        gl.bindVertexArray(this.vao);\r\n\r\n        this.vertexBuffer = gl.createBuffer() as WebGLBuffer;\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer);\r\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(getFlatVerts(cave)), gl.STATIC_DRAW);\r\n        gl.enableVertexAttribArray(0);\r\n        gl.vertexAttribPointer(0, 2, gl.FLOAT, false, 0, 0);\r\n\r\n        const indexBufferData = getFlatIndices(cave);\r\n        this.indexBufferLen = indexBufferData.length;\r\n\r\n        this.indexBuffer = gl.createBuffer() as WebGLBuffer;\r\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer);\r\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(indexBufferData), gl.STATIC_DRAW);\r\n    }\r\n\r\n    draw() {\r\n        const gl = this.gl;\r\n\r\n        gl.bindVertexArray(this.vao);\r\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer);\r\n        gl.useProgram(this.shader);\r\n\r\n        gl.drawElements(gl.TRIANGLES, this.indexBufferLen, gl.UNSIGNED_SHORT, 0);\r\n    }\r\n\r\n    release() {\r\n        const gl = this.gl;\r\n\r\n        gl.useProgram(null);\r\n        gl.bindVertexArray(null);\r\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, null);\r\n\r\n        gl.deleteProgram(this.shader);\r\n        gl.deleteBuffer(this.vertexBuffer);\r\n        gl.deleteBuffer(this.indexBuffer);\r\n        gl.deleteVertexArray(this.vao);\r\n    }\r\n}\r\n","var baseFlatten = require('./_baseFlatten');\n\n/**\n * Flattens `array` a single level deep.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to flatten.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * _.flatten([1, [2, [3, [4]], 5]]);\n * // => [1, 2, [3, [4]], 5]\n */\nfunction flatten(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? baseFlatten(array, 1) : [];\n}\n\nmodule.exports = flatten;\n","var arrayPush = require('./_arrayPush'),\n    isFlattenable = require('./_isFlattenable');\n\n/**\n * The base implementation of `_.flatten` with support for restricting flattening.\n *\n * @private\n * @param {Array} array The array to flatten.\n * @param {number} depth The maximum recursion depth.\n * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n * @param {Array} [result=[]] The initial result value.\n * @returns {Array} Returns the new flattened array.\n */\nfunction baseFlatten(array, depth, predicate, isStrict, result) {\n  var index = -1,\n      length = array.length;\n\n  predicate || (predicate = isFlattenable);\n  result || (result = []);\n\n  while (++index < length) {\n    var value = array[index];\n    if (depth > 0 && predicate(value)) {\n      if (depth > 1) {\n        // Recursively flatten arrays (susceptible to call stack limits).\n        baseFlatten(value, depth - 1, predicate, isStrict, result);\n      } else {\n        arrayPush(result, value);\n      }\n    } else if (!isStrict) {\n      result[result.length] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseFlatten;\n","/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\nmodule.exports = arrayPush;\n","var Symbol = require('./_Symbol'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray');\n\n/** Built-in value references. */\nvar spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;\n\n/**\n * Checks if `value` is a flattenable `arguments` object or array.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n */\nfunction isFlattenable(value) {\n  return isArray(value) || isArguments(value) ||\n    !!(spreadableSymbol && value && value[spreadableSymbol]);\n}\n\nmodule.exports = isFlattenable;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","var baseIsArguments = require('./_baseIsArguments'),\n    isObjectLike = require('./isObjectLike');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\nmodule.exports = isArguments;\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nmodule.exports = baseIsArguments;\n","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n","var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nmodule.exports = isArray;\n","import { loadShader } from \"./shaderLoader\";\r\n\r\nexport class BufferRenderer {\r\n    private readonly gl: WebGL2RenderingContext;\r\n    private readonly vao: WebGLVertexArrayObject;\r\n    private readonly vertexBuffer: WebGLBuffer;\r\n    private readonly shader: WebGLProgram;\r\n\r\n    static create(gl: WebGL2RenderingContext, shaderPath: string, ): Promise<BufferRenderer> {\r\n        return loadShader(gl, shaderPath)\r\n            .then(shader => new BufferRenderer(gl, shader));\r\n    }\r\n\r\n    private constructor(gl: WebGL2RenderingContext, shader: WebGLProgram) {\r\n        this.gl = gl;\r\n        this.shader = shader;\r\n\r\n        this.vao = gl.createVertexArray() as WebGLVertexArrayObject;\r\n        gl.bindVertexArray(this.vao);\r\n\r\n        this.vertexBuffer = gl.createBuffer() as WebGLBuffer;\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer);\r\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([ -1,1,-1,-1,1,-1,1,-1,1,1,-1,1 ]), gl.STATIC_DRAW);\r\n        gl.enableVertexAttribArray(0);\r\n        gl.vertexAttribPointer(0, 2, gl.FLOAT, false, 0, 0);\r\n    }\r\n\r\n    draw(texture: WebGLTexture, onPreDraw?: (gl: WebGL2RenderingContext, shader: WebGLProgram) => void) {\r\n        const gl = this.gl;\r\n\r\n        gl.bindVertexArray(this.vao);\r\n        gl.useProgram(this.shader);\r\n\r\n        gl.activeTexture(gl.TEXTURE0);\r\n        gl.bindTexture(gl.TEXTURE_2D, texture);\r\n        const loc_tex = gl.getUniformLocation(this.shader, \"u_tex\");\r\n        gl.uniform1i(loc_tex, 0);\r\n\r\n        if (onPreDraw) onPreDraw(gl, this.shader);\r\n\r\n        gl.drawArrays(gl.TRIANGLES, 0, 6);\r\n    }\r\n\r\n    release() {\r\n        const gl = this.gl;\r\n\r\n        gl.useProgram(null);\r\n        gl.bindVertexArray(null);\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, null);\r\n\r\n        gl.deleteProgram(this.shader);\r\n        gl.deleteBuffer(this.vertexBuffer);\r\n        gl.deleteVertexArray(this.vao);\r\n    }\r\n}","import { FrameBufferTexture } from \"./frameBufferTexture\";\r\nimport { BufferRenderer } from \"./bufferRenderer\";\r\n\r\nexport class GaussianBlur {\r\n    private readonly gl: WebGL2RenderingContext;\r\n    private readonly width: number;\r\n    private readonly height: number;\r\n\r\n    private readonly bufferRenderer: BufferRenderer;\r\n    private readonly frameTex0: FrameBufferTexture;\r\n    private readonly frameTex1: FrameBufferTexture;\r\n\r\n    static create(gl: WebGL2RenderingContext, width: number, height: number): Promise<GaussianBlur> {\r\n        return BufferRenderer.create(gl, 'shaders/gaussianBlur.glsl')\r\n            .then(bufferRenderer => new GaussianBlur(gl, width, height, bufferRenderer));\r\n    }\r\n\r\n    private constructor(gl: WebGL2RenderingContext, width: number, height: number, bufferRenderer: BufferRenderer) {\r\n        this.gl = gl;\r\n        this.width = width;\r\n        this.height = height;\r\n        this.bufferRenderer = bufferRenderer;\r\n        this.frameTex0 = new FrameBufferTexture(gl, width, height);\r\n        this.frameTex1 = new FrameBufferTexture(gl, width, height);\r\n    }\r\n\r\n    run(texture: WebGLTexture, iterations: number) {\r\n        const gl = this.gl;\r\n\r\n        if (iterations < 1) iterations = 1;\r\n\r\n        for (let i = 0; i < iterations; ++i) {\r\n            gl.bindFramebuffer(gl.FRAMEBUFFER, this.frameTex0.framebuffer);\r\n            if (i === 0) gl.viewport(0, 0, this.width, this.height);\r\n\r\n            this.bufferRenderer.draw(i === 0 ? texture : this.frameTex1.texture, (gl, shader) => {\r\n                gl.uniform2f(gl.getUniformLocation(shader, \"u_resolution\"), this.width, this.height);\r\n                gl.uniform2f(gl.getUniformLocation(shader, \"u_direction\"), 1, 0);\r\n            });\r\n\r\n            gl.bindFramebuffer(gl.FRAMEBUFFER, this.frameTex1.framebuffer);\r\n\r\n            this.bufferRenderer.draw(this.frameTex0.texture, (gl, shader) => {\r\n                gl.uniform2f(gl.getUniformLocation(shader, \"u_resolution\"), this.width, this.height);\r\n                gl.uniform2f(gl.getUniformLocation(shader, \"u_direction\"), 0, 1);\r\n            });\r\n        }\r\n    }\r\n\r\n    get resultTexture(): WebGLTexture {\r\n        return this.frameTex1.texture;\r\n    }\r\n\r\n    release() {\r\n        this.bufferRenderer.release();\r\n        this.frameTex0.release();\r\n        this.frameTex1.release();\r\n    }\r\n\r\n    releaseTexture(): WebGLTexture {\r\n        this.bufferRenderer.release();\r\n        this.frameTex0.release();\r\n        return this.frameTex1.releaseTexture();\r\n    }\r\n}"],"sourceRoot":""}